var searchIndex = JSON.parse('{\
"aero":{"doc":"Aero","t":[0,0,3,12,12,0,17,3,12,12,12,12,12,12,12,12,12,11,11,0,3,12,12,12,12,12,12,12,12,12,11,11,11,11,17,17,5,5,0,0,0,5,3,12,12,11,3,12,12,12,12,12,12,11,3,12,12,12,12,12,12,5,3,12,0,0,5,5,5,5,5,5,5,5,5,5,5,0,17,17,17,17,17,17,17,17,17,6,7,3,12,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,12,11,3,12,12,12,12,12,12,12,11,11,11,11,5,5,5,5,5,5,5,5,0,5,5,5,0,0,17,17,3,11,5,5,5,0,3,12,12,11,11,5,5,5,0,0,17,17,17,17,17,17,17,17,7,7,5,5,0,17,3,12,3,12,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,12,12,11,11,11,11,3,12,12,11,11,11,11,5,5,5,5,5,5,0,5,5,5,0,3,12,11,11,11,11,7,5,0,0,5,5,4,13,13,13,13,6,0,0,0,5,5,5,0,3,12,11,11,0,0,17,17,3,12,12,3,12,0,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,12,11,0,3,12,3,12,12,12,11,11,11,11,11,11,0,5,7,17,5,5,14,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["acpi","mcfg","MCFG","header","reserved","rsdp","RSDP_SIGNATURE","RSDP","signature","checksum","oemid","revision","rsdt_address","length","xsdt_address","extended_checksum","reserved","lookup","get_sdt_address","sdt","SDT","signature","length","revision","checksum","oem_id","oem_table_id","oem_revision","creator_id","creator_revision","from_address","data_address","data_len","get_signature","LOOKUP_START_ADDRESS","LOOKUP_END_ADDRESS","look_up_tables","init","arch","x86_64","gdt","LoadGDT","GDTDescriptor","size","offset","new","GDTEntry","limit_low","base_low","base_middle","access_byte","limit_hi_flags","base_hi","new","GDT","kernel_null","kernel_code","kernel_data","user_null","user_code","user_data","init","GLOBAL_DESCRIPTOR_TABLE","__private_field","interrupts","exceptions","divide_by_zero","debug","non_maskable","breakpoint","overflow","bound_range","invalid_opcode","device_not_available","double_fault","invalid_tss","page_fault","idt","IDT_ENTRIES","PIC1_COMMAND","PIC1_DATA","PIC2_COMMAND","PIC2_DATA","PIC_EOI","ICW1_INIT","ICW1_ICW4","ICW4_8086","IDTInterruptHandlerFn","IDT","IDTFlags","bits","PRESENT","RING_0","RING_1","RING_2","RING_3","SS","INTERRUPT","TRAP","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","IDTDescriptor","size","offset","new","IDTEntry","offset_low","selector","ist","type_attr","offset_middle","offset_hi","ignore","null","set_flags","set_offset","set_function","init","load_idt","disable_interrupts","enable_interrupts","halt","end_pic1","end_pic2","load_pic","irq","pit","keyboard","mouse","memory","alloc","HEAP_START","HEAP_SIZE","AeroSystemAllocator","new","alloc_error_handler","get_page_range","init_heap","paging","BootInfoFrameAllocator","memory_map","next","init","usable_frames","init","init_offset_page_table","active_level_4_table","drivers","keyboard","LEFT_SHIFT_PRESSED","LEFT_SHIFT_RELEASED","RIGHT_SHIFT_PRESSED","RIGHT_SHIFT_RELEASED","SPACEBAR_PRESSED","ENTER_PRESSED","BACKSPACE_PRESSED","ASCII_TABLE","IS_LEFT_SHIFT_PRESSED","IS_RIGHT_SHIFT_PRESSED","translate_keystroke","handle","mouse","MOUSE_WAIT_TIMEOUT","MOUSE","__private_field","MouseFlags","bits","LEFT_BUTTON","RIGHT_BUTTON","MIDDLE_BUTTON","ALWAYS_ONE","X_SIGN","Y_SIGN","X_OVERFLOW","Y_OVERFLOW","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","MouseState","x","y","flags","new","is_left_button_pressed","is_right_button_pressed","is_middle_button_pressed","Mouse","cycle","state","new","process_mouse_packet","process_collected_packet","draw_mouse_pointer","sign_extend","handle","mouse_wait","mouse_wait_input","mouse_write","init","panic","rust_begin_unwind","rust_eh_personality","_Unwind_Resume","pit","PITDescriptor","ticks_since_epoch","new","sleep","tick","get_ticks_since_epoch","PIT","init","syscall","fs","open","close","SyscallError","NotPermitted","NoEntry","InvalidValue","NoCall","SyscallResult","tests","utils","io","outb","inb","wait","memory","Locked","inner","new","lock","vga","buffer","BUFFER_HEIGHT","BUFFER_WIDTH","ScreenChar","character","color_code","Buffer","chars","color","Color","Black","Blue","Green","Cyan","Red","Magenta","Brown","LightGray","DarkGray","LightBlue","LightGreen","LightCyan","LightRed","Pink","Yellow","White","ColorCode","0","new","rendy","RENDERER","__private_field","Rendy","column_position","color_code","buffer","string","byte","new_line","clear_row","clear_screen","clear_current","log","info","AERO_SYSTEM_ALLOCATOR","ASCII_INTRO","__impl_start","kernel_main","print","println","dbg","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","deref","deref","deref","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","sub","sub","eq","ne","eq","ne","eq","ne","eq","eq","ne","cmp","cmp","partial_cmp","partial_cmp","sub_assign","sub_assign","not","not","bitand","bitand","bitor","bitor","bitxor","bitxor","bitand_assign","bitand_assign","bitor_assign","bitor_assign","bitxor_assign","bitxor_assign","hash","hash","write_str","from_iter","from_iter","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","extend","extend","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","alloc","dealloc","allocate_frame","initialize","initialize","initialize"],"q":["aero","aero::acpi","aero::acpi::mcfg","","","aero::acpi","aero::acpi::rsdp","","","","","","","","","","","","","aero::acpi","aero::acpi::sdt","","","","","","","","","","","","","","aero::acpi","","","","aero","aero::arch","aero::arch::x86_64","aero::arch::x86_64::gdt","","","","","","","","","","","","","","","","","","","","","","","aero::arch::x86_64","aero::arch::x86_64::interrupts","aero::arch::x86_64::interrupts::exceptions","","","","","","","","","","","aero::arch::x86_64::interrupts","aero::arch::x86_64::interrupts::idt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aero::arch::x86_64::interrupts","aero::arch::x86_64::interrupts::irq","","","aero::arch::x86_64","aero::arch::x86_64::memory","aero::arch::x86_64::memory::alloc","","","","","","","aero::arch::x86_64::memory","aero::arch::x86_64::memory::paging","","","","","","","","aero","aero::drivers","aero::drivers::keyboard","","","","","","","","","","","","aero::drivers","aero::drivers::mouse","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aero","aero::panic","","","aero","aero::pit","","","","","","","","aero","aero::syscall","aero::syscall::fs","","aero::syscall","","","","","","aero","","aero::utils","aero::utils::io","","","aero::utils","aero::utils::memory","","","","aero","aero::vga","aero::vga::buffer","","","","","","","aero::vga","aero::vga::color","","","","","","","","","","","","","","","","","","","","aero::vga","aero::vga::rendy","","","","","","","","","","","","aero","aero::log","aero","","","","","","","aero::acpi::mcfg","","","","","","","","","aero::acpi::rsdp","","","","","","","","","aero::acpi::sdt","","","","","","","","","aero::arch::x86_64::gdt","","","","","","","","","","","","","","","","","","","","","","","","","","","","aero::arch::x86_64::interrupts::idt","","","","","","","","","","","","","","","","","","","","","","","","","aero::arch::x86_64::memory::alloc","","","","","","","aero::arch::x86_64::memory::paging","","","","","","","aero::drivers::mouse","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aero::pit","","","","","","","aero::syscall","","","","","","","aero::utils::memory","","","","","","","aero::vga::buffer","","","","","","","","","","","","","","","","aero::vga::color","","","","","","","","","","","","","","","","","","aero::vga::rendy","","","","","","","","","","","","","","aero::arch::x86_64::gdt","aero::drivers::mouse","aero::vga::rendy","aero::acpi::mcfg","aero::acpi::rsdp","aero::acpi::sdt","aero::arch::x86_64::interrupts::idt","aero::drivers::mouse","","aero::vga::buffer","aero::vga::color","","aero::arch::x86_64::interrupts::idt","aero::drivers::mouse","aero::arch::x86_64::interrupts::idt","","aero::drivers::mouse","","aero::vga::buffer","","aero::vga::color","","","aero::arch::x86_64::interrupts::idt","aero::drivers::mouse","aero::arch::x86_64::interrupts::idt","aero::drivers::mouse","aero::arch::x86_64::interrupts::idt","aero::drivers::mouse","aero::arch::x86_64::interrupts::idt","aero::drivers::mouse","aero::arch::x86_64::interrupts::idt","aero::drivers::mouse","aero::arch::x86_64::interrupts::idt","aero::drivers::mouse","aero::arch::x86_64::interrupts::idt","aero::drivers::mouse","aero::arch::x86_64::interrupts::idt","aero::drivers::mouse","aero::arch::x86_64::interrupts::idt","aero::drivers::mouse","aero::arch::x86_64::interrupts::idt","aero::drivers::mouse","aero::arch::x86_64::interrupts::idt","aero::drivers::mouse","aero::vga::rendy","aero::arch::x86_64::interrupts::idt","aero::drivers::mouse","aero::arch::x86_64::interrupts::idt","aero::drivers::mouse","aero::arch::x86_64::interrupts::idt","aero::drivers::mouse","aero::arch::x86_64::interrupts::idt","aero::drivers::mouse","aero::arch::x86_64::interrupts::idt","aero::drivers::mouse","aero::arch::x86_64::interrupts::idt","aero::drivers::mouse","aero::acpi::mcfg","aero::acpi::rsdp","aero::acpi::sdt","aero::arch::x86_64::interrupts::idt","","aero::drivers::mouse","aero::vga::buffer","aero::vga::color","","aero::drivers::mouse","aero::utils::memory","","aero::arch::x86_64::memory::paging","aero::arch::x86_64::gdt","aero::drivers::mouse","aero::vga::rendy"],"d":["The ACPI (Advanced Configuration and Power Interface) …","","The ACPI MCFG table describes the location of the PCI …","","","","The RSDP (Root System Description Pointer)’s signature.","","","","","","","","","","","","Get the SDT address.","","","","","","","","","","","","Get SDT from address.","Get the address of this tables data.","Get the length of this tables data.","Get the SDT’s signature.","","","","Initialize ACPI tables.","","","The GDT contains entries telling the CPU about memory …","Load the GDT using inline assembly.","The GDT Descriptor containing the size of offset of the …","The size of the table subtracted by 1. The size of the …","The linear address of the table.","Create a new GDT descriptor.","","","","","","The limit high and the flags.","","Create a new GDT entry.","The GDT.","The kernel null segment: <code>0x00</code>.","The kernel code segment: <code>0x08</code>.","The kernel data segment: <code>0x10</code>.","The user null segment.","The user code segment.","The user data segment.","Initialize the GDT.","The GDT (Global Descriptor Table).","","","","","","","","","","","","","","","The IDT is similar to the Global Descriptor Table in …","Declare an IDT of 256 entries. Although not all entries …","","","","","","","","","","","","","","","","","","","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","","Create a new IDT descriptor.","","","","","","","","","Create a new IDT entry with all values defaulted to 0, ie …","Set the IDT entry flags.","Set the IDT entry offset.","Set the handler function of the IDT entry.","Initialize the IDT.","","","","Halt the CPU. Will resume when interrupt is recieved if …","","","","","","","","","","","","","","","","Initialize the heap.","","Frame allocator responsible for returning usable frames …","","","","Returns an iterator over the usable frames specified in …","Initialize paging.","Initialize a new offset page table.","Get a mutable reference to the active level 4 page table.","","","","","","","","","","","","","","","","","","","Represents the flags currently set for the mouse.","","","","","Whether or not the packet is valid or not.","Whether or not the x delta is negative.","Whether or not the y delta is negative.","Whether or not the x delta overflowed.","Whether or not the y delta overflowed.","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","","","Create a new mouse state","","","","","","","","","","","","Handle the mouse interrupt.","","","","Initialise the PS/2 Mouse.","","","","","The PIT (Programmable Interval Timer) chip basically …","","CPU ticks since epoch.","Create a new PIT descriptor.","","Increments ticks since epoch. This function is called on …","Get the CPU ticks since epoch.","The PIT (Programmable Interval Timer)","Initialise the PIT chip.","","","","Close a file.","","Operation not permitted.","No such file or directory.","Invalid argument.","Syscall not implemented.","","","","Wrapper functions for the hardware IO using respective …","Wrapper function to the <code>outb</code> assembly instruction used to …","Wrapper function to the <code>inb</code> assembly instruction used to …","This function is called after every <code>outb</code> instruction as …eturns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","","","","","","","","","","","","","","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Adds the set of flags.","Adds the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,1,0,0,0,2,2,2,2,2,2,2,2,2,2,2,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,4,4,4,0,5,5,5,5,5,5,5,0,6,6,6,6,6,6,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,9,9,9,0,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,15,15,15,15,15,15,15,0,16,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,17,0,0,0,0,0,0,0,18,18,18,18,0,0,0,0,0,0,0,0,0,19,19,19,0,0,0,0,0,20,20,0,21,0,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,23,23,0,0,24,0,25,25,25,25,25,25,25,25,25,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,5,5,5,5,5,5,5,6,6,6,6,6,6,6,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,12,12,12,12,12,12,12,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,16,16,16,16,16,16,16,17,17,17,17,17,17,17,18,18,18,18,18,18,18,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,25,25,25,25,25,25,25,7,13,24,1,2,3,8,14,15,20,22,23,8,14,8,8,14,14,20,20,22,23,23,8,14,8,14,8,14,8,14,8,14,8,14,8,14,8,14,8,14,8,14,8,14,25,8,14,8,14,8,14,8,14,8,14,8,14,1,2,3,8,10,14,20,22,23,14,19,19,12,7,13,24],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["usize",15]],["option",4]],[[],["usize",15]],null,null,null,null,null,null,null,null,null,null,null,[[["offsetpagetable",3],["u64",15]]],[[],["usize",15]],[[],["usize",15]],[[],["str",15]],null,null,[[["sdt",3],["bool",15],["offsetpagetable",3]]],[[["offsetpagetable",3]]],null,null,null,null,null,null,null,[[["u16",15],["u64",15]]],null,null,null,null,null,null,null,[[["u16",15],["u8",15]]],null,null,null,null,null,null,null,[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["idtflags",3]],[[],["idtflags",3]],[[],["u8",15]],[[["u8",15]],[["idtflags",3],["option",4]]],[[["u8",15]],["idtflags",3]],[[["u8",15]],["idtflags",3]],[[],["bool",15]],[[],["bool",15]],[[["idtflags",3]],["bool",15]],[[["idtflags",3]],["bool",15]],[[["idtflags",3]]],[[["idtflags",3]]],[[["idtflags",3]]],[[["idtflags",3],["bool",15]]],null,null,null,[[["u16",15],["u64",15]]],null,null,null,null,null,null,null,null,[[]],[[["idtflags",3]]],[[["usize",15],["u16",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],null,null,null,null,null,[[]],[[["layout",3]]],[[],["pagerangeinclusive",3]],[[["offsetpagetable",3]],[["result",4],["maptoerror",4]]],null,null,null,null,[[["memorymap",3]]],[[]],[[["bootinfo",3]]],[[["virtaddr",3]],["offsetpagetable",3]],[[["virtaddr",3]],["pagetable",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[["bool",15],["u8",15]],["char",15]],[[["u8",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["mouseflags",3]],[[],["mouseflags",3]],[[],["u8",15]],[[["u8",15]],[["mouseflags",3],["option",4]]],[[["u8",15]],["mouseflags",3]],[[["u8",15]],["mouseflags",3]],[[],["bool",15]],[[],["bool",15]],[[["mouseflags",3]],["bool",15]],[[["mouseflags",3]],["bool",15]],[[["mouseflags",3]]],[[["mouseflags",3]]],[[["mouseflags",3]]],[[["bool",15],["mouseflags",3]]],null,null,null,null,[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,[[]],[[["u8",15]]],[[]],[[]],[[["u8",15]],["i16",15]],[[["u8",15]]],[[]],[[]],[[["u8",15]]],[[]],null,[[["panicinfo",3]]],[[]],[[]],null,null,null,[[]],[[["duration",3]]],[[]],[[],["u64",15]],null,[[]],null,null,[[["usize",15]],[["result",4],["usize",15],["syscallerror",4]]],[[["usize",15]],[["result",4],["usize",15],["syscallerror",4]]],null,null,null,null,null,null,null,null,null,[[["u16",15],["u8",15]]],[[["u16",15]],["u8",15]],[[]],null,null,null,[[]],[[],["mutexguard",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["color",4]],["colorcode",3]],null,null,null,null,null,null,null,[[["str",15]]],[[["u8",15]]],[[]],[[["usize",15]]],[[]],[[]],null,[[["str",15]]],null,null,[[["bootinfo",3]]],[[["bootinfo",3]]],null,null,null,[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["gdt",3]],[[],["mutex",6]],[[],["mutex",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["idtflags",3]],["idtflags",3]],[[["mouseflags",3]],["mouseflags",3]],[[["idtflags",3]],["bool",15]],[[["idtflags",3]],["bool",15]],[[["mouseflags",3]],["bool",15]],[[["mouseflags",3]],["bool",15]],[[["screenchar",3]],["bool",15]],[[["screenchar",3]],["bool",15]],[[["color",4]],["bool",15]],[[["colorcode",3]],["bool",15]],[[["colorcode",3]],["bool",15]],[[["idtflags",3]],["ordering",4]],[[["mouseflags",3]],["ordering",4]],[[["idtflags",3]],[["ordering",4],["option",4]]],[[["mouseflags",3]],[["ordering",4],["option",4]]],[[["idtflags",3]]],[[["mouseflags",3]]],[[],["idtflags",3]],[[],["mouseflags",3]],[[["idtflags",3]],["idtflags",3]],[[["mouseflags",3]],["mouseflags",3]],[[["idtflags",3]],["idtflags",3]],[[["mouseflags",3]],["mouseflags",3]],[[["idtflags",3]],["idtflags",3]],[[["mouseflags",3]],["mouseflags",3]],[[["idtflags",3]]],[[["mouseflags",3]]],[[["idtflags",3]]],[[["mouseflags",3]]],[[["idtflags",3]]],[[["mouseflags",3]]],[[]],[[]],[[["str",15]],["result",6]],[[["intoiterator",8]],["idtflags",3]],[[["intoiterator",8]],["mouseflags",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[],["mcfg",3]],[[],["rsdp",3]],[[],["sdt",3]],[[],["idtflags",3]],[[],["idtentry",3]],[[],["mouseflags",3]],[[],["screenchar",3]],[[],["color",4]],[[],["colorcode",3]],[[],["mouseflags",3]],[[["layout",3]]],[[["layout",3]]],[[],[["option",4],["physframe",3]]],[[]],[[]],[[]]],"p":[[3,"MCFG"],[3,"RSDP"],[3,"SDT"],[3,"GDTDescriptor"],[3,"GDTEntry"],[3,"GDT"],[3,"GLOBAL_DESCRIPTOR_TABLE"],[3,"IDTFlags"],[3,"IDTDescriptor"],[3,"IDTEntry"],[3,"AeroSystemAllocator"],[3,"BootInfoFrameAllocator"],[3,"MOUSE"],[3,"MouseFlags"],[3,"MouseState"],[3,"Mouse"],[3,"PITDescriptor"],[4,"SyscallError"],[3,"Locked"],[3,"ScreenChar"],[3,"Buffer"],[4,"Color"],[3,"ColorCode"],[3,"RENDERER"],[3,"Rendy"]]},\
"bit_field":{"doc":"Provides the abstraction of a bit field, which allows for …","t":[8,10,10,10,10,10,8,10,10,10,10,10],"n":["BitField","bit_length","get_bit","get_bits","set_bit","set_bits","BitArray","bit_length","get_bit","get_bits","set_bit","set_bits"],"q":["bit_field","","","","","","","","","","",""],"d":["A generic trait which provides methods for extracting and …","Returns the length, eg number of bits, in this bit field.","Obtains the bit at the index <code>bit</code>; note that index 0 is …","Obtains the range of bits specified by <code>range</code>; note that …","Sets the bit at the index <code>bit</code> to the value <code>value</code> (where …","Sets the range of bits defined by the range <code>range</code> to the …","","Returns the length, eg number of bits, in this bit array.","Obtains the bit at the index <code>bit</code>; note that index 0 is …","Obtains the range of bits specified by <code>range</code>; note that …","Sets the bit at the index <code>bit</code> to the value <code>value</code> (where …","Sets the range of bits defined by the range <code>range</code> to the …"],"i":[0,1,1,1,1,1,0,2,2,2,2,2],"f":[null,[[],["usize",15]],[[["usize",15]],["bool",15]],[[["usize",15],["range",3]]],[[["usize",15],["bool",15]]],[[["usize",15],["range",3]]],null,[[],["usize",15]],[[["usize",15]],["bool",15]],[[["usize",15],["range",3]]],[[["usize",15],["bool",15]]],[[["usize",15],["range",3]]]],"p":[[8,"BitField"],[8,"BitArray"]]},\
"bitflags":{"doc":"A typesafe bitmask flag generator useful for sets of …","t":[14],"n":["bitflags"],"q":["bitflags"],"d":["The macro used to generate the flag structure."],"i":[0],"f":[null],"p":[]},\
"bootloader":{"doc":"This library part of the bootloader allows kernels to …","t":[0,3,3,12,12,3,12,12,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,12,12,11,3,12,12,12,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["bootinfo","MemoryMap","MemoryRegion","range","region_type","FrameRange","start_frame_number","end_frame_number","MemoryRegionType","Usable","InUse","Reserved","AcpiReclaimable","AcpiNvs","BadMemory","Kernel","KernelStack","PageTable","Bootloader","FrameZero","Empty","BootInfo","Package","BootInfo","memory_map","physical_memory_offset","tls_template","TlsTemplate","start_addr","file_size","mem_size","entry_point","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","deref","deref_mut","fmt","fmt","fmt","fmt","fmt","fmt","eq","ne","eq","ne","eq","eq","ne","clone","clone","clone","clone","new","is_empty","start_addr","end_addr"],"q":["bootloader","bootloader::bootinfo","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bootloader","bootloader::bootinfo","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Provides boot information to the kernel.","A map of the physical memory regions of the underlying …","Represents a region of physical memory.","The range of frames that belong to the region.","The type of the region.","A range of frames with an exclusive upper bound.","The frame <em>number</em> of the first 4KiB frame in the region.","The frame <em>number</em> of the first 4KiB frame that does no …","Represents possible types for memory regions.","Unused memory, can be freely used by the kernel.","Memory that is already in use.","Memory reserved by the hardware. Not usable.","ACPI reclaimable memory","ACPI NVS memory","Area containing bad memory","Memory used for loading the kernel.","Memory used for the kernel stack.","Memory used for creating page tables.","Memory used by the bootloader.","Frame at address zero.","An empty region with size 0","Memory used for storing the boot information.","Memory used for storing the supplied package","This structure represents the information that the …","A map of the physical memory regions of the underlying …","The offset into the virtual address space where the …","Returns information about the thread local storage …","Information about the thread local storage (TLS) template.","The virtual start address of the thread local storage …","The number of data bytes in the template.","The total number of bytes that the TLS segment should …","Defines the entry point function.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new FrameRange from the passed start_addr and …","Returns true if the frame range contains no frames.","Returns the physical start address of the memory region.","Returns the physical end address of the memory region."],"i":[0,0,0,1,1,0,2,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,4,4,4,0,5,5,5,0,6,6,6,6,6,6,6,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,4,4,4,5,5,5,5,5,5,5,6,6,6,1,2,3,4,5,1,1,2,2,3,5,5,1,2,3,5,2,2,2,2],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["option",4],["tlstemplate",3]]],null,null,null,null,null,[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["memoryregion",3]],["bool",15]],[[["memoryregion",3]],["bool",15]],[[["framerange",3]],["bool",15]],[[["framerange",3]],["bool",15]],[[["memoryregiontype",4]],["bool",15]],[[["tlstemplate",3]],["bool",15]],[[["tlstemplate",3]],["bool",15]],[[],["memoryregion",3]],[[],["framerange",3]],[[],["memoryregiontype",4]],[[],["tlstemplate",3]],[[["u64",15]]],[[],["bool",15]],[[],["u64",15]],[[],["u64",15]]],"p":[[3,"MemoryRegion"],[3,"FrameRange"],[4,"MemoryRegionType"],[3,"BootInfo"],[3,"TlsTemplate"],[3,"MemoryMap"]]},\
"lazy_static":{"doc":"A macro for declaring lazily evaluated statics.","t":[8,5,14],"n":["LazyStatic","initialize","lazy_static"],"q":["lazy_static","",""],"d":["Support trait for enabling a few common operation on lazy …","Takes a shared reference to a lazy static and initializes …",""],"i":[0,0,0],"f":[null,[[]],null],"p":[]},\
"lock_api":{"doc":"This library provides type-safe and fully-featured <code>Mutex</code> …","t":[3,3,8,18,16,10,10,10,11,8,10,11,8,16,16,10,10,3,3,3,8,18,10,3,3,3,3,8,18,16,10,10,10,10,10,10,11,8,10,10,11,11,8,10,8,16,16,10,10,10,10,8,10,10,8,10,10,8,10,10,10,10,10,8,10,11,8,10,10,8,10,10,10,10,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["GuardSend","GuardNoSend","RawMutex","INIT","GuardMarker","lock","try_lock","unlock","is_locked","RawMutexFair","unlock_fair","bump","RawMutexTimed","Duration","Instant","try_lock_for","try_lock_until","Mutex","MutexGuard","MappedMutexGuard","GetThreadId","INIT","nonzero_thread_id","RawReentrantMutex","ReentrantMutex","ReentrantMutexGuard","MappedReentrantMutexGuard","RawRwLock","INIT","GuardMarker","lock_shared","try_lock_shared","unlock_shared","lock_exclusive","try_lock_exclusive","unlock_exclusive","is_locked","RawRwLockFair","unlock_shared_fair","unlock_exclusive_fair","bump_shared","bump_exclusive","RawRwLockDowngrade","downgrade","RawRwLockTimed","Duration","Instant","try_lock_shared_for","try_lock_shared_until","try_lock_exclusive_for","try_lock_exclusive_until","RawRwLockRecursive","lock_shared_recursive","try_lock_shared_recursive","RawRwLockRecursiveTimed","try_lock_shared_recursive_for","try_lock_shared_recursive_until","RawRwLockUpgrade","lock_upgradable","try_lock_upgradable","unlock_upgradable","upgrade","try_upgrade","RawRwLockUpgradeFair","unlock_upgradable_fair","bump_upgradable","RawRwLockUpgradeDowngrade","downgrade_upgradable","downgrade_to_upgradable","RawRwLockUpgradeTimed","try_lock_upgradable_for","try_lock_upgradable_until","try_upgrade_for","try_upgrade_until","RwLock","RwLockReadGuard","RwLockWriteGuard","RwLockUpgradableReadGuard","MappedRwLockReadGuard","MappedRwLockWriteGuard","borrow","borrow_mut","try_from","from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","drop","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","default","default","default","INIT","is_locked","bump","new","into_inner","const_new","lock","try_lock","get_mut","is_locked","force_unlock","raw","data_ptr","force_unlock_fair","try_lock_for","try_lock_until","mutex","map","try_map","unlocked","unlock_fair","unlocked_fair","bump","map","try_map","unlock_fair","INIT","INIT","lock","try_lock","unlock","is_locked","unlock_fair","bump","try_lock_until","try_lock_for","new","into_inner","const_new","lock","try_lock","get_mut","is_locked","force_unlock","raw","data_ptr","force_unlock_fair","try_lock_for","try_lock_until","remutex","map","try_map","unlocked","unlock_fair","unlocked_fair","bump","map","try_map","unlock_fair","INIT","is_locked","bump_shared","bump_exclusive","bump_upgradable","new","into_inner","const_new","read","try_read","write","try_write","get_mut","is_locked","force_unlock_read","force_unlock_write","raw","data_ptr","force_unlock_read_fair","force_unlock_write_fair","try_read_for","try_read_until","try_write_for","try_write_until","read_recursive","try_read_recursive","try_read_recursive_for","try_read_recursive_until","upgradable_read","try_upgradable_read","try_upgradable_read_for","try_upgradable_read_until","rwlock","map","try_map","unlocked","unlock_fair","unlocked_fair","bump","rwlock","map","try_map","unlocked","downgrade","downgrade_to_upgradable","unlock_fair","unlocked_fair","bump","rwlock","unlocked","upgrade","try_upgrade","unlock_fair","unlocked_fair","bump","downgrade","try_upgrade_for","try_upgrade_until","map","try_map","unlock_fair","map","try_map","unlock_fair"],"q":["lock_apid":["Marker type which indicates that the Guard type for a …","Marker type which indicates that the Guard type for a …","Basic operations for a mutex.","Initial value for an unlocked mutex.","Marker type which determines whether a lock guard should …","Acquires this mutex, blocking the current thread until it …","Attempts to acquire this mutex without blocking. Returns …","Unlocks this mutex.","Checks whether the mutex is currently locked.","Additional methods for mutexes which support fair …","Unlocks this mutex using a fair unlock protocol.","Temporarily yields the mutex to a waiting thread if there …","Additional methods for mutexes which support locking with …","Duration type used for <code>try_lock_for</code>.","Instant type used for <code>try_lock_until</code>.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","A mutual exclusion primitive useful for protecting shared …","An RAII implementation of a “scoped lock” of a mutex. …","An RAII mutex guard returned by <code>MutexGuard::map</code>, which …","Helper trait which returns a non-zero thread ID.","Initial value.","Returns a non-zero thread ID which identifies the current …","A raw mutex type that wraps another raw mutex to provide …","A mutex which can be recursively locked by a single …","An RAII implementation of a “scoped lock” of a …","An RAII mutex guard returned by <code>ReentrantMutexGuard::map</code>, …","Basic operations for a reader-writer lock.","Initial value for an unlocked <code>RwLock</code>.","Marker type which determines whether a lock guard should …","Acquires a shared lock, blocking the current thread until …","Attempts to acquire a shared lock without blocking.","Releases a shared lock.","Acquires an exclusive lock, blocking the current thread …","Attempts to acquire an exclusive lock without blocking.","Releases an exclusive lock.","Checks if this <code>RwLock</code> is currently locked in any way.","Additional methods for RwLocks which support fair …","Releases a shared lock using a fair unlock protocol.","Releases an exclusive lock using a fair unlock protocol.","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields an exclusive lock to a waiting thread …","Additional methods for RwLocks which support atomically …","Atomically downgrades an exclusive lock into a shared …","Additional methods for RwLocks which support locking with …","Duration type used for <code>try_lock_for</code>.","Instant type used for <code>try_lock_until</code>.","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire an exclusive lock until a timeout is …","Attempts to acquire an exclusive lock until a timeout is …","Additional methods for RwLocks which support recursive …","Acquires a shared lock without deadlocking in case of a …","Attempts to acquire a shared lock without deadlocking in …","Additional methods for RwLocks which support recursive …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Additional methods for RwLocks which support atomically …","Acquires an upgradable lock, blocking the current thread …","Attempts to acquire an upgradable lock without blocking.","Releases an upgradable lock.","Upgrades an upgradable lock to an exclusive lock.","Attempts to upgrade an upgradable lock to an exclusive …","Additional methods for RwLocks which support upgradable …","Releases an upgradable lock using a fair unlock protocol.","Temporarily yields an upgradable lock to a waiting thread …","Additional methods for RwLocks which support upgradable …","Downgrades an upgradable lock to a shared lock.","Downgrades an exclusive lock to an upgradable lock.","Additional methods for RwLocks which support upgradable …","Attempts to acquire an upgradable lock until a timeout is …","Attempts to acquire an upgradable lock until a timeout is …","Attempts to upgrade an upgradable lock to an exclusive …","Attempts to upgrade an upgradable lock to an exclusive …","A reader-writer lock","RAII structure used to release the shared read access of …","RAII structure used to release the exclusive write access …","RAII structure used to release the upgradable read access …","An RAII read lock guard returned by <code>RwLockReadGuard::map</code>, …","An RAII write lock guard returned by <code>RwLockWriteGuard::map</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Initial value for an unlocked mutex.","Checks whether the mutex is currently locked.","Temporarily yields the mutex to a waiting thread if there …","Creates a new mutex in an unlocked state ready for use.","Consumes this mutex, returning the underlying data.","Creates a new mutex based on a pre-existing raw mutex.","Acquires a mutex, blocking the current thread until it is …","Attempts to acquire this lock.","Returns a mutable reference to the underlying data.","Checks whether the mutex is currently locked.","Forcibly unlocks the mutex.","Returns the underlying raw mutex object.","Returns a raw pointer to the underlying data.","Forcibly unlocks the mutex using a fair unlock procotol.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Returns a reference to the original <code>Mutex</code> object.","Makes a new <code>MappedMutexGuard</code> for a component of the …","Attempts to make a new <code>MappedMutexGuard</code> for a component …","Temporarily unlocks the mutex to execute the given …","Unlocks the mutex using a fair unlock protocol.","Temporarily unlocks the mutex to execute the given …","Temporarily yields the mutex to a waiting thread if there …","Makes a new <code>MappedMutexGuard</code> for a component of the …","Attempts to make a new <code>MappedMutexGuard</code> for a component …","Unlocks the mutex using a fair unlock protocol.","Initial value.","Initial value for an unlocked mutex.","Acquires this mutex, blocking if it’s held by another …","Attempts to acquire this mutex without blocking. Returns …","Unlocks this mutex. The inner mutex may not be unlocked if…","Checks whether the mutex is currently locked.","Unlocks this mutex using a fair unlock protocol. The …","Temporarily yields the mutex to a waiting thread if there …","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Creates a new reentrant mutex in an unlocked state ready …","Consumes this mutex, returning the underlying data.","Creates a new reentrant mutex based on a pre-existing raw …","Acquires a reentrant mutex, blocking the current thread …","Attempts to acquire this lock.","Returns a mutable reference to the underlying data.","Checks whether the mutex is currently locked.","Forcibly unlocks the mutex.","Returns the underlying raw mutex object.","Returns a raw pointer to the underlying data.","Forcibly unlocks the mutex using a fair unlock protocol.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Returns a reference to the original <code>ReentrantMutex</code> object.","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Temporarily unlocks the mutex to execute the given …","Unlocks the mutex using a fair unlock protocol.","Temporarily unlocks the mutex to execute the given …","Temporarily yields the mutex to a waiting thread if there …","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Unlocks the mutex using a fair unlock protocol.","Initial value for an unlocked <code>RwLock</code>.","Checks if this <code>RwLock</code> is currently locked in any way.","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields an exclusive lock to a waiting thread …","Temporarily yields an upgradable lock to a waiting thread …","Creates a new instance of an <code>RwLock<T></code> which is unlocked.","Consumes this <code>RwLock</code>, returning the underlying data.","Creates a new new instance of an <code>RwLock<T></code> based on a …","Locks this <code>RwLock</code> with shared read access, blocking the …","Attempts to acquire this <code>RwLock</code> with shared read access.","Locks this <code>RwLock</code> with exclusive write access, blocking …","Attempts to lock this <code>RwLock</code> with exclusive write access.","Returns a mutable reference to the underlying data.","Checks whether this <code>RwLock</code> is currently locked in any way.","Forcibly unlocks a read lock.","Forcibly unlocks a write lock.","Returns the underlying raw reader-writer lock object.","Returns a raw pointer to the underlying data.","Forcibly unlocks a read lock using a fair unlock procotol.","Forcibly unlocks a write lock using a fair unlock …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with exclusive write …","Attempts to acquire this <code>RwLock</code> with exclusive write …","Locks this <code>RwLock</code> with shared read access, blocking the …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Locks this <code>RwLock</code> with upgradable read access, blocking …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Returns a reference to the original reader-writer lock …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily yields the <code>RwLock</code> to a waiting thread if …","Returns a reference to the original reader-writer lock …","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Atomically downgrades a write lock into a read lock …","Atomically downgrades a write lock into an upgradable …","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily yields the <code>RwLock</code> to a waiting thread if …","Returns a reference to the original reader-writer lock …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Atomically upgrades an upgradable read lock lock into a …","Tries to atomically upgrade an upgradable read lock into …","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily yields the <code>RwLock</code> to a waiting thread if …","Atomically downgrades an upgradable read lock lock into a …","Tries to atomically upgrade an upgradable read lock into …","Tries to atomically upgrade an upgradable read lock into …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Unlocks the <code>RwLock</code> using a fair unlock protocol."],"i":[0,0,0,1,1,1,1,1,1,0,2,2,0,3,3,3,3,0,0,0,0,4,4,0,0,0,0,0,5,5,5,5,5,5,5,5,5,0,6,6,6,6,0,7,0,8,8,8,8,8,8,0,9,9,0,10,10,0,11,11,11,11,11,0,12,12,0,13,13,0,14,14,14,14,0,0,0,0,0,0,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,17,17,17,17,17,17,17,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,24,24,24,24,24,24,24,25,25,25,25,25,25,25,26,26,26,26,26,26,26,27,27,27,27,27,27,27,28,28,28,28,28,28,28,29,29,29,29,29,29,29,16,17,20,21,23,24,25,26,27,16,17,24,27,15,16,17,19,20,21,22,23,24,25,26,27,16,17,20,21,23,24,25,26,27,16,17,20,21,23,24,25,26,27,15,19,22,15,19,22,1,1,2,15,15,15,15,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,17,17,17,4,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,21,21,21,5,5,6,6,12,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,26,26,26,27,27,27],"f":[null,null,null,null,null,[[]],[[],["bool",15]],[[]],[[],["bool",15]],null,[[]],[[]],null,null,null,[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,[[],["nonzerousize",3]],null,null,null,null,null,null,null,[[]],[[],["bool",15]],[[]],[[]],[[],["bool",15]],[[]],[[],["bool",15]],null,[[]],[[]],[[]],[[]],null,[[]],null,null,null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[]],[[],["bool",15]],null,[[],["bool",15]],[[],["bool",15]],null,[[]],[[],["bool",15]],[[]],[[]],[[],["bool",15]],null,[[]],[[]],null,[[]],[[]],null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["mutex",3]],[[],["reentrantmutex",3]],[[],["rwlock",3]],[[],["mutex",3]],[[],["reentrantmutex",3]],[[],["rwlock",3]],null,[[],["bool",15]],[[]],[[],["mutex",3]],[[]],[[],["mutex",3]],[[],["mutexguard",3]],[[],[["mutexguard",3],["option",4]]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],[["mutexguard",3],["option",4]]],[[],[["mutexguard",3],["option",4]]],[[],["mutex",3]],[[],[["sized",8],["mappedmutexguard",3]]],[[],[["result",4],["mappedmutexguard",3]]],[[]],[[]],[[]],[[]],[[],[["sized",8],["mappedmutexguard",3]]],[[],[["result",4],["mappedmutexguard",3]]],[[]],null,null,[[]],[[],["bool",15]],[[]],[[],["bool",15]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["reentrantmutex",3]],[[]],[[],["reentrantmutex",3]],[[],["reentrantmutexguard",3]],[[],[["option",4],["reentrantmutexguard",3]]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],[["option",4],["reentrantmutexguard",3]]],[[],[["option",4],["reentrantmutexguard",3]]],[[],["reentrantmutex",3]],[[],[["mappedreentrantmutexguard",3],["sized",8]]],[[],[["mappedreentrantmutexguard",3],["result",4]]],[[]],[[]],[[]],[[]],[[],[["mappedreentrantmutexguard",3],["sized",8]]],[[],[["mappedreentrantmutexguard",3],["result",4]]],[[]],null,[[],["bool",15]],[[]],[[]],[[]],[[],["rwlock",3]],[[]],[[],["rwlock",3]],[[],["rwlockreadguard",3]],[[],[["option",4],["rwlockreadguard",3]]],[[],["rwlockwriteguard",3]],[[],[["option",4],["rwlockwriteguard",3]]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4],["rwlockreadguard",3]]],[[],[["option",4],["rwlockreadguard",3]]],[[],[["option",4],["rwlockwriteguard",3]]],[[],[["option",4],["rwlockwriteguard",3]]],[[],["rwlockreadguard",3]],[[],[["option",4],["rwlockreadguard",3]]],[[],[["option",4],["rwlockreadguard",3]]],[[],[["option",4],["rwlockreadguard",3]]],[[],["rwlockupgradablereadguard",3]],[[],[["rwlockupgradablereadguard",3],["option",4]]],[[],[["rwlockupgradablereadguard",3],["option",4]]],[[],[["rwlockupgradablereadguard",3],["option",4]]],[[],["rwlock",3]],[[],[["sized",8],["mappedrwlockreadguard",3]]],[[],[["result",4],["mappedrwlockreadguard",3]]],[[]],[[]],[[]],[[]],[[],["rwlock",3]],[[],[["sized",8],["mappedrwlockwriteguard",3]]],[[],[["result",4],["mappedrwlockwriteguard",3]]],[[]],[[],["rwlockreadguard",3]],[[],["rwlockupgradablereadguard",3]],[[]],[[]],[[]],[[],["rwlock",3]],[[]],[[],["rwlockwriteguard",3]],[[],[["result",4],["rwlockwriteguard",3]]],[[]],[[]],[[]],[[],["rwlockreadguard",3]],[[],[["result",4],["rwlockwriteguard",3]]],[[],[["result",4],["rwlockwriteguard",3]]],[[],[["sized",8],["mappedrwlockreadguard",3]]],[[],[["result",4],["mappedrwlockreadguard",3]]],[[]],[[],[["sized",8],["mappedrwlockwriteguard",3]]],[[],[["result",4],["mappedrwlockwriteguard",3]]],[[]]],"p":[[8,"RawMutex"],[8,"RawMutexFair"],[8,"RawMutexTimed"],[8,"GetThreadId"],[8,"RawRwLock"],[8,"RawRwLockFair"],[8,"RawRwLockDowngrade"],[8,"RawRwLockTimed"],[8,"RawRwLockRecursive"],[8,"RawRwLockRecursiveTimed"],[8,"RawRwLockUpgrade"],[8,"RawRwLockUpgradeFair"],[8,"RawRwLockUpgradeDowngrade"],[8,"RawRwLockUpgradeTimed"],[3,"Mutex"],[3,"MutexGuard"],[3,"MappedMutexGuard"],[3,"RawReentrantMutex"],[3,"ReentrantMutex"],[3,"ReentrantMutexGuard"],[3,"MappedReentrantMutexGuard"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"RwLockUpgradableReadGuard"],[3,"MappedRwLockReadGuard"],[3,"MappedRwLockWriteGuard"],[3,"GuardSend"],[3,"GuardNoSend"]]},\
"scopeguard":{"doc":"A scope guard will run a given closure when it goes out …","t":[8,10,4,3,11,11,5,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Strategy","should_run","Always","ScopeGuard","with_strategy","into_inner","guard","defer","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","should_run","deref","deref_mut","fmt","fmt","drop"],"q":["scopeguard","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Controls in which cases the associated code should be run","Return <code>true</code> if the guard’s associated code should run …","Always run on scope exit.","<code>ScopeGuard</code> is a scope guard that may own a protected …","Create a <code>ScopeGuard</code> that owns <code>v</code> (accessible through …","“Defuse” the guard and extract the value without …","Create a new <code>ScopeGuard</code> owning <code>v</code> and with deferred …","Macro to create a <code>ScopeGuard</code> (always run).","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,0,0,2,2,0,0,3,3,3,3,3,3,3,2,2,2,2,2,2,2,3,2,2,3,2,2],"f":[null,[[],["bool",15]],null,null,[[],["scopeguard",3]],[[]],[[],[["scopeguard",3],["always",4]]],null,[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]]],"p":[[8,"Strategy"],[3,"ScopeGuard"],[4,"Always"]]},\
"spin":{"doc":"This crate provides spin-based versions of the primitives …","t":[0,3,3,11,11,11,0,3,11,11,0,0,3,3,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,0,3,11,11,11,18,11,11,11,11,11,11,11,0,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,8,10,3,3,0,6,6,6,6,6,6,6,6,6,6,6,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["barrier","Barrier","BarrierWaitResult","wait","new","is_leader","lazy","Lazy","new","force","mutex","spin","SpinMutex","SpinMutexGuard","new","into_inner","lock","is_locked","force_unlock","try_lock","get_mut","leak","Mutex","MutexGuard","new","into_inner","lock","is_locked","force_unlock","try_lock","get_mut","leak","once","Once","call_once","wait","poll","INIT","new","initialized","get","get_unchecked","get_mut","try_into_inner","is_completed","rwlock","RwLock","RwLockReadGuard","RwLockWriteGuard","RwLockUpgradableGuard","new","into_inner","read","write","upgradeable_read","try_read","reader_count","writer_count","force_read_decrement","force_write_unlock","try_write","try_upgradeable_read","get_mut","leak","upgrade","try_upgrade","downgrade","leak","downgrade","downgrade_to_upgradeable","leak","relax","RelaxStrategy","relax","Spin","Loop","lock_api","Mutex","MutexGuard","RwLock","RwLockReadGuard","RwLockWriteGuard","RwLockUpgradableReadGuard","Barrier","Lazy","Mutex","Once","RwLock","RwLockUpgradableGuard","RwLockWriteGuard","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","relax","relax","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","drop","drop","drop","drop","drop","from","from","from","from","default","default","default","default","lock","try_lock","unlock","is_locked","lock","try_lock","unlock","is_locked","lock_exclusive","try_lock_exclusive","unlock_exclusive","lock_shared","try_lock_shared","unlock_shared","is_locked","downgrade","lock_upgradable","try_lock_upgradable","unlock_upgradable","upgrade","try_upgrade"],"q":["spin","spin::barrier","","","","","spin","spin::lazy","","","spin","spin::mutex","spin::mutex::spin","","","","","","","","","","spin::mutex","","","","","","","","","","spin","spin::once","","","","","","","","","","","","spin","spin::rwlock","","","","","","","","","","","","","","","","","","","","","","","","","spin","spin::relax","","","","spin","spin::lock_api","","","","","","spin","","","","","","","spin::barrier","","","","","","","","","","","","","","spin::lazy","","","","","","","spin::mutex::spin","","","","","","","","","","","","","","","spin::mutex","","","","","","","","","","","","","","","spin::once","","","","","","","","spin::rwlock","","","","","","","","","","","","","","","","","","","","","","","","","","","","","spin::relax","","","","","","","","","","","","","","","","spin::lazy","spin::mutex::spin","spin::mutex","spin::rwlock","","","spin::mutex::spin","spin::mutex","spin::rwlock","spin::lazy","spin::mutex::spin","","spin::mutex","","spin::once","spin::rwlock","","","","spin::mutex::spin","spin::mutex","spin::rwlock","","","spin::mutex::spin","spin::once","spin::rwlock","","","spin::mutex::spin","spin::mutex","spin::once","spin::rwlock","spin::lazy","spin::mutex::spin","spin::mutex","spin::rwlock","spin::mutex::spin","","","","spin::mutex","","","","spin::rwlock","","","","","","","","","","","",""],"d":["Synchronization primitive allowing multiple threads to …","A primitive that synchronizes the execution of multiple …","A <code>BarrierWaitResult</code> is returned by <code>wait</code> when all threads …","Blocks the current thread until all threads have …","Creates a new barrier that can block a given number of …","Returns whether this thread from <code>wait</code> is the “leader …","Synchronization primitives for lazy evaluation.","A value which is initialized on the first access.","Creates a new lazy value with the given initializing …","Forces the evaluation of this lazy value and returns a …","Locks that have the same behaviour as a mutex.","A naïve spinning mutex.","A spin lock providing mutually exclusive access to data.","A guard that provides mutable data access.","Creates a new [<code>SpinMutex</code>] wrapping the supplied data.","Consumes this [<code>SpinMutex</code>] and unwraps the underlying data.","Locks the [<code>SpinMutex</code>] and returns a guard that permits …","Returns <code>true</code> if the lock is currently held.","Force unlock this [<code>SpinMutex</code>].","Try to lock this [<code>SpinMutex</code>], returning a lock guard if …","Returns a mutable reference to the underlying data.","Leak the lock guard, yielding a mutable reference to the …","A spin-based lock providing mutually exclusive access to …","A generic guard that will protect some data access and …","Creates a new [<code>Mutex</code>] wrapping the supplied data.","Consumes this [<code>Mutex</code>] and unwraps the underlying data.","Locks the [<code>Mutex</code>] and returns a guard that permits access …","Returns <code>true</code> if the lock is currently held.","Force unlock this [<code>Mutex</code>].","Try to lock this [<code>Mutex</code>], returning a lock guard if …","Returns a mutable reference to the underlying data.","Leak the lock guard, yielding a mutable reference to the …","Synchronization primitives for one-time evaluation.","A primitive that provides lazy one-time initialization.","Performs an initialization routine once and only once. …","Spins until the [<code>Once</code>] contains a value.","Like [<code>Once::get</code>], but will spin if the [<code>Once</code>] is in the …","Initialization constant of [<code>Once</code>].","Creates a new [<code>Once</code>].","Creates a new initialized [<code>Once</code>].","Returns a reference to the inner value if the [<code>Once</code>] has …","Returns a reference to the inner value on the unchecked …","Returns a mutable reference to the inner value if the […","Returns a the inner value if the [<code>Once</code>] has been …","Returns a reference to the inner value if the [<code>Once</code>] has …","A lock that provides data access to either one writer or …","A lock that provides data access to either one writer or …","A guard that provides immutable data access.","A guard that provides mutable data access.","A guard that provides immutable data access but can be …","Creates a new spinlock wrapping the supplied data.","Consumes this <code>RwLock</code>, returning the underlying data.","Locks this rwlock with shared read access, blocking the …","Lock this rwlock with exclusive write access, blocking …","Obtain a readable lock guard that can later be upgraded …","Attempt to acquire this lock with shared read access.","Return the number of readers that currently hold the lock …","Return the number of writers that currently hold the lock.","Force decrement the reader count.","Force unlock exclusive write access.","Attempt to lock this rwlock with exclusive write access.","Tries to obtain an upgradeable lock guard.","Returns a mutable reference to the underlying data.","Leak the lock guard, yielding a reference to the …","Upgrades an upgradeable lock guard to a writable lock …","Tries to upgrade an upgradeable lock guard to a writable …","Downgrades the upgradeable lock guard to a readable, …","Leak the lock guard, yielding a reference to the …","Downgrades the writable lock guard to a readable, shared …","Downgrades the writable lock guard to an upgradable, …","Leak the lock guard, yielding a mutable reference to the …","Strategies that determine the behaviour of locks when …","A trait implemented by spinning relax strategies.","Perform the relaxing operation during a period of …","A strategy that rapidly spins while informing the CPU …","A strategy that rapidly spins, without telling the CPU to …","Spin synchronisation primitives, but compatible with …","A lock that provides mutually exclusive data access …","A guard that provides mutable data access (compatible …","A lock that provides data access to either one writer or …","A guard that provides immutable data access (compatible …","A guard that provides mutable data access (compatible …","A guard that provides immutable data access but can be …","A primitive that synchronizes the execution of multiple …","A value which is initialized on the first access. See […","A primitive that synchronizes the execution of multiple …","A primitive that provides lazy one-time initialization. …","A lock that provides data access to either one writer or …","A guard that provides immutable data access but can be …","A guard that provides mutable data access. See […","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The dropping of the MutexGuard will release the lock it …","","","","","","","","","Creates a new lazy value using <code>Default</code> as the …","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,1,2,0,0,3,3,0,0,0,0,4,4,4,4,4,4,4,5,0,0,6,6,6,6,6,6,6,7,0,0,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,10,11,11,11,11,12,12,12,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,12,12,12,12,12,12,12,11,11,11,11,11,11,11,14,14,14,14,14,14,14,15,15,15,15,15,15,15,14,15,3,5,7,10,11,12,5,7,12,3,4,5,6,7,8,9,10,11,12,5,7,10,11,12,5,8,10,11,12,4,6,8,9,3,4,6,9,4,4,4,4,6,6,6,6,9,9,9,9,9,9,9,9,9,9,9,9,9],"f":[null,null,null,[[],["barrierwaitresult",3]],[[["usize",15]]],[[],["bool",15]],null,null,[[]],[[]],null,null,null,null,[[]],[[]],[[],["spinmutexguard",3]],[[],["bool",15]],[[]],[[],[["option",4],["spinmutexguard",3]]],[[]],[[]],null,null,[[]],[[]],[[],["mutexguard",3]],[[],["bool",15]],[[]],[[],[["option",4],["mutexguard",3]]],[[]],[[]],null,null,[[["fnonce",8]]],[[]],[[],["option",4]],null,[[]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[],["option",4]],[[],["bool",15]],null,null,null,null,null,[[]],[[]],[[],["rwlockreadguard",3]],[[],["rwlockwriteguard",3]],[[],["rwlockupgradableguard",3]],[[],[["option",4],["rwlockreadguard",3]]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],[["rwlockwriteguard",3],["option",4]]],[[],[["option",4],["rwlockupgradableguard",3]]],[[]],[[]],[[],["rwlockwriteguard",3]],[[],[["rwlockwriteguard",3],["result",4]]],[[],["rwlockreadguard",3]],[[]],[[],["rwlockreadguard",3]],[[],["rwlockupgradableguard",3]],[[]],null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[],["bool",15]],[[]],[[],["bool",15]],[[]],[[],["bool",15]],[[]],[[],["bool",15]],[[]],[[]],[[],["bool",15]],[[]],[[],["bool",15]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[],["bool",15]]],"p":[[3,"Barrier"],[3,"BarrierWaitResult"],[3,"Lazy"],[3,"SpinMutex"],[3,"SpinMutexGuard"],[3,"Mutex"],[3,"MutexGuard"],[3,"Once"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockUpgradableGuard"],[3,"RwLockWriteGuard"],[8,"RelaxStrategy"],[3,"Spin"],[3,"Loop"]]},\
"volatile":{"doc":"Provides wrapper types <code>Volatile</code>, <code>ReadOnly</code>, <code>WriteOnly</code>, …","t":[3,11,11,11,11,3,11,11,3,11,11,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Volatile","new","read","write","update","ReadOnly","new","read","WriteOnly","new","write","ReadWrite","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","fmt","fmt","fmt","clone","clone","clone","default","default","default"],"q":["volatile","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A wrapper type around a volatile variable, which allows …","Construct a new volatile instance wrapping the given …","Performs a volatile read of the contained value, …","Performs a volatile write, setting the contained value to …","Performs a volatile read of the contained value, passes a …","A volatile wrapper which only allows read operations.","Construct a new read-only volatile wrapper wrapping the …","Perform a volatile read of the contained value, returning …","A volatile wrapper which only allows write operations.","Constructs a new write only volatile wrapper around the …","Performs a volatile write of value <code>value</code> into the …","A volatile wrapper which allows both read and write …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,0,2,2,0,3,3,0,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3,1,2,3,1,2,3,1,2,3],"f":[null,[[],["volatile",3]],[[]],[[]],[[]],null,[[],["readonly",3]],[[]],null,[[],["writeonly",3]],[[]],null,[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[],["readonly",3]],[[],["writeonly",3]],[[],["volatile",3]],[[],["readonly",3]],[[],["writeonly",3]]],"p":[[3,"Volatile"],[3,"ReadOnly"],[3,"WriteOnly"]]},\
"x86_64":{"doc":"This crate provides x86_64 specific functions and data …","t":[0,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,5,5,0,0,5,5,5,5,5,5,0,3,3,3,11,11,11,11,11,11,11,0,3,11,11,11,11,0,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,0,5,5,4,13,13,13,13,3,11,11,5,5,5,5,5,0,0,3,3,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,3,11,3,3,3,3,3,3,3,18,18,18,18,18,18,18,3,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,5,5,5,5,3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,3,12,11,11,11,11,3,11,11,11,11,11,11,4,13,13,3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,18,18,18,11,11,11,11,11,0,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,3,6,6,6,6,6,11,11,11,11,11,11,3,11,11,11,11,3,11,3,12,12,12,12,12,3,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,3,11,11,11,11,11,11,11,3,12,12,11,3,12,12,11,0,3,8,10,3,4,13,13,3,8,8,10,11,4,13,12,12,12,13,13,4,13,13,13,11,11,8,11,10,10,10,10,10,10,10,11,3,11,11,3,11,11,4,13,13,13,4,13,13,13,4,13,13,4,13,13,13,0,8,18,18,8,4,4,4,3,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,12,11,11,3,12,12,11,3,0,4,13,13,3,11,11,11,11,11,11,11,11,11,3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,3,11,11,3,11,11,8,10,8,10,0,8,10,8,10,0,3,12,12,12,11,3,12,12,4,13,13,13,13,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["addr","VirtAddr","PhysAddr","VirtAddrNotValid","new","try_new","new_truncate","new_unsafe","zero","as_u64","from_ptr","as_ptr","as_mut_ptr","is_null","align_up","align_down","is_aligned","page_offset","p1_index","p2_index","p3_index","p4_index","PhysAddrNotValid","new","new_truncate","new_unsafe","try_new","zero","as_u64","is_null","align_up","align_down","is_aligned","align_down","align_up","instructions","interrupts","are_enabled","enable","disable","without_interrupts","enable_and_hlt","int3","port","PortReadOnly","PortWriteOnly","Port","new","read","new","write","new","read","write","random","RdRand","new","get_u64","get_u32","get_u16","segmentation","set_cs","load_ss","load_ds","load_es","load_fs","load_gs","swap_gs","cs","wrfsbase","rdfsbase","wrgsbase","rdgsbase","tables","lgdt","lidt","load_tss","tlb","flush","flush_all","InvPicdCommand","Address","Single","All","AllExceptGlobal","Pcid","new","value","flush_pcid","hlt","nop","bochs_breakpoint","read_rip","registers","control","Cr0","Cr0Flags","PROTECTED_MODE_ENABLE","MONITOR_COPROCESSOR","EMULATE_COPROCESSOR","TASK_SWITCHED","NUMERIC_ERROR","WRITE_PROTECT","ALIGNMENT_MASK","NOT_WRITE_THROUGH","CACHE_DISABLE","PAGING","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","Cr2","Cr3","Cr3Flags","PAGE_LEVEL_WRITETHROUGH","PAGE_LEVEL_CACHE_DISABLE","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","Cr4","Cr4Flags","VIRTUAL_8086_MODE_EXTENSIONS","PROTECTED_MODE_VIRTUAL_INTERRUPTS","TIMESTAMP_DISABLE","DEBUGGING_EXTENSIONS","PAGE_SIZE_EXTENSION","PHYSICAL_ADDRESS_EXTENSION","MACHINE_CHECK_EXCEPTION","PAGE_GLOBAL","PERFORMANCE_MONITOR_COUNTER","OSFXSR","OSXMMEXCPT_ENABLE","USER_MODE_INSTRUCTION_PREVENTION","L5_PAGING","VIRTUAL_MACHINE_EXTENSIONS","SAFER_MODE_EXTENSIONS","FSGSBASE","PCID","OSXSAVE","SUPERVISOR_MODE_EXECUTION_PROTECTION","SUPERVISOR_MODE_ACCESS_PREVENTION","PROTECTION_KEY","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","model_specific","Msr","new","Efer","FsBase","GsBase","KernelGsBase","Star","LStar","SFMask","MSR","MSR","MSR","MSR","MSR","MSR","MSR","EferFlags","SYSTEM_CALL_EXTENSIONS","LONG_MODE_ENABLE","LONG_MODE_ACTIVE","NO_EXECUTE_ENABLE","SECURE_VIRTUAL_MACHINE_ENABLE","LONG_MODE_SEGMENT_LIMIT_ENABLE","FAST_FXSAVE_FXRSTOR","TRANSLATION_CACHE_EXTENSION","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","rflags","read","read_raw","write","write_raw","RFlags","ID","VIRTUAL_INTERRUPT_PENDING","VIRTUAL_INTERRUPT","ALIGNMENT_CHECK","VIRTUAL_8086_MODE","RESUME_FLAG","NESTED_TASK","IOPL_HIGH","IOPL_LOW","OVERFLOW_FLAG","DIRECTION_FLAG","INTERRUPT_FLAG","TRAP_FLAG","SIGN_FLAG","ZERO_FLAG","AUXILIARY_CARRY_FLAG","PARITY_FLAG","CARRY_FLAG","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","structures","gdt","SegmentSelector","0","new","index","rpl","set_rpl","GlobalDescriptorTable","new","from_raw_slice","as_raw_slice","add_entry","load","load_unsafe","Descriptor","UserSegment","SystemSegment","DescriptorFlags","ACCESSED","WRITABLE","CONFORMING","EXECUTABLE","USER_SEGMENT","DPL_RING_3","PRESENT","AVAILABLE","LONG_MODE","DEFAULT_SIZE","GRANULARITY","LIMIT_0_15","LIMIT_16_19","BASE_0_23","BASE_24_31","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","KERNEL_DATA","KERNEL_CODE32","KERNEL_CODE64","USER_DATA","USER_CODE32","USER_CODE64","kernel_code_segment","kernel_data_segment","user_data_segment","user_code_segment","tss_segment","idt","InterruptDescriptorTable","divide_error","debug","non_maskable_interrupt","breakpoint","overflow","bound_range_exceeded","invalid_opcode","device_not_available","double_fault","invalid_tss","segment_not_present","stack_segment_fault","general_protection_fault","page_fault","x87_floating_point","alignment_check","machine_check","simd_floating_point","virtualization","security_exception","new","reset","load","load_unsafe","slice","slice_mut","Entry","HandlerFunc","HandlerFuncWithErrCode","PageFaultHandlerFunc","DivergingHandlerFunc","DivergingHandlerFuncWithErrCode","missing","set_handler_fn","set_handler_fn","set_handler_fn","set_handler_fn","set_handler_fn","EntryOptions","set_present","disable_interrupts","set_privilege_level","set_stack_index","InterruptStackFrame","as_mut","InterruptStackFrameValue","instruction_pointer","code_segment","cpu_flags","stack_pointer","stack_segment","PageFaultErrorCode","PROTECTION_VIOLATION","CAUSED_BY_WRITE","USER_MODE","MALFORMED_TABLE","INSTRUCTION_FETCH","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","paging","frame","PhysFrame","from_start_address","from_start_address_unchecked","containing_address","start_address","size","range","range_inclusive","PhysFrameRange","start","end","is_empty","PhysFrameRangeInclusive","start","end","is_empty","mapper","MappedPageTable","PageTableFrameMapping","frame_to_pointer","OffsetPageTable","InvalidPageTable","NotRecursive","NotActive","RecursivePageTable","MapperAllSizes","Translate","translate","translate_addr","TranslateResult","Mapped","frame","offset","flags","NotMapped","InvalidFrameAddress","MappedFrame","Size4KiB","Size2MiB","Size1GiB","start_address","size","Mapper","map_to","map_to_with_table_flags","unmap","update_flags","set_flags_p4_entry","set_flags_p3_entry","set_flags_p2_entry","translate_page","identity_map","MapperFlush","flush","ignore","MapperFlushAll","flush_all","ignore","MapToError","FrameAllocationFailed","ParentEntryHugePage","PageAlreadyMapped","UnmapError","ParentEntryHugePage","PageNotMapped","InvalidFrameAddress","FlagUpdateError","PageNotMapped","ParentEntryHugePage","TranslateError","PageNotMapped","ParentEntryHugePage","InvalidFrameAddress","page","PageSize","SIZE","SIZE_AS_DEBUG_STR","NotGiantPageSize","Size4KiB","Size2MiB","Size1GiB","Page","SIZE","from_start_address","from_start_address_unchecked","containing_address","start_address","size","p4_index","p3_index","range","range_inclusive","p2_index","from_page_table_indices_1gib","from_page_table_indices_2mib","from_page_table_indices","p1_index","PageRange","start","end","is_empty","as_4kib_page_range","PageRangeInclusive","start","end","is_empty","AddressNotAligned","page_table","FrameError","FrameNotPresent","HugeFrame","PageTableEntry","new","is_unused","set_unused","flags","addr","frame","set_addr","set_frame","set_flags","PageTableFlags","PRESENT","WRITABLE","USER_ACCESSIBLE","WRITE_THROUGH","NO_CACHE","ACCESSED","DIRTY","HUGE_PAGE","GLOBAL","BIT_9","BIT_10","BIT_11","BIT_52","BIT_53","BIT_54","BIT_55","BIT_56","BIT_57","BIT_58","BIT_59","BIT_60","BIT_61","BIT_62","NO_EXECUTE","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","PageTable","new","zero","iter","iter_mut","PageTableIndex","new","new_truncate","PageOffset","new","new_truncate","FrameAllocator","allocate_frame","FrameDeallocator","deallocate_frame","port","PortRead","read_from_port","PortWrite","write_to_port","tss","TaskStateSegment","privilege_stack_table","interrupt_stack_table","iomap_base","new","DescriptorTablePointer","limit","base","PrivilegeLevel","Ring0","Ring1","Ring2","Ring3","from_u16","software_interrupt","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","translate","translate","translate","map_to_with_table_flags","unmap","update_flags","set_flags_p4_entry","set_flags_p3_entry","set_flags_p2_entry","translate_page","map_to_with_table_flags","unmap","update_flags","set_flags_p4_entry","set_flags_p3_entry","set_flags_p2_entry","translate_page","map_to_with_table_flags","unmap","update_flags","set_flags_p4_entry","set_flags_p3_entry","set_flags_p2_entry","translate_page","map_to_with_table_flags","unmap","update_flags","set_flags_p4_entry","set_flags_p3_entry","set_flags_p2_entry","translate_page","map_to_with_table_flags","unmap","update_flags","set_flags_p4_entry","set_flags_p3_entry","set_flags_p2_entry","translate_page","map_to_with_table_flags","unmap","update_flags","set_flags_p4_entry","set_flags_p3_entry","set_flags_p2_entry","translate_page","map_to_with_table_flags","unmap","update_flags","set_flags_p4_entry","set_flags_p3_entry","set_flags_p2_entry","translate_page","map_to_with_table_flags","unmap","update_flags","set_flags_p4_entry","set_flags_p3_entry","set_flags_p2_entry","translate_page","map_to_with_table_flags","unmap","update_flags","set_flags_p4_entry","set_flags_p3_entry","set_flags_p2_entry","translate_page","deref","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","not","not","not","not","not","not","not","not","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","index","index","index","index_mut","index_mut","index_mut","hash","hash","hash","hash","hash","hash","hash","hash","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","next","next","next","next","extend","extend","extend","extend","extend","extend","extend","extend","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","read","read_raw","write","write_raw","update","read","read","read_raw","read_pcid","write","write_pcid","read","read_raw","write","write_raw","update","read","write","read","read_raw","write","write_raw","update","read","write","read","write","read","write","read_raw","read","write_raw","write","read","write","read","write","new","level_4_table","new","level_4_table","new","new_unchecked","level_4_table"],"q":["x86_64","x86_64::addr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86_64","x86_64::instructions","x86_64::instructions::interrupts","","","","","","x86_64::instructions","x86_64::instructions::port","","","","","","","","","","x86_64::instructions","x86_64::instructions::random","","","","","x86_64::instructions","x86_64::instructions::segmentation","","","","","","","","","","","","x86_64::instructions","x86_64::instructions::tables","","","x86_64::instructions","x86_64::instructions::tlb","","","","","","","","","","","x86_64::instructions","","","","x86_64","x86_64::registers","x86_64::registers::control","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86_64::registers","x86_64::registers::model_specific","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86_64::registers","x86_64::registers::rflags","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86_64","x86_64::structures","x86_64::structures::gdt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86_64::structures","x86_64::structures::idt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86_64::structures","x86_64::structures::paging","x86_64::structures::paging::frame","","","","","","","","","","","","","","","","x86_64::structures::paging","x86_64::structures::paging::mapper","","","","","","","","","","","","","","x86_64::structures::paging::mapper::TranslateResult","","","x86_64::structures::paging::mapper","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86_64::structures::paging","x86_64::structures::paging::page","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86_64::structures::paging","x86_64::structures::paging::page_table","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86_64::structures::paging","","","","x86_64::structures","x86_64::structures::port","","","","x86_64::structures","x86_64::structures::tss","","","","","x86_64::structures","","","x86_64","","","","","","","x86_64::addr","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86_64::instructions::port","","","","","","","","","","","","","","","","","","","","","x86_64::instructions::random","","","","","","","x86_64::instructions::tlb","","","","","","","","","","","","","","x86_64::registers::control","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86_64::registers::model_specific","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86_64::registers::rflags","","","","","","","x86_64::structures::gdt","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86_64::structures::idt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86_64::structures::paging::frame","","","","","","","","","","","","","","","","","","","","","","","x86_64::structures::paging::mapper","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86_64::structures::paging::page","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86_64::structures::paging::page_table","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86_64::structures::tss","","","","","","","x86_64::structures","","","","","","","x86_64","","","","","","","x86_64::structures::paging::mapper","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86_64::structures::idt","x86_64::addr","","","","x86_64::instructions::port","","","x86_64::instructions::random","x86_64::instructions::tlb","","x86_64::registers::control","","","","","","","x86_64::registers::model_specific","","","","","","","","","x86_64::registers::rflags","x86_64::structures::gdt","","","","x86_64::structures::idt","","","","","x86_64::structures::paging::frame","","","x86_64::structures::paging::mapper","","","","","","","","","","","","x86_64::structures::paging::page","","","","","","","x86_64::structures::paging::page_table","","","","","","x86_64::structures::tss","x86_64::structures","x86_64","x86_64::structures::paging::mapper","x86_64::structures::paging::page","x86_64::addr","","","","","","x86_64::registers::control","","","x86_64::registers::model_specific","x86_64::registers::rflags","x86_64::structures::gdt","x86_64::structures::idt","x86_64::structures::paging::frame","","x86_64::structures::paging::page","","x86_64::structures::paging::page_table","x86_64::addr","","","","x86_64::instructions::port","","","","","","x86_64::registers::control","","","","","","x86_64::registers::model_specific","","x86_64::registers::rflags","","x86_64::structures::gdt","","","","x86_64::structures::idt","","","","","","x86_64::structures::paging::frame","","","","","","x86_64::structures::paging::page","","","","","","","","","x86_64::structures::paging::page_table","","","","","","","x86_64","x86_64::addr","","x86_64::registers::control","","","x86_64::registers::model_specific","x86_64::registers::rflags","x86_64::structures::gdt","x86_64::structures::idt","x86_64::structures::paging::frame","x86_64::structures::paging::page","","","","x86_64::structures::paging::page_table","","","x86_64::addr","","x86_64::registers::control","","","x86_64::registers::model_specific","x86_64::registers::rflags","x86_64::structures::gdt","x86_64::structures::idt","x86_64::structures::paging::frame","x86_64::structures::paging::page","","","","x86_64::structures::paging::page_table","","","x86_64::addr","","","","x86_64::structures::paging::frame","x86_64::structures::paging::page","x86_64::addr","","","","x86_64::structures::paging::frame","x86_64::structures::paging::page","x86_64::addr","","","","x86_64::registers::control","","","x86_64::registers::model_specific","x86_64::registers::rflags","x86_64::structures::gdt","x86_64::structures::idt","x86_64::structures::paging::frame","x86_64::structures::paging::page","x86_64::structures::paging::page_table","x86_64::registers::control","","","x86_64::registers::model_specific","x86_64::registers::rflags","x86_64::structures::gdt","x86_64::structures::idt","x86_64::structures::paging::page_table","x86_64::registers::control","","","x86_64::registers::model_specific","x86_64::registers::rflags","x86_64::structures::gdt","x86_64::structures::idt","x86_64::structures::paging::page_table","x86_64::registers::control","","","x86_64::registers::model_specific","x86_64::registers::rflags","x86_64::structures::gdt","x86_64::structures::idt","x86_64::structures::paging::page_table","x86_64::registers::control","","","x86_64::registers::model_specific","x86_64::registers::rflags","x86_64::structures::gdt","x86_64::structures::idt","x86_64::structures::paging::page_table","x86_64::registers::control","","","x86_64::registers::model_specific","x86_64::registers::rflags","x86_64::structures::gdt","x86_64::structures::idt","x86_64::structures::paging::page_table","x86_64::registers::control","","","x86_64::registers::model_specific","x86_64::registers::rflags","x86_64::structures::gdt","x86_64::structures::idt","x86_64::structures::paging::page_table","x86_64::registers::control","","","x86_64::registers::model_specific","x86_64::registers::rflags","x86_64::structures::gdt","x86_64::structures::idt","x86_64::structures::paging::page_table","x86_64::structures::idt","x86_64::structures::paging::page_table","","x86_64::structures::idt","x86_64::structures::paging::page_table","","x86_64::registers::control","","","x86_64::registers::model_specific","x86_64::registers::rflags","x86_64::structures::gdt","x86_64::structures::idt","x86_64::structures::paging::page_table","x86_64::registers::control","","","x86_64::registers::model_specific","x86_64::registers::rflags","x86_64::structures::gdt","x86_64::structures::idt","x86_64::structures::paging::page_table","x86_64::addr","x86_64::registers::control","","","x86_64::registers::model_specific","x86_64::registers::rflags","x86_64::structures::gdt","x86_64::structures::idt","x86_64::structures::paging::page_table","x86_64::addr","x86_64::registers::control","","","x86_64::registers::model_specific","x86_64::registers::rflags","x86_64::structures::gdt","x86_64::structures::idt","x86_64::structures::paging::page_table","x86_64::addr","x86_64::registers::control","","","x86_64::registers::model_specific","x86_64::registers::rflags","x86_64::structures::gdt","x86_64::structures::idt","x86_64::structures::paging::page_table","x86_64::addr","x86_64::registers::control","","","x86_64::registers::model_specific","x86_64::registers::rflags","x86_64::structures::gdt","x86_64::structures::idt","x86_64::structures::paging::page_table","x86_64::structures::paging::frame","","x86_64::structures::paging::page","","x86_64::registers::control","","","x86_64::registers::model_specific","x86_64::registers::rflags","x86_64::structures::gdt","x86_64::structures::idt","x86_64::structures::paging::page_table","x86_64::addr","","x86_64::instructions::port","","","x86_64::instructions::random","x86_64::registers::control","","","x86_64::registers::model_specific","x86_64::registers::rflags","x86_64::structures::gdt","","","","x86_64::structures::idt","","","","","x86_64::structures::paging::frame","","","x86_64::structures::paging::page","","","","","","x86_64::structures::paging::page_table","","","","","","x86_64::structures::tss","x86_64::structures","x86_64","x86_64::structures::paging::page_table","x86_64::registers::control","","","","","","","","","","","","","","","","x86_64::registers::model_specific","","","","","","","","","","","","","","","","","","","","","x86_64::structures::paging::mapper","","","","","",""],"d":["Physical and virtual addresses manipulation","A canonical 64-bit virtual memory address.","A 64-bit physical memory address.","A passed <code>u64</code> was not a valid virtual address.","Creates a new canonical virtual address.","Tries to create a new canonical virtual address.","Creates a new canonical virtual address, throwing out …","Creates a new virtual address, without any checks.","Creates a virtual address that points to <code>0</code>.","Converts the address to an <code>u64</code>.","Creates a virtual address from the given pointer","Converts the address to a raw pointer.","Converts the address to a mutable raw pointer.","Convenience method for checking if a virtual address is …","Aligns the virtual address upwards to the given alignment.","Aligns the virtual address downwards to the given …","Checks whether the virtual address has the demanded …","Returns the 12-bit page offset of this virtual address.","Returns the 9-bit level 1 page table index.","Returns the 9-bit level 2 page table index.","Returns the 9-bit level 3 page table index.","Returns the 9-bit level 4 page table index.","A passed <code>u64</code> was not a valid physical address.","Creates a new physical address.","Creates a new physical address, throwing bits 52..64 away.","Creates a new physical address, without any checks.","Tries to create a new physical address.","Creates a physical address that points to <code>0</code>.","Converts the address to an <code>u64</code>.","Convenience method for checking if a physical address is …","Aligns the physical address upwards to the given …","Aligns the physical address downwards to the given …","Checks whether the physical address has the demanded …","Align address downwards.","Align address upwards.","Special x86_64 instructions.","Enabling and disabling interrupts","Returns whether interrupts are enabled.","Enable interrupts.","Disable interrupts.","Run a closure with disabled interrupts.","Atomically enable interrupts and put the CPU to sleep","Cause a breakpoint exception by invoking the <code>int3</code> …","Access to I/O ports","A read only I/O port.","A write only I/O port.","An I/O port.","Creates a read only I/O port with the given port number.","Reads from the port.","Creates a write only I/O port with the given port number.","Writes to the port.","Creates an I/O port with the given port number.","Reads from the port.","Writes to the port.","Support for build-in RNGs","Used to obtain random numbers using x86_64’s RDRAND …","Creates Some(RdRand) if RDRAND is supported, None …","Uniformly sampled u64. May fail in rare circumstances or …","Uniformly sampled u32. May fail in rare circumstances or …","Uniformly sampled u16. May fail in rare circumstances or …","Provides functions to read and write segment registers.","Reload code segment register.","Reload stack segment register.","Reload data segment register.","Reload es segment register.","Reload fs segment register.","Reload gs segment register.","Swap <code>KernelGsBase</code> MSR and <code>GsBase</code> MSR.","Returns the current value of the code segment register.","Writes the FS segment base address","Reads the FS segment base address","Writes the GS segment base address","Reads the GS segment base address","Functions to load GDT, IDT, and TSS structures.","Load a GDT.","Load an IDT.","Load the task state register using the <code>ltr</code> instruction.","Functions to flush the translation lookaside buffer (TLB).","Invalidate the given address in the TLB using the <code>invlpg</code> …","Invalidate the TLB completely by reloading the CR3 …","The Invalidate PCID Command to execute.","The logical processor invalidates mappings—except …","The logical processor invalidates all mappings—except …","The logical processor invalidates all …","The logical processor invalidates all mappings—except …","Structure of a PCID. A PCID has to be <= 4096 for x86_64.","Create a new PCID. Will result in a failure if the value …","Get the value of the current PCID.","Invalidate the given address in the TLB using the <code>invpcid</code> …","Halts the CPU until the next interrupt arrives.","Executes the <code>nop</code> instructions, which performs no …","Emits a ‘magic breakpoint’ instruction for the Bochs …","Gets the current instruction pointer. Note that this is …","Access to various system and model specific registers.","Functions to read and write control registers.","Various control flags modifying the basic operation of …","Configuration flags of the Cr0 register.","Enables protected mode.","Enables monitoring of the coprocessor, typical for x87 …","Force all x87 and MMX instructions to cause an exception.","Automatically set to 1 on <em>hardware</em> task switch.","Enables the native error reporting mechanism for x87 FPU …","Controls whether supervisor-level writes to read-only …","Enables automatic alignment checking.","Ignored. Used to control write-back/write-through cache …","Disables internal caches (only for some cases).","Enables page translation.","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Contains the Page Fault Linear Address (PFLA).","Contains the physical address of the level 4 page table.","Controls cache settings for the level 4 page table.","Use a writethrough cache policy for the P4 table (else a …","Disable caching for the P4 table.","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Various control flags modifying the basic operation of …","Controls cache settings for the level 4 page table.","Enables hardware-supported performance enhancements for …","Enables support for protected-mode virtual interrupts.","When set, only privilege-level 0 can execute the RDTSC or …","Enables I/O breakpoint capability and enforces treatment …","Enables the use of 4MB physical frames; ignored in long …","Enables physical address extension and 2MB physical …","Enables the machine-check exception mechanism.","Enables the global-page mechanism, which allows to make …","Allows software running at any privilege level to use the …","Enable the use of legacy SSE instructions; allows using …","Enables the SIMD floating-point exception (#XF) for …","Prevents the execution of the SGDT, SIDT, SLDT, SMSW, and …","Enables 5-level paging on supported CPUs.","Enables VMX insturctions.","Enables SMX instructions.","Enables software running in 64-bit mode at any privilege …","Enables process-context identifiers (PCIDs).","Enables extendet processor state management instructions, …","Prevents the execution of instructions that reside in …","Enables restrictions for supervisor-mode software when …","Enables 4-level paging to associate each linear address …","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Functions to read and write model specific registers.","A model specific register.","Create an instance from a register.","The Extended Feature Enable Register.","FS.Base Model Specific Register.","GS.Base Model Specific Register.","KernelGsBase Model Specific Register.","Syscall Register: STAR","Syscall Register: LSTAR","Syscall Register: SFMASK","The underlying model specific register.","The underlying model specific register.","The underlying model specific register.","The underlying model specific register.","The underlying model specific register.","The underlying model specific register.","The underlying model specific register.","Flags of the Extended Feature Enable Register.","Enables the <code>syscall</code> and <code>sysret</code> instructions.","Activates long mode, requires activating paging.","Indicates that long mode is active.","Enables the no-execute page-protection feature.","Enables SVM extensions.","Enable certain limit checks in 64-bit mode.","Enable the <code>fxsave</code> and <code>fxrstor</code> instructions to execute …","Changes how the <code>invlpg</code> instruction operates on TLB …","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Processor state stored in the RFLAGS register.","Returns the current value of the RFLAGS register.","Returns the raw current value of the RFLAGS register.","Writes the RFLAGS register, preserves reserved bits.","Writes the RFLAGS register.","The RFLAGS register.","Processor feature identification flag.","Indicates that an external, maskable interrupt is pending.","Virtual image of the INTERRUPT_FLAG bit.","Enable automatic alignment checking if CR0.AM is set. …","Enable the virtual-8086 mode.","Allows to restart an instruction following an instrucion …","Used by <code>iret</code> in hardware task switch mode to determine if …","The high bit of the I/O Privilege Level field.","The low bit of the I/O Privilege Level field.","Set by hardware to indicate that the sign bit of the …","Determines the order in which strings are processed.","Enable interrupts.","Enable single-step mode for debugging.","Set by hardware if last arithmetic operation resulted in …","Set by hardware if last arithmetic operation resulted in …","Set by hardware if last arithmetic operation generated a …","Set by hardware if last result has an even number of 1 …","Set by hardware if last arithmetic operation generated a …","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Representations of various x86 specific structures and …","Types for the Global Descriptor Table and segment …","Specifies which element to load into a segment from …","","Creates a new SegmentSelector","Returns the GDT index.","Returns the requested privilege level.","Set the privilege level for this Segment selector.","A 64-bit mode global descriptor table (GDT).","Creates an empty GDT.","Forms a GDT from a slice of <code>u64</code>.","Get a reference to the internal table.","Adds the given segment descriptor to the GDT, returning …","Loads the GDT in the CPU using the <code>lgdt</code> instruction. This …","Loads the GDT in the CPU using the <code>lgdt</code> instruction. This …","A 64-bit mode segment descriptor.","Descriptor for a code or data segment.","A system segment descriptor such as a LDT or TSS …","Flags for a GDT descriptor. Not all flags are valid for …","Set by the processor if this segment has been accessed. …","For 32-bit data segments, sets the segment as writable. …","For code segments, sets the segment as “conforming”, …","This flag must be set for code segments and unset for …","This flag must be set for user segments (in contrast to …","The DPL for this descriptor is Ring 3. In 64-bit mode, …","Must be set for any segment, causes a segment not present …","Available for use by the Operating System","Must be set for 64-bit code segments, unset otherwise.","Use 32-bit (as opposed to 16-bit) operands. If [<code>LONG_MODE</code>]…","Limit field is scaled by 4096 bytes. In 64-bit mode, …","Bits <code>0..=15</code> of the limit field (ignored in 64-bit mode)","Bits <code>16..=19</code> of the limit field (ignored in 64-bit mode)","Bits <code>0..=23</code> of the base field (ignored in 64-bit mode, …","Bits <code>24..=31</code> of the base field (ignored in 64-bit mode, …","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","A kernel data segment (64-bit or flat 32-bit)","A flat 32-bit kernel code segment","A 64-bit kernel code segment","A user data segment (64-bit or flat 32-bit)","A flat 32-bit user code segment","A 64-bit user code segment","Creates a segment descriptor for a 64-bit kernel code …","Creates a segment descriptor for a kernel data segment …","Creates a segment descriptor for a ring 3 data segment …","Creates a segment descriptor for a 64-bit ring 3 code …","Creates a TSS system descriptor for the given TSS.","Provides types for the Interrupt Descriptor Table and its …","An Interrupt Descriptor Table with 256 entries.","A divide error (<code>#DE</code>) occurs when the denominator of a DIV …","When the debug-exception mechanism is enabled, a <code>#DB</code> …","An non maskable interrupt exception (NMI) occurs as a …","A breakpoint (<code>#BP</code>) exception occurs when an <code>INT3</code> …","An overflow exception (<code>#OF</code>) occurs as a result of …","A bound-range exception (<code>#BR</code>) exception can occur as a …","An invalid opcode exception (<code>#UD</code>) occurs when an attempt …","A device not available exception (<code>#NM</code>) occurs under any …","A double fault (<code>#DF</code>) exception can occur when a second …","An invalid TSS exception (<code>#TS</code>) occurs only as a result of …","An segment-not-present exception (<code>#NP</code>) occurs when an …","An stack segment exception (<code>#SS</code>) can occur in the …","A general protection fault (<code>#GP</code>) can occur in various …","A page fault (<code>#PF</code>) can occur during a memory access in …","The x87 Floating-Point Exception-Pending exception (<code>#MF</code>) …","An alignment check exception (<code>#AC</code>) occurs when an …","The machine check exception (<code>#MC</code>) is model specific. …","The SIMD Floating-Point Exception (<code>#XF</code>) is used to handle …","vector nr. 20","The Security Exception (<code>#SX</code>) signals security-sensitive …","Creates a new IDT filled with non-present entries.","Resets all entries of this IDT in place.","Loads the IDT in the CPU using the <code>lidt</code> command.","Loads the IDT in the CPU using the <code>lidt</code> command.","Returns slice of IDT entries with the specified range.","Returns a mutable slice of IDT entries with the specified …","An Interrupt Descriptor Table entry.","A handler function for an interrupt or an exception …","A handler function for an exception that pushes an error …","A page fault handler function that pushes a page fault …","A handler function that must not return, e.g. for a …","A handler function with an error code that must not …","Creates a non-present IDT entry (but sets the must-be-one …","Set the handler function for the IDT entry and sets the …","Set the handler function for the IDT entry and sets the …","Set the handler function for the IDT entry and sets the …","Set the handler function for the IDT entry and sets the …","Set the handler function for the IDT entry and sets the …","Represents the options field of an IDT entry.","Set or reset the preset bit.","Let the CPU disable hardware interrupts when the handler …","Set the required privilege level (DPL) for invoking the …","Assigns a Interrupt Stack Table (IST) stack to this …","Wrapper type for the interrupt stack frame pushed by the …","Gives mutable access to the contents of the interrupt …","Represents the interrupt stack frame pushed by the CPU on …","This value points to the instruction that should be …","The code segment selector, padded with zeros.","The flags register before the interrupt handler was …","The stack pointer at the time of the interrupt.","The stack segment descriptor at the time of the interrupt …","Describes an page fault error code.","If this flag is set, the page fault was caused by a …","If this flag is set, the memory access that caused the …","If this flag is set, an access in user mode (CPL=3) …","If this flag is set, the page fault is a result of the …","If this flag is set, it indicates that the access that …","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Abstractions for page tables and other paging related …","Abstractions for default-sized and huge physical memory …","A physical memory frame.","Returns the frame that starts at the given virtual …","Returns the frame that starts at the given virtual …","Returns the frame that contains the given physical …","Returns the start address of the frame.","Returns the size the frame (4KB, 2MB or 1GB).","Returns a range of frames, exclusive <code>end</code>.","Returns a range of frames, inclusive <code>end</code>.","An range of physical memory frames, exclusive the upper …","The start of the range, inclusive.","The end of the range, exclusive.","Returns whether the range contains no frames.","An range of physical memory frames, inclusive the upper …","The start of the range, inclusive.","The start of the range, inclusive.","Returns whether the range contains no frames.","Abstractions for reading and modifying the mapping of …","A Mapper implementation that relies on a PhysAddr to …","Provides a virtual address mapping for physical page …","Translate the given physical frame to a virtual page …","A Mapper implementation that requires that the complete …","The given page table was not suitable to create a …","The given page table was not at an recursive address.","The given page table was not active on the CPU.","A recursive page table is a last level page table with an …","An empty convencience trait that requires the <code>Mapper</code> …","Provides methods for translating virtual addresses.","Return the frame that the given virtual address is mapped …","Translates the given virtual address to the physical …","The return value of the [<code>Translate::translate</code>] function.","The virtual address is mapped to a physical frame.","The mapped frame.","The offset whithin the mapped frame.","The entry flags in the lowest-level page table.","The given virtual address is not mapped to a physical …","The page table entry for the given virtual address points …","Represents a physical frame mapped in a page table.","The virtual address is mapped to a 4KiB frame.","The virtual address is mapped to a “large” 2MiB frame.","The virtual address is mapped to a “huge” 1GiB frame.","Returns the start address of the frame.","Returns the size the frame (4KB, 2MB or 1GB).","A trait for common page table operations on pages of size …","Creates a new mapping in the page table.","Creates a new mapping in the page table.","Removes a mapping from the page table and returns the …","Updates the flags of an existing mapping.","Set the flags of an existing page level 4 table entry","Set the flags of an existing page table level 3 entry","Set the flags of an existing page table level 2 entry","Return the frame that the specified page is mapped to.","Maps the given frame to the virtual page with the same …","This type represents a page whose mapping has changed in …","Flush the page from the TLB to ensure that the newest …","Don’t flush the TLB and silence the “must be used” …","This type represents a change of a page table requiring a …","Flush all pages from the TLB to ensure that the newest …","Don’t flush the TLB and silence the “must be used” …","This error is returned from <code>map_to</code> and similar methods.","An additional frame was needed for the mapping process, …","An upper level page table entry has the <code>HUGE_PAGE</code> flag …","The given page is already mapped to a physical frame.","An error indicating that an <code>unmap</code> call failed.","An upper level page table entry has the <code>HUGE_PAGE</code> flag …","The given page is not mapped to a physical frame.","The page table entry for the given page points to an …","An error indicating that an <code>update_flags</code> call failed.","The given page is not mapped to a physical frame.","An upper level page table entry has the <code>HUGE_PAGE</code> flag …","An error indicating that an <code>translate</code> call failed.","The given page is not mapped to a physical frame.","An upper level page table entry has the <code>HUGE_PAGE</code> flag …","The page table entry for the given page points to an …","Abstractions for default-sized and huge virtual memory …","Trait for abstracting over the three possible page sizes …","The page size in bytes.","A string representation of the page size for debug output.","This trait is implemented for 4KiB and 2MiB pages, but …","A standard 4KiB page.","A “huge” 2MiB page.","A “giant” 1GiB page.","A virtual memory page.","The page size in bytes.","Returns the page that starts at the given virtual address.","Returns the page that starts at the given virtual address.","Returns the page that contains the given virtual address.","Returns the start address of the page.","Returns the size the page (4KB, 2MB or 1GB).","Returns the level 4 page table index of this page.","Returns the level 3 page table index of this page.","Returns a range of pages, exclusive <code>end</code>.","Returns a range of pages, inclusive <code>end</code>.","Returns the level 2 page table index of this page.","Returns the 1GiB memory page with the specified page …","Returns the 2MiB memory page with the specified page …","Returns the 4KiB memory page with the specified page …","Returns the level 1 page table index of this page.","A range of pages with exclusive upper bound.","The start of the range, inclusive.","The end of the range, exclusive.","Returns wether this range contains no pages.","Converts the range of 2MiB pages to a range of 4KiB pages.","A range of pages with inclusive upper bound.","The start of the range, inclusive.","The end of the range, inclusive.","Returns wether this range contains no pages.","The given address was not sufficiently aligned.","Abstractions for page tables and page table entries.","The error returned by the <code>PageTableEntry::frame</code> method.","The entry does not have the <code>PRESENT</code> flag set, so it isn’…","The entry does have the <code>HUGE_PAGE</code> flag set. The <code>frame</code> …","A 64-bit page table entry.","Creates an unused page table entry.","Returns whether this entry is zero.","Sets this entry to zero.","Returns the flags of this entry.","Returns the physical address mapped by this entry, might …","Returns the physical frame mapped by this entry.","Map the entry to the specified physical address with the …","Map the entry to the specified physical frame with the …","Sets the flags of this entry.","Possible flags for a page table entry.","Specifies whether the mapped frame or page table is …","Controls whether writes to the mapped frames are allowed.","Controls whether accesses from userspace (i.e. ring 3) …","If this bit is set, a “write-through” policy is used …","Disables caching for the pointed entry is cacheable.","Set by the CPU when the mapped frame or page table is …","Set by the CPU on a write to the mapped frame.","Specifies that the entry maps a huge frame instead of a …","Indicates that the mapping is present in all address …","Available to the OS, can be used to store additional …","Available to the OS, can be used to store additional …","Available to the OS, can be used to store additional …","Available to the OS, can be used to store additional …","Available to the OS, can be used to store additional …","Available to the OS, can be used to store additional …","Available to the OS, can be used to store additional …","Available to the OS, can be used to store additional …","Available to the OS, can be used to store additional …","Available to the OS, can be used to store additional …","Available to the OS, can be used to store additional …","Available to the OS, can be used to store additional …","Available to the OS, can be used to store additional …","Available to the OS, can be used to store additional …","Forbid code execution from the mapped frames.","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Represents a page table.","Creates an empty page table.","Clears all entries.","Returns an iterator over the entries of the page table.","Returns an iterator that allows modifying the entries of …","A 9-bit index into a page table.","Creates a new index from the given <code>u16</code>. Panics if the …","Creates a new index from the given <code>u16</code>. Throws away bits …","A 12-bit offset into a 4KiB Page.","Creates a new offset from the given <code>u16</code>. Panics if the …","Creates a new offset from the given <code>u16</code>. Throws away bits …","A trait for types that can allocate a frame of memory.","Allocate a frame of the appropriate size and return it if …","A trait for types that can deallocate a frame of memory.","Deallocate the given unused frame.","Traits for accessing I/O ports.","A helper trait that implements the read port operation.","Reads a <code>Self</code> value from the given port.","A helper trait that implements the write port operation.","Writes a <code>Self</code> value to the given port.","Provides a type for the task state segment structure.","In 64-bit mode the TSS holds information that is not …","The full 64-bit canonical forms of the stack pointers …","The full 64-bit canonical forms of the interrupt stack …","The 16-bit offset to the I/O permission bit map from the …","Creates a new TSS with zeroed privilege and interrupt …","A struct describing a pointer to a descriptor table (GDT …","Size of the DT.","Pointer to the memory region containing the DT.","Represents a protection ring level.","Privilege-level 0 (most privilege): This level is used by …","Privilege-level 1 (moderate privilege): This level is …","Privilege-level 2 (moderate privilege): Like level 1, …","Privilege-level 3 (least privilege): This level is used …","Creates a <code>PrivilegeLevel</code> from a numeric value. The value …","Generate a software interrupt by invoking the <code>int</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","","","","","Returns the set difference of the two sets of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","","","Disables all flags enabled in the set.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Returns the IDT entry with the specified index.","","","Returns a mutable reference to the IDT entry with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Read the current set of CR0 flags.","Read the current raw CR0 value.","Write CR0 flags.","Write raw CR0 flags.","Updates CR0 flags.","Read the current page fault linear address from the CR2 …","Read the current P4 table address from the CR3 register.","Read the current P4 table address from the CR3 register","Read the current P4 table address from the CR3 register …","Write a new P4 table address into the CR3 register.","Write a new P4 table address into the CR3 register.","Read the current set of CR4 flags.","Read the current raw CR4 value.","Write CR4 flags.","Write raw CR4 flags.","Updates CR4 flags.","Read 64 bits msr register.","Write 64 bits to msr register.","Read the current EFER flags.","Read the current raw EFER flags.","Write the EFER flags, preserving reserved values.","Write the EFER flags.","Update EFER flags.","Read the current FsBase register.","Write a given virtual address to the FS.Base register.","Read the current GsBase register.","Write a given virtual address to the GS.Base register.","Read the current KernelGsBase register.","Write a given virtual address to the KernelGsBase …","Read the Ring 0 and Ring 3 segment bases. The remaining …","Read the Ring 0 and Ring 3 segment bases. Returns","Write the Ring 0 and Ring 3 segment bases. The remaining …","Write the Ring 0 and Ring 3 segment bases. The remaining …","Read the current LStar register. This holds the target …","Write a given virtual address to the LStar register. This …","Read to the SFMask register. The SFMASK register is used …","Write to the SFMask register. The SFMASK register is used …","Creates a new <code>MappedPageTable</code> that uses the passed …","Returns a mutable reference to the wrapped level 4 …","Creates a new <code>OffsetPageTable</code> that uses the given offset …","Returns a mutable reference to the wrapped level 4 …","Creates a new RecursivePageTable from the passed level 4 …","Creates a new RecursivePageTable without performing any …","Returns a mutable reference to the wrapped level 4 …"],"i":[0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,4,4,5,5,5,0,0,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,0,8,8,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,12,0,0,0,0,0,0,0,13,14,15,16,17,18,19,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,0,0,0,0,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,0,0,22,22,22,22,22,0,23,23,23,23,23,23,0,24,24,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,24,24,24,24,24,0,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,0,0,0,0,0,27,27,27,27,27,27,0,28,28,28,28,0,29,0,30,30,30,30,30,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,0,0,32,32,32,32,32,32,32,0,33,33,33,0,34,34,34,0,0,0,35,0,0,36,36,0,0,0,37,37,0,38,39,39,39,38,38,0,40,40,40,40,40,0,41,41,41,41,41,41,41,41,41,0,42,42,0,43,43,0,44,44,44,0,45,45,45,0,46,46,0,47,47,47,0,0,48,48,0,0,0,0,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,50,50,50,50,0,51,51,51,0,0,0,52,52,0,53,53,53,53,53,53,53,53,53,0,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,0,55,55,55,55,0,56,56,0,57,57,0,58,0,59,0,0,60,0,61,0,0,62,62,62,62,0,63,63,0,64,64,64,64,64,0,1,1,1,1,1,1,1,2,2,2,2,2,2,2,65,65,65,65,65,65,65,66,66,66,66,66,66,66,3,3,3,3,3,3,3,4,4,4,4,4,4,4,5,5,5,5,5,5,5,6,6,6,6,6,6,6,7,7,7,7,7,7,7,8,8,8,8,8,8,8,67,67,67,67,67,67,67,9,9,9,9,9,9,9,68,68,68,68,68,68,68,69,69,69,69,69,69,69,10,10,10,10,10,10,10,70,70,70,70,70,70,70,11,11,11,11,11,11,11,12,12,12,12,12,12,12,13,13,13,13,13,13,13,14,14,14,14,14,14,14,15,15,15,15,15,15,15,16,16,16,16,16,16,16,17,17,17,17,17,17,17,18,18,18,18,18,18,18,19,19,19,19,19,19,19,20,20,20,20,20,20,20,21,21,21,21,21,21,21,22,22,22,22,22,22,22,23,23,23,23,23,23,23,24,24,24,24,24,24,24,25,25,25,25,25,25,25,26,26,26,26,26,26,26,27,27,27,27,27,27,27,28,28,28,28,28,28,28,29,29,29,29,29,29,29,30,30,30,30,30,30,30,31,31,31,31,31,31,31,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,71,71,71,71,71,71,71,72,72,72,72,72,72,72,73,73,73,73,73,73,73,36,36,36,36,36,36,36,38,38,38,38,38,38,38,40,40,40,40,40,40,40,42,42,42,42,42,42,42,43,43,43,43,43,43,43,44,44,44,44,44,44,44,45,45,45,45,45,45,45,46,46,46,46,46,46,46,47,47,47,47,47,47,47,74,74,74,74,74,74,74,75,75,75,75,75,75,75,76,76,76,76,76,76,76,49,49,49,49,49,49,49,50,50,50,50,50,50,50,50,51,51,51,51,51,51,51,51,77,77,77,77,77,77,77,52,52,52,52,52,52,52,53,53,53,53,53,53,53,54,54,54,54,54,54,54,55,55,55,55,55,55,55,56,56,56,56,56,56,56,57,57,57,57,57,57,57,62,62,62,62,62,62,62,63,63,63,63,63,63,63,64,64,64,64,64,64,64,71,72,73,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,29,65,1,66,2,3,4,5,6,7,8,67,9,68,69,10,70,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,71,72,73,36,38,40,42,43,44,45,46,47,74,75,76,49,50,51,77,52,53,54,55,56,57,62,63,64,36,77,1,1,1,2,2,2,9,10,11,20,21,25,31,32,32,49,49,54,1,1,2,2,3,3,4,4,5,5,9,9,10,10,11,11,20,20,21,21,22,22,25,25,27,27,28,28,31,31,32,32,33,33,34,34,74,75,76,49,49,50,50,51,51,52,54,54,56,56,57,57,64,1,2,9,10,11,20,21,25,31,32,74,75,76,49,54,56,57,1,2,9,10,11,20,21,25,31,32,74,75,76,49,54,56,57,1,1,2,2,32,49,1,1,2,2,32,49,1,1,2,2,9,10,11,20,21,25,31,32,49,54,9,10,11,20,21,25,31,54,9,10,11,20,21,25,31,54,9,10,11,20,21,25,31,54,9,10,11,20,21,25,31,54,9,10,11,20,21,25,31,54,9,10,11,20,21,25,31,54,9,10,11,20,21,25,31,54,26,55,55,26,55,55,9,10,11,20,21,25,31,54,9,10,11,20,21,25,31,54,2,9,10,11,20,21,25,31,54,2,9,10,11,20,21,25,31,54,2,9,10,11,20,21,25,31,54,2,9,10,11,20,21,25,31,54,33,34,50,51,9,10,11,20,21,25,31,54,1,2,3,4,5,6,9,10,11,20,21,22,23,24,25,26,27,28,30,31,32,33,34,74,75,76,49,50,51,52,53,54,55,56,57,62,63,64,55,67,67,67,67,67,68,69,69,69,69,69,70,70,70,70,70,12,12,13,13,13,13,13,14,14,15,15,16,16,17,17,17,17,18,18,19,19,71,71,72,72,73,73,73],"f":[null,null,null,null,[[["u64",15]],["virtaddr",3]],[[["u64",15]],[["virtaddrnotvalid",3],["result",4],["virtaddr",3]]],[[["u64",15]],["virtaddr",3]],[[["u64",15]],["virtaddr",3]],[[],["virtaddr",3]],[[],["u64",15]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[],["bool",15]],[[],["pageoffset",3]],[[],["pagetableindex",3]],[[],["pagetableindex",3]],[[],["pagetableindex",3]],[[],["pagetableindex",3]],null,[[["u64",15]],["physaddr",3]],[[["u64",15]],["physaddr",3]],[[["u64",15]],["physaddr",3]],[[["u64",15]],[["physaddrnotvalid",3],["result",4],["physaddr",3]]],[[],["physaddr",3]],[[],["u64",15]],[[],["bool",15]],[[]],[[]],[[],["bool",15]],[[["u64",15]],["u64",15]],[[["u64",15]],["u64",15]],null,null,[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[["u16",15]],["portreadonly",3]],[[]],[[["u16",15]],["portwriteonly",3]],[[]],[[["u16",15]],["port",3]],[[]],[[]],null,null,[[],["option",4]],[[],[["option",4],["u64",15]]],[[],[["u32",15],["option",4]]],[[],[["option",4],["u16",15]]],null,[[["segmentselector",3]]],[[["segmentselector",3]]],[[["segmentselector",3]]],[[["segmentselector",3]]],[[["segmentselector",3]]],[[["segmentselector",3]]],[[]],[[],["segmentselector",3]],[[["u64",15]]],[[],["u64",15]],[[["u64",15]]],[[],["u64",15]],null,[[["descriptortablepointer",3]]],[[["descriptortablepointer",3]]],[[["segmentselector",3]]],null,[[["virtaddr",3]]],[[]],null,null,null,null,null,null,[[["u16",15]],[["pcid",3],["str",15],["result",4]]],[[],["u16",15]],[[["invpicdcommand",4]]],[[]],[[]],[[]],[[],["virtaddr",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["cr0flags",3]],[[],["cr0flags",3]],[[],["u64",15]],[[["u64",15]],[["option",4],["cr0flags",3]]],[[["u64",15]],["cr0flags",3]],[[["u64",15]],["cr0flags",3]],[[],["bool",15]],[[],["bool",15]],[[["cr0flags",3]],["bool",15]],[[["cr0flags",3]],["bool",15]],[[["cr0flags",3]]],[[["cr0flags",3]]],[[["cr0flags",3]]],[[["cr0flags",3],["bool",15]]],null,null,null,null,null,[[],["cr3flags",3]],[[],["cr3flags",3]],[[],["u64",15]],[[["u64",15]],[["cr3flags",3],["option",4]]],[[["u64",15]],["cr3flags",3]],[[["u64",15]],["cr3flags",3]],[[],["bool",15]],[[],["bool",15]],[[["cr3flags",3]],["bool",15]],[[["cr3flags",3]],["bool",15]],[[["cr3flags",3]]],[[["cr3flags",3]]],[[["cr3flags",3]]],[[["bool",15],["cr3flags",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["cr4flags",3]],[[],["cr4flags",3]],[[],["u64",15]],[[["u64",15]],[["cr4flags",3],["option",4]]],[[["u64",15]],["cr4flags",3]],[[["u64",15]],["cr4flags",3]],[[],["bool",15]],[[],["bool",15]],[[["cr4flags",3]],["bool",15]],[[["cr4flags",3]],["bool",15]],[[["cr4flags",3]]],[[["cr4flags",3]]],[[["cr4flags",3]]],[[["bool",15],["cr4flags",3]]],null,null,[[["u32",15]],["msr",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["eferflags",3]],[[],["eferflags",3]],[[],["u64",15]],[[["u64",15]],[["option",4],["eferflags",3]]],[[["u64",15]],["eferflags",3]],[[["u64",15]],["eferflags",3]],[[],["bool",15]],[[],["bool",15]],[[["eferflags",3]],["bool",15]],[[["eferflags",3]],["bool",15]],[[["eferflags",3]]],[[["eferflags",3]]],[[["eferflags",3]]],[[["bool",15],["eferflags",3]]],null,[[],["rflags",3]],[[],["u64",15]],[[["rflags",3]]],[[["u64",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["rflags",3]],[[],["rflags",3]],[[],["u64",15]],[[["u64",15]],[["option",4],["rflags",3]]],[[["u64",15]],["rflags",3]],[[["u64",15]],["rflags",3]],[[],["bool",15]],[[],["bool",15]],[[["rflags",3]],["bool",15]],[[["rflags",3]],["bool",15]],[[["rflags",3]]],[[["rflags",3]]],[[["rflags",3]]],[[["bool",15],["rflags",3]]],null,null,null,null,[[["u16",15],["privilegelevel",4]],["segmentselector",3]],[[],["u16",15]],[[],["privilegelevel",4]],[[["privilegelevel",4]]],null,[[],["globaldescriptortable",3]],[[],["globaldescriptortable",3]],[[]],[[["descriptor",4]],["segmentselector",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["descriptorflags",3]],[[],["descriptorflags",3]],[[],["u64",15]],[[["u64",15]],[["descriptorflags",3],["option",4]]],[[["u64",15]],["descriptorflags",3]],[[["u64",15]],["descriptorflags",3]],[[],["bool",15]],[[],["bool",15]],[[["descriptorflags",3]],["bool",15]],[[["descriptorflags",3]],["bool",15]],[[["descriptorflags",3]]],[[["descriptorflags",3]]],[[["descriptorflags",3]]],[[["bool",15],["descriptorflags",3]]],null,null,null,null,null,null,[[],["descriptor",4]],[[],["descriptor",4]],[[],["descriptor",4]],[[],["descriptor",4]],[[["taskstatesegment",3]],["descriptor",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["interruptdescriptortable",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[]],[[["handlerfunc",6]],["entryoptions",3]],[[["handlerfuncwitherrcode",6]],["entryoptions",3]],[[["pagefaulthandlerfunc",6]],["entryoptions",3]],[[["diverginghandlerfunc",6]],["entryoptions",3]],[[["diverginghandlerfuncwitherrcode",6]],["entryoptions",3]],null,[[["bool",15]]],[[["bool",15]]],[[["privilegelevel",4]]],[[["u16",15]]],null,[[],["interruptstackframevalue",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["pagefaulterrorcode",3]],[[],["pagefaulterrorcode",3]],[[],["u64",15]],[[["u64",15]],[["option",4],["pagefaulterrorcode",3]]],[[["u64",15]],["pagefaulterrorcode",3]],[[["u64",15]],["pagefaulterrorcode",3]],[[],["bool",15]],[[],["bool",15]],[[["pagefaulterrorcode",3]],["bool",15]],[[["pagefaulterrorcode",3]],["bool",15]],[[["pagefaulterrorcode",3]]],[[["pagefaulterrorcode",3]]],[[["pagefaulterrorcode",3]]],[[["bool",15],["pagefaulterrorcode",3]]],null,null,null,[[["physaddr",3]],[["addressnotaligned",3],["result",4]]],[[["physaddr",3]]],[[["physaddr",3]]],[[],["physaddr",3]],[[],["u64",15]],[[["physframe",3]],["physframerange",3]],[[["physframe",3]],["physframerangeinclusive",3]],null,null,null,[[],["bool",15]],null,null,null,[[],["bool",15]],null,null,null,[[["physframe",3]]],null,null,null,null,null,null,null,[[["virtaddr",3]],["translateresult",4]],[[["virtaddr",3]],[["option",4],["physaddr",3]]],null,null,null,null,null,null,null,null,null,null,null,[[],["physaddr",3]],[[],["u64",15]],null,[[["page",3],["physframe",3],["pagetableflags",3]],[["mapperflush",3],["result",4],["maptoerror",4]]],[[["page",3],["physframe",3],["pagetableflags",3]],[["mapperflush",3],["result",4],["maptoerror",4]]],[[["page",3]],[["unmaperror",4],["result",4]]],[[["page",3],["pagetableflags",3]],[["mapperflush",3],["result",4],["flagupdateerror",4]]],[[["page",3],["pagetableflags",3]],[["mapperflushall",3],["result",4],["flagupdateerror",4]]],[[["page",3],["pagetableflags",3]],[["mapperflushall",3],["result",4],["flagupdateerror",4]]],[[["page",3],["pagetableflags",3]],[["mapperflushall",3],["result",4],["flagupdateerror",4]]],[[["page",3]],[["physframe",3],["result",4],["translateerror",4]]],[[["physframe",3],["pagetableflags",3]],[["mapperflush",3],["result",4],["maptoerror",4]]],null,[[]],[[]],null,[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["virtaddr",3]],[["addressnotaligned",3],["result",4]]],[[["virtaddr",3]]],[[["virtaddr",3]]],[[],["virtaddr",3]],[[],["u64",15]],[[],["pagetableindex",3]],[[],["pagetableindex",3]],[[],["pagerange",3]],[[],["pagerangeinclusive",3]],[[],["pagetableindex",3]],[[["pagetableindex",3]]],[[["pagetableindex",3]]],[[["pagetableindex",3]]],[[],["pagetableindex",3]],null,null,null,[[],["bool",15]],[[],[["size4kib",4],["pagerange",3]]],null,null,null,[[],["bool",15]],null,null,null,null,null,null,[[]],[[],["bool",15]],[[]],[[],["pagetableflags",3]],[[],["physaddr",3]],[[],[["result",4],["frameerror",4],["physframe",3]]],[[["physaddr",3],["pagetableflags",3]]],[[["pagetableflags",3],["physframe",3]]],[[["pagetableflags",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["pagetableflags",3]],[[],["pagetableflags",3]],[[],["u64",15]],[[["u64",15]],[["pagetableflags",3],["option",4]]],[[["u64",15]],["pagetableflags",3]],[[["u64",15]],["pagetableflags",3]],[[],["bool",15]],[[],["bool",15]],[[["pagetableflags",3]],["bool",15]],[[["pagetableflags",3]],["bool",15]],[[["pagetableflags",3]]],[[["pagetableflags",3]]],[[["pagetableflags",3]]],[[["bool",15],["pagetableflags",3]]],null,[[]],[[]],[[]],[[]],null,[[["u16",15]]],[[["u16",15]]],null,[[["u16",15]]],[[["u16",15]]],null,[[],[["option",4],["physframe",3]]],null,[[["physframe",3]]],null,null,[[["u16",15]]],null,[[["u16",15]]],null,null,null,null,null,[[],["taskstatesegment",3]],null,null,null,null,null,null,null,null,[[["u16",15]],["privilegelevel",4]],null,[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["virtaddr",3]],["translateresult",4]],[[["virtaddr",3]],["translateresult",4]],[[["virtaddr",3]],["translateresult",4]],[[["pagetableflags",3],["physframe",3],["page",3],["size1gib",4]],[["result",4],["mapperflush",3],["maptoerror",4]]],[[["page",3],["size1gib",4]],[["unmaperror",4],["result",4]]],[[["page",3],["size1gib",4],["pagetableflags",3]],[["result",4],["mapperflush",3],["flagupdateerror",4]]],[[["page",3],["size1gib",4],["pagetableflags",3]],[["mapperflushall",3],["result",4],["flagupdateerror",4]]],[[["page",3],["size1gib",4],["pagetableflags",3]],[["mapperflushall",3],["result",4],["flagupdateerror",4]]],[[["page",3],["size1gib",4],["pagetableflags",3]],[["mapperflushall",3],["result",4],["flagupdateerror",4]]],[[["page",3],["size1gib",4]],[["physframe",3],["translateerror",4],["result",4]]],[[["page",3],["pagetableflags",3],["size2mib",4],["physframe",3]],[["mapperflush",3],["maptoerror",4],["result",4]]],[[["size2mib",4],["page",3]],[["result",4],["unmaperror",4]]],[[["size2mib",4],["page",3],["pagetableflags",3]],[["mapperflush",3],["result",4],["flagupdateerror",4]]],[[["size2mib",4],["page",3],["pagetableflags",3]],[["mapperflushall",3],["result",4],["flagupdateerror",4]]],[[["size2mib",4],["page",3],["pagetableflags",3]],[["mapperflushall",3],["result",4],["flagupdateerror",4]]],[[["size2mib",4],["page",3],["pagetableflags",3]],[["mapperflushall",3],["result",4],["flagupdateerror",4]]],[[["size2mib",4],["page",3]],[["result",4],["physframe",3],["translateerror",4]]],[[["page",3],["pagetableflags",3],["size4kib",4],["physframe",3]],[["mapperflush",3],["result",4],["maptoerror",4]]],[[["page",3],["size4kib",4]],[["unmaperror",4],["result",4]]],[[["page",3],["size4kib",4],["pagetableflags",3]],[["result",4],["mapperflush",3],["flagupdateerror",4]]],[[["page",3],["size4kib",4],["pagetableflags",3]],[["mapperflushall",3],["result",4],["flagupdateerror",4]]],[[["page",3],["size4kib",4],["pagetableflags",3]],[["mapperflushall",3],["result",4],["flagupdateerror",4]]],[[["page",3],["size4kib",4],["pagetableflags",3]],[["mapperflushall",3],["result",4],["flagupdateerror",4]]],[[["page",3],["size4kib",4]],[["physframe",3],["result",4],["translateerror",4]]],[[["pagetableflags",3],["physframe",3],["page",3],["size1gib",4]],[["result",4],["mapperflush",3],["maptoerror",4]]],[[["page",3],["size1gib",4]],[["unmaperror",4],["result",4]]],[[["page",3],["size1gib",4],["pagetableflags",3]],[["result",4],["mapperflush",3],["flagupdateerror",4]]],[[["page",3],["size1gib",4],["pagetableflags",3]],[["mapperflushall",3],["result",4],["flagupdateerror",4]]],[[["page",3],["size1gib",4],["pagetableflags",3]],[["mapperflushall",3],["result",4],["flagupdateerror",4]]],[[["page",3],["size1gib",4],["pagetableflags",3]],[["mapperflushall",3],["result",4],["flagupdateerror",4]]],[[["page",3],["size1gib",4]],[["physframe",3],["translateerror",4],["result",4]]],[[["page",3],["pagetableflags",3],["size2mib",4],["physframe",3]],[["mapperflush",3],["maptoerror",4],["result",4]]],[[["size2mib",4],["page",3]],[["result",4],["unmaperror",4]]],[[["size2mib",4],["page",3],["pagetableflags",3]],[["mapperflush",3],["result",4],["flagupdateerror",4]]],[[["size2mib",4],["page",3],["pagetableflags",3]],[["mapperflushall",3],["result",4],["flagupdateerror",4]]],[[["size2mib",4],["page",3],["pagetableflags",3]],[["mapperflushall",3],["result",4],["flagupdateerror",4]]],[[["size2mib",4],["page",3],["pagetableflags",3]],[["mapperflushall",3],["result",4],["flagupdateerror",4]]],[[["size2mib",4],["page",3]],[["result",4],["physframe",3],["translateerror",4]]],[[["page",3],["pagetableflags",3],["size4kib",4],["physframe",3]],[["mapperflush",3],["result",4],["maptoerror",4]]],[[["page",3],["size4kib",4]],[["unmaperror",4],["result",4]]],[[["page",3],["size4kib",4],["pagetableflags",3]],[["result",4],["mapperflush",3],["flagupdateerror",4]]],[[["page",3],["size4kib",4],["pagetableflags",3]],[["mapperflushall",3],["result",4],["flagupdateerror",4]]],[[["page",3],["size4kib",4],["pagetableflags",3]],[["mapperflushall",3],["result",4],["flagupdateerror",4]]],[[["page",3],["size4kib",4],["pagetableflags",3]],[["mapperflushall",3],["result",4],["flagupdateerror",4]]],[[["page",3],["size4kib",4]],[["physframe",3],["result",4],["translateerror",4]]],[[["pagetableflags",3],["physframe",3],["page",3],["size1gib",4]],[["result",4],["mapperflush",3],["maptoerror",4]]],[[["page",3],["size1gib",4]],[["unmaperror",4],["result",4]]],[[["page",3],["size1gib",4],["pagetableflags",3]],[["result",4],["mapperflush",3],["flagupdateerror",4]]],[[["page",3],["size1gib",4],["pagetableflags",3]],[["mapperflushall",3],["result",4],["flagupdateerror",4]]],[[["page",3],["size1gib",4],["pagetableflags",3]],[["mapperflushall",3],["result",4],["flagupdateerror",4]]],[[["page",3],["size1gib",4],["pagetableflags",3]],[["mapperflushall",3],["result",4],["flagupdateerror",4]]],[[["page",3],["size1gib",4]],[["physframe",3],["translateerror",4],["result",4]]],[[["page",3],["pagetableflags",3],["size2mib",4],["physframe",3]],[["mapperflush",3],["maptoerror",4],["result",4]]],[[["size2mib",4],["page",3]],[["result",4],["unmaperror",4]]],[[["size2mib",4],["page",3],["pagetableflags",3]],[["mapperflush",3],["result",4],["flagupdateerror",4]]],[[["size2mib",4],["page",3],["pagetableflags",3]],[["mapperflushall",3],["result",4],["flagupdateerror",4]]],[[["size2mib",4],["page",3],["pagetableflags",3]],[["mapperflushall",3],["result",4],["flagupdateerror",4]]],[[["size2mib",4],["page",3],["pagetableflags",3]],[["mapperflushall",3],["result",4],["flagupdateerror",4]]],[[["size2mib",4],["page",3]],[["result",4],["physframe",3],["translateerror",4]]],[[["page",3],["pagetableflags",3],["size4kib",4],["physframe",3]],[["mapperflush",3],["result",4],["maptoerror",4]]],[[["page",3],["size4kib",4]],[["unmaperror",4],["result",4]]],[[["page",3],["size4kib",4],["pagetableflags",3]],[["result",4],["mapperflush",3],["flagupdateerror",4]]],[[["page",3],["size4kib",4],["pagetableflags",3]],[["mapperflushall",3],["result",4],["flagupdateerror",4]]],[[["page",3],["size4kib",4],["pagetableflags",3]],[["mapperflushall",3],["result",4],["flagupdateerror",4]]],[[["page",3],["size4kib",4],["pagetableflags",3]],[["mapperflushall",3],["result",4],["flagupdateerror",4]]],[[["page",3],["size4kib",4]],[["physframe",3],["result",4],["translateerror",4]]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["u64",15]]],[[["usize",15]]],[[["virtaddr",3]]],[[["u64",15]]],[[["usize",15]]],[[["physaddr",3]]],[[["cr0flags",3]],["cr0flags",3]],[[["cr3flags",3]],["cr3flags",3]],[[["cr4flags",3]],["cr4flags",3]],[[["eferflags",3]],["eferflags",3]],[[["rflags",3]],["rflags",3]],[[["descriptorflags",3]],["descriptorflags",3]],[[["pagefaulterrorcode",3]],["pagefaulterrorcode",3]],[[["u64",15]]],[[["physframe",3]]],[[["u64",15]]],[[]],[[["pagetableflags",3]],["pagetableflags",3]],[[["virtaddr",3]],["bool",15]],[[["virtaddr",3]],["bool",15]],[[["physaddr",3]],["bool",15]],[[["physaddr",3]],["bool",15]],[[["portreadonly",3]],["bool",15]],[[["portreadonly",3]],["bool",15]],[[["portwriteonly",3]],["bool",15]],[[["portwriteonly",3]],["bool",15]],[[["port",3]],["bool",15]],[[["port",3]],["bool",15]],[[["cr0flags",3]],["bool",15]],[[["cr0flags",3]],["bool",15]],[[["cr3flags",3]],["bool",15]],[[["cr3flags",3]],["bool",15]],[[["cr4flags",3]],["bool",15]],[[["cr4flags",3]],["bool",15]],[[["eferflags",3]],["bool",15]],[[["eferflags",3]],["bool",15]],[[["rflags",3]],["bool",15]],[[["rflags",3]],["bool",15]],[[["segmentselector",3]],["bool",15]],[[["segmentselector",3]],["bool",15]],[[["descriptorflags",3]],["bool",15]],[[["descriptorflags",3]],["bool",15]],[[["entry",3]],["bool",15]],[[["entry",3]],["bool",15]],[[["entryoptions",3]],["bool",15]],[[["entryoptions",3]],["bool",15]],[[["pagefaulterrorcode",3]],["bool",15]],[[["pagefaulterrorcode",3]],["bool",15]],[[["physframe",3]],["bool",15]],[[["physframe",3]],["bool",15]],[[["physframerange",3]],["bool",15]],[[["physframerange",3]],["bool",15]],[[["physframerangeinclusive",3]],["bool",15]],[[["physframerangeinclusive",3]],["bool",15]],[[["size4kib",4]],["bool",15]],[[["size2mib",4]],["bool",15]],[[["size1gib",4]],["bool",15]],[[["page",3]],["bool",15]],[[["page",3]],["bool",15]],[[["pagerange",3]],["bool",15]],[[["pagerange",3]],["bool",15]],[[["pagerangeinclusive",3]],["bool",15]],[[["pagerangeinclusive",3]],["bool",15]],[[["frameerror",4]],["bool",15]],[[["pagetableflags",3]],["bool",15]],[[["pagetableflags",3]],["bool",15]],[[["pagetableindex",3]],["bool",15]],[[["pagetableindex",3]],["bool",15]],[[["pageoffset",3]],["bool",15]],[[["pageoffset",3]],["bool",15]],[[["privilegelevel",4]],["bool",15]],[[["virtaddr",3]],["ordering",4]],[[["physaddr",3]],["ordering",4]],[[["cr0flags",3]],["ordering",4]],[[["cr3flags",3]],["ordering",4]],[[["cr4flags",3]],["ordering",4]],[[["eferflags",3]],["ordering",4]],[[["rflags",3]],["ordering",4]],[[["descriptorflags",3]],["ordering",4]],[[["pagefaulterrorcode",3]],["ordering",4]],[[["physframe",3]],["ordering",4]],[[["size4kib",4]],["ordering",4]],[[["size2mib",4]],["ordering",4]],[[["size1gib",4]],["ordering",4]],[[["page",3]],["ordering",4]],[[["pagetableflags",3]],["ordering",4]],[[["pagetableindex",3]],["ordering",4]],[[["pageoffset",3]],["ordering",4]],[[["virtaddr",3]],[["ordering",4],["option",4]]],[[["physaddr",3]],[["ordering",4],["option",4]]],[[["cr0flags",3]],[["ordering",4],["option",4]]],[[["cr3flags",3]],[["ordering",4],["option",4]]],[[["cr4flags",3]],[["ordering",4],["option",4]]],[[["eferflags",3]],[["ordering",4],["option",4]]],[[["rflags",3]],[["ordering",4],["option",4]]],[[["descriptorflags",3]],[["ordering",4],["option",4]]],[[["pagefaulterrorcode",3]],[["ordering",4],["option",4]]],[[["physframe",3]],[["ordering",4],["option",4]]],[[["size4kib",4]],[["ordering",4],["option",4]]],[[["size2mib",4]],[["ordering",4],["option",4]]],[[["size1gib",4]],[["ordering",4],["option",4]]],[[["page",3]],[["ordering",4],["option",4]]],[[["pagetableflags",3]],[["ordering",4],["option",4]]],[[["pagetableindex",3]],[["ordering",4],["option",4]]],[[["pageoffset",3]],[["ordering",4],["option",4]]],[[["u64",15]]],[[["usize",15]]],[[["u64",15]]],[[["usize",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["usize",15]]],[[["u64",15]]],[[["usize",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["usize",15]]],[[["u64",15]]],[[["usize",15]]],[[["cr0flags",3]]],[[["cr3flags",3]]],[[["cr4flags",3]]],[[["eferflags",3]]],[[["rflags",3]]],[[["descriptorflags",3]]],[[["pagefaulterrorcode",3]]],[[["u64",15]]],[[["u64",15]]],[[["pagetableflags",3]]],[[],["cr0flags",3]],[[],["cr3flags",3]],[[],["cr4flags",3]],[[],["eferflags",3]],[[],["rflags",3]],[[],["descriptorflags",3]],[[],["pagefaulterrorcode",3]],[[],["pagetableflags",3]],[[["cr0flags",3]],["cr0flags",3]],[[["cr3flags",3]],["cr3flags",3]],[[["cr4flags",3]],["cr4flags",3]],[[["eferflags",3]],["eferflags",3]],[[["rflags",3]],["rflags",3]],[[["descriptorflags",3]],["descriptorflags",3]],[[["pagefaulterrorcode",3]],["pagefaulterrorcode",3]],[[["pagetableflags",3]],["pagetableflags",3]],[[["cr0flags",3]],["cr0flags",3]],[[["cr3flags",3]],["cr3flags",3]],[[["cr4flags",3]],["cr4flags",3]],[[["eferflags",3]],["eferflags",3]],[[["rflags",3]],["rflags",3]],[[["descriptorflags",3]],["descriptorflags",3]],[[["pagefaulterrorcode",3]],["pagefaulterrorcode",3]],[[["pagetableflags",3]],["pagetableflags",3]],[[["cr0flags",3]],["cr0flags",3]],[[["cr3flags",3]],["cr3flags",3]],[[["cr4flags",3]],["cr4flags",3]],[[["eferflags",3]],["eferflags",3]],[[["rflags",3]],["rflags",3]],[[["descriptorflags",3]],["descriptorflags",3]],[[["pagefaulterrorcode",3]],["pagefaulterrorcode",3]],[[["pagetableflags",3]],["pagetableflags",3]],[[["cr0flags",3]]],[[["cr3flags",3]]],[[["cr4flags",3]]],[[["eferflags",3]]],[[["rflags",3]]],[[["descriptorflags",3]]],[[["pagefaulterrorcode",3]]],[[["pagetableflags",3]]],[[["cr0flags",3]]],[[["cr3flags",3]]],[[["cr4flags",3]]],[[["eferflags",3]]],[[["rflags",3]]],[[["descriptorflags",3]]],[[["pagefaulterrorcode",3]]],[[["pagetableflags",3]]],[[["cr0flags",3]]],[[["cr3flags",3]]],[[["cr4flags",3]]],[[["eferflags",3]]],[[["rflags",3]]],[[["descriptorflags",3]]],[[["pagefaulterrorcode",3]]],[[["pagetableflags",3]]],[[["usize",15]]],[[["usize",15]]],[[["pagetableindex",3]]],[[["usize",15]]],[[["usize",15]]],[[["pagetableindex",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["intoiterator",8]],["cr0flags",3]],[[["intoiterator",8]],["cr3flags",3]],[[["intoiterator",8]],["cr4flags",3]],[[["intoiterator",8]],["eferflags",3]],[[["intoiterator",8]],["rflags",3]],[[["intoiterator",8]],["descriptorflags",3]],[[["intoiterator",8]],["pagefaulterrorcode",3]],[[["intoiterator",8]],["pagetableflags",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[],["virtaddr",3]],[[],["physaddr",3]],[[],["portreadonly",3]],[[],["portwriteonly",3]],[[],["port",3]],[[],["rdrand",3]],[[],["cr0flags",3]],[[],["cr3flags",3]],[[],["cr4flags",3]],[[],["eferflags",3]],[[],["rflags",3]],[[],["segmentselector",3]],[[],["globaldescriptortable",3]],[[],["descriptor",4]],[[],["descriptorflags",3]],[[],["interruptdescriptortable",3]],[[],["entry",3]],[[],["entryoptions",3]],[[],["interruptstackframevalue",3]],[[],["pagefaulterrorcode",3]],[[],["physframe",3]],[[],["physframerange",3]],[[],["physframerangeinclusive",3]],[[],["size4kib",4]],[[],["size2mib",4]],[[],["size1gib",4]],[[],["page",3]],[[],["pagerange",3]],[[],["pagerangeinclusive",3]],[[],["frameerror",4]],[[],["pagetableentry",3]],[[],["pagetableflags",3]],[[],["pagetable",3]],[[],["pagetableindex",3]],[[],["pageoffset",3]],[[],["taskstatesegment",3]],[[],["descriptortablepointer",3]],[[],["privilegelevel",4]],[[]],[[],["cr0flags",3]],[[],["u64",15]],[[["cr0flags",3]]],[[["u64",15]]],[[]],[[],["virtaddr",3]],[[]],[[]],[[]],[[["cr3flags",3],["physframe",3]]],[[["pcid",3],["physframe",3]]],[[],["cr4flags",3]],[[],["u64",15]],[[["cr4flags",3]]],[[["u64",15]]],[[]],[[],["u64",15]],[[["u64",15]]],[[],["eferflags",3]],[[],["u64",15]],[[["eferflags",3]]],[[["u64",15]]],[[]],[[],["virtaddr",3]],[[["virtaddr",3]]],[[],["virtaddr",3]],[[["virtaddr",3]]],[[],["virtaddr",3]],[[["virtaddr",3]]],[[]],[[]],[[["u16",15]]],[[["segmentselector",3]],[["result",4],["str",15]]],[[],["virtaddr",3]],[[["virtaddr",3]]],[[],["rflags",3]],[[["rflags",3]]],[[["pagetable",3]]],[[],["pagetable",3]],[[["pagetable",3],["virtaddr",3]]],[[],["pagetable",3]],[[["pagetable",3]],[["result",4],["invalidpagetable",4]]],[[["pagetable",3],["pagetableindex",3]]],[[],["pagetable",3]]],"p":[[3,"VirtAddr"],[3,"PhysAddr"],[3,"PortReadOnly"],[3,"PortWriteOnly"],[3,"Port"],[3,"RdRand"],[4,"InvPicdCommand"],[3,"Pcid"],[3,"Cr0Flags"],[3,"Cr3Flags"],[3,"Cr4Flags"],[3,"Msr"],[3,"Efer"],[3,"FsBase"],[3,"GsBase"],[3,"KernelGsBase"],[3,"Star"],[3,"LStar"],[3,"SFMask"],[3,"EferFlags"],[3,"RFlags"],[3,"SegmentSelector"],[3,"GlobalDescriptorTable"],[4,"Descriptor"],[3,"DescriptorFlags"],[3,"InterruptDescriptorTable"],[3,"Entry"],[3,"EntryOptions"],[3,"InterruptStackFrame"],[3,"InterruptStackFrameValue"],[3,"PageFaultErrorCode"],[3,"PhysFrame"],[3,"PhysFrameRange"],[3,"PhysFrameRangeInclusive"],[8,"PageTableFrameMapping"],[4,"InvalidPageTable"],[8,"Translate"],[4,"TranslateResult"],[13,"Mapped"],[4,"MappedFrame"],[8,"Mapper"],[3,"MapperFlush"],[3,"MapperFlushAll"],[4,"MapToError"],[4,"UnmapError"],[4,"FlagUpdateError"],[4,"TranslateError"],[8,"PageSize"],[3,"Page"],[3,"PageRange"],[3,"PageRangeInclusive"],[4,"FrameError"],[3,"PageTableEntry"],[3,"PageTableFlags"],[3,"PageTable"],[3,"PageTableIndex"],[3,"PageOffset"],[8,"FrameAllocator"],[8,"FrameDeallocator"],[8,"PortRead"],[8,"PortWrite"],[3,"TaskStateSegment"],[3,"DescriptorTablePointer"],[4,"PrivilegeLevel"],[3,"VirtAddrNotValid"],[3,"PhysAddrNotValid"],[3,"Cr0"],[3,"Cr2"],[3,"Cr3"],[3,"Cr4"],[3,"MappedPageTable"],[3,"OffsetPageTable"],[3,"RecursivePageTable"],[4,"Size4KiB"],[4,"Size2MiB"],[4,"Size1GiB"],[3,"AddressNotAligned"]]}\
}');
initSearch(searchIndex);