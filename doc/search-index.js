var searchIndex = JSON.parse('{\
"aero_kernel":{"doc":"Aero","t":[12,7,7,7,3,7,7,7,17,7,0,0,0,11,11,0,11,0,11,5,5,5,0,0,14,0,0,0,0,0,0,0,11,11,11,0,0,0,4,3,3,3,13,13,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,12,0,5,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,17,12,12,12,11,11,12,12,11,11,12,12,12,12,12,12,12,12,11,11,12,12,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,12,12,3,17,12,11,11,11,11,12,11,11,12,12,12,11,12,11,12,12,11,11,11,11,3,7,7,13,13,13,3,4,3,3,3,17,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,12,12,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,12,11,12,12,12,11,12,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,7,3,17,12,11,11,11,11,12,11,11,11,5,12,11,11,11,5,12,12,12,12,11,11,11,11,11,11,3,11,11,12,11,11,12,11,11,11,12,12,12,12,12,12,11,11,11,11,12,17,3,17,11,11,11,12,11,11,12,12,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,17,7,4,7,7,7,3,7,3,13,13,17,17,17,17,17,17,17,13,12,5,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,5,12,12,5,11,11,11,11,12,5,5,12,5,5,5,5,5,11,5,5,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,5,0,0,18,18,18,3,3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,3,18,18,18,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,7,17,18,7,17,3,3,3,3,3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,4,13,13,18,3,7,18,18,18,18,18,3,18,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,12,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,17,17,17,17,3,3,17,17,17,17,3,17,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,0,11,11,11,11,11,11,11,5,0,11,11,11,14,14,14,11,11,11,11,11,11,0,0,5,11,11,12,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,14,5,5,5,5,5,5,5,5,5,5,5,5,7,3,17,18,17,17,17,3,3,3,6,3,3,18,18,3,18,18,18,18,18,3,18,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,5,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,5,11,11,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,5,5,5,5,5,5,3,3,3,12,5,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,12,11,11,11,11,12,11,11,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,12,18,18,18,18,18,18,18,18,18,18,18,13,3,3,3,3,3,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,7,18,18,13,3,4,3,18,18,18,18,18,18,3,4,18,18,18,18,18,18,3,3,3,3,3,3,3,3,3,3,3,4,3,3,4,3,3,18,18,18,18,18,18,18,18,18,18,18,13,13,18,18,18,18,13,18,18,18,18,18,18,18,18,18,18,18,13,13,13,18,13,13,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,13,18,18,18,18,18,7,12,12,12,12,12,12,12,12,12,5,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,18,18,3,18,18,18,7,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,8,18,7,3,18,18,7,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,10,11,5,5,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,3,17,3,3,3,18,18,18,18,18,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,17,17,7,13,3,8,3,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,5,12,11,11,11,11,11,11,11,11,11,11,11,5,11,5,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,3,3,3,3,7,12,12,12,12,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,12,12,5,11,11,11,11,11,11,11,12,12,12,11,11,11,12,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,7,18,18,3,3,18,18,18,18,3,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,13,13,8,4,3,6,3,3,13,3,7,7,6,12,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,0,0,12,11,11,11,11,11,11,11,5,11,0,11,11,11,11,5,11,11,11,12,0,5,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,3,8,8,3,7,6,6,6,7,6,6,6,6,11,11,11,11,11,11,11,11,12,10,11,11,5,5,11,11,11,11,11,11,11,5,12,5,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,7,7,3,7,3,3,3,8,12,5,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,11,11,5,11,10,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,11,11,11,11,12,12,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,13,7,13,13,3,3,13,13,4,4,8,3,13,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,11,11,11,5,12,12,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,3,3,11,11,11,11,11,11,11,12,12,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,3,17,7,7,17,11,11,11,11,5,11,5,11,11,11,11,11,3,0,11,11,11,12,11,11,11,11,11,0,0,11,11,11,11,11,12,17,17,3,11,5,11,11,11,11,11,11,5,11,11,11,11,11,18,7,18,18,18,3,18,5,0,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,5,11,11,11,11,11,5,0,11,11,0,0,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,3,3,3,11,11,11,11,11,11,11,11,5,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,12,4,13,13,8,8,13,13,13,4,13,4,3,13,13,8,8,3,13,13,3,13,13,13,13,4,8,4,3,13,13,13,13,3,13,13,13,8,4,4,4,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,10,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,12,12,12,12,12,12,12,12,12,12,3,8,3,3,3,8,3,3,3,18,18,4,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,17,4,13,18,18,13,18,18,18,3,3,3,3,3,18,18,18,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,7,17,5,5,5,12,3,11,11,11,5,11,5,11,11,11,12,12,12,13,18,3,3,7,3,3,4,13,13,18,11,11,11,11,11,11,11,11,11,11,12,12,12,11,5,11,11,11,11,11,11,11,11,11,12,14,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,12,12,5,11,11,11,11,11,11,5,11,11,11,11,11,12,14,14,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,3,3,5,11,11,11,11,11,11,11,11,12,11,11,11,11,0,5,11,11,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,5,0,11,11,11,11,11,11,11,11,5,5,5,17,17,17,17,5,5,5,5,5,5,17,7,17,7,7,7,5,5,7,3,3,11,11,11,11,11,11,5,11,11,11,12,5,12,12,11,11,11,11,11,11,5,5,5,5,7,5,5,5,0,0,0,12,7,3,8,3,10,11,11,11,11,10,11,11,10,11,11,5,5,10,12,11,11,11,11,10,10,11,11,0,12,11,11,11,11,11,11,10,3,3,11,12,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,12,5,11,11,11,12,11,12,11,11,5,11,11,11,11,11,11,11,12,13,18,13,3,3,3,4,13,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,12,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,13,3,3,13,13,13,4,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,8,3,3,3,10,11,11,11,11,11,11,11,0,14,12,5,11,11,11,11,11,11,14,14,11,11,11,0,0,11,11,11,11,14,14,14,12,14,14,14,11,11,0,11,11,11,11,11,11,11,11,11,5,5,5,12,3,11,11,11,11,11,11,11,11,12,12,11,11,11,11,17,17,17,17,17,17,17,17,17,17,17,17,17,17,5,5,5,5,5,5,5,5,20,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["0","AERO_SYSTEM_ALLOCATOR","CPU_ID","FRAMEBUFFER_TAG","P2Align12","PAGING_TAG","PHYSICAL_MEMORY_OFFSET","STACK","STACK_SIZE","STIVALE_HDR","acpi","apic","arch","borrow","borrow_mut","drivers","from","fs","into","kernel_ap_startup","kernel_main","kernel_main_thread","logger","mem","module_init","modules","prelude","rendy","syscall","tests","time","tls","try_from","try_into","type_id","unwind","userland","utils","AcpiHeader","AcpiTable","AmlHandler","GenericAddressStructure","Rsdt","Xsdt","access_size","address","address_space","as_sdt","bit_offset","bit_width","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data_address","entry_count","fadt","fmt","from","from","from","from","header","hpet","init","into","into","into","into","lookup_entry","madt","mcfg","new","read_io_u16","read_io_u32","read_io_u8","read_pci_u16","read_pci_u32","read_pci_u8","read_u16","read_u32","read_u64","read_u8","rsdp","sdt","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write_io_u16","write_io_u32","write_io_u8","write_pci_u16","write_pci_u32","write_pci_u8","write_u16","write_u32","write_u64","write_u8","0","0","Fadt","SIGNATURE","acpi_disable","acpi_enable","boot_architecture_flags","borrow","borrow_mut","c_state_control","century","clone","clone_into","day_alarm","dsdt","duty_offset","duty_width","firmware_ctrl","flags","flush_size","flush_stride","fmt","from","gpe0_block","gpe0_ength","gpe1_base","gpe1_block","gpe1_length","header","into","month_alarm","new","pm1_control_length","pm1_event_length","pm1a_control_block","pm1a_event_block","pm1b_control_block","pm1b_event_block","pm2_control_block","pm2_control_length","pm_timer_block","pm_timer_length","preferred_power_managament","pstate_control","reserved","reserved2","s4_bios_req","sci_interrupt","smi_command_port","to_owned","try_from","try_into","type_id","worst_c2_latency","worst_c3_latency","Hpet","SIGNATURE","base_address","borrow","borrow_mut","clone","clone_into","comparator_descriptor","fmt","from","header","hpet_number","hw_rev_id","into","min_periodic_clk_tick","new","oem_attribute","pci_vendor_id","to_owned","try_from","try_into","type_id","EntryHeader","IO_APICS","ISOS","IntSrcOverride","IoApic","LocalApic","Madt","MadtEntry","MadtIntSrcOverride","MadtIterator","MadtLocalApic","SIGNATURE","apic_id","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bus","clone","clone_into","current","entry_type","flags","flags","flags","from","from","from","from","from","from","global_system_interrupt","header","header","header","init","into","into","into","into","into","into","into_iter","irq","iter","length","limit","local_apic_address","next","processor_id","smp_check_ap_flag","smp_prepare_launch","smp_prepare_trampoline","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","DeviceConfig","MCFG","Mcfg","SIGNATURE","base_address","borrow","borrow","borrow_mut","borrow_mut","end_bus","entry_count","from","from","get_mcfg_table","header","init","into","into","is_avaliable","pci_seg_group","reserved","reserved","start_bus","try_from","try_from","try_into","try_into","type_id","type_id","Rsdp","borrow","borrow_mut","checksum","clone","clone_into","extended_checksum","from","get_sdt_address","into","length","oemid","reserved","revision","rsdt_address","signature","to_owned","try_from","try_into","type_id","xsdt_address","RSDT_SIGNATURE","Sdt","XSDT_SIGNATURE","as_ptr","borrow","borrow_mut","checksum","clone","clone_into","creator_id","creator_revision","data_address","data_len","fmt","from","from_address","into","length","oem_id","oem_revision","oem_table_id","revision","signature","to_owned","try_from","try_into","type_id","APIC_SPURIOUS_VECTOR","AP_READY","ApicType","BSP_APIC_ID","BSP_READY","CPU_COUNT","IoApicHeader","LOCAL_APIC","LocalApic","None","X2apic","XAPIC_EOI","XAPIC_ESR","XAPIC_ICR0","XAPIC_ICR1","XAPIC_LVT_ERROR","XAPIC_SVR","XAPIC_TPR","Xapic","address","ap_ready","apic_type","apic_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bsp_id","clone","clone_into","eoi","eq","fmt","from","from","from","from","get_bsp_id","get_cpu_count","get_esr","get_local_apic","global_system_interrupt_base","header","init","init","into","into","into","io_apic_address","io_apic_from_redirect","io_apic_get_max_redirect","io_apic_id","io_apic_read","io_apic_set_redirect","io_apic_setup_legacy_irq","io_apic_write","is_bsp_ready","is_none","mark_ap_ready","mark_bsp_ready","new","read","reserved","send_ipi","set_icr_x2apic","set_icr_xapic","supports_x2_apic","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write","x86_64","controlregs","gdt","init_cpu","interrupts","task","ALIGNMENT_CHECK","AUXILIARY_CARRY_FLAG","CARRY_FLAG","Cr3Flags","Cr4Flags","DEBUGGING_EXTENSIONS","DIRECTION_FLAG","FSGSBASE","ID","INTERRUPT_FLAG","IOPL_HIGH","IOPL_LOW","L5_PAGING","MACHINE_CHECK_EXCEPTION","NESTED_TASK","OSFXSR","OSXMMEXCPT_ENABLE","OSXSAVE","OVERFLOW_FLAG","PAGE_GLOBAL","PAGE_LEVEL_CACHE_DISABLE","PAGE_LEVEL_WRITETHROUGH","PAGE_SIZE_EXTENSION","PARITY_FLAG","PCID","PERFORMANCE_MONITOR_COUNTER","PHYSICAL_ADDRESS_EXTENSION","PROTECTED_MODE_VIRTUAL_INTERRUPTS","PROTECTION_KEY","RESUME_FLAG","RFlags","SAFER_MODE_EXTENSIONS","SIGN_FLAG","SUPERVISOR_MODE_ACCESS_PREVENTION","SUPERVISOR_MODE_EXECUTION_PROTECTION","TIMESTAMP_DISABLE","TRAP_FLAG","USER_MODE_INSTRUCTION_PREVENTION","VIRTUAL_8086_MODE","VIRTUAL_8086_MODE_EXTENSIONS","VIRTUAL_INTERRUPT","VIRTUAL_INTERRUPT_PENDING","VIRTUAL_MACHINE_EXTENSIONS","ZERO_FLAG","all","all","all","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","contains","contains","contains","empty","empty","empty","eq","eq","eq","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","insert","insert","insert","intersects","intersects","intersects","into","into","into","is_all","is_all","is_all","is_empty","is_empty","is_empty","ne","ne","ne","not","not","not","partial_cmp","partial_cmp","partial_cmp","read_cr2","read_cr3","read_cr3_raw","read_cr4","read_rflags","remove","remove","remove","set","set","set","sub","sub","sub","sub_assign","sub_assign","sub_assign","to_owned","to_owned","to_owned","toggle","toggle","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","BOOT_GDT","BOOT_GDT_ENTRY_COUNT","EXECUTABLE","GDT","GDT_ENTRY_COUNT","GdtAccessFlags","GdtDescriptor","GdtEntry","GdtEntryFlags","GdtEntryType","KERNEL_CODE","KERNEL_DATA","KERNEL_TLS","LONG_MODE","NULL","NULL","NULL","PRESENT","PRIVILEGE","PROTECTED_MODE","RING_0","RING_3","RPL_0","RPL_1","RPL_2","RPL_3","Ring","Ring0","Ring3","SYSTEM","SegmentSelector","TASK_STATE_SEGMENT","TI_GDT","TI_LDT","TSS","TSS_AVAIL","TSS_HI","Tss","USER_CODE32_UNUSED","access_byte","all","all","base_hi","base_low","base_middle","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","contains","contains","empty","empty","eq","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","get_hash","get_hash","get_hash","get_hash","hash","hash","init","init_boot","insert","insert","intersects","intersects","into","into","into","into","into","into","into","into","iomap_base","is_all","is_all","is_empty","is_empty","ist","kernel_fs","limit_hi_flags","limit_low","load_cs","load_ds","load_es","load_fs","load_gdt","load_gs","load_ss","load_tss","ne","ne","new","new","new","new","not","not","offset","partial_cmp","partial_cmp","remove","remove","reserved","reserved2","reserved3","reserved4","rsp","set","set","set_kernel_fs","set_limit","set_offset","set_raw","size","sub","sub","sub_assign","sub_assign","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","APIC_CONTROLLER","ApicController","ICW1_ICW4","ICW1_INIT","ICW1_READ_ISR","ICW4_8086","INTERRUPT_CONTROLLER","InterruptController","PIC1_COMMAND","PIC1_DATA","PIC2_COMMAND","PIC2_DATA","PIC_CONTROLLER","PIC_EOI","PicController","__private_field","__private_field","__private_field","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","disable","disable_interrupts","enable_interrupts","eoi","eoi","eoi","exceptions","from","from","from","from","from","from","get_irq_register","halt","idt","initialize","initialize","initialize","interrupt","interrupt_error_stack","interrupt_stack","into","into","into","into","into","into","ipi","irq","is_enabled","is_master_active","is_slave_active","method","new","new","pause","switch_to_apic","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","alignment_check","bound_range","breakpoint","debug","device_not_available","divide_by_zero","double_fault","fpu_fault","interrupt_exception","invalid_opcode","invalid_tss","machine_check","non_maskable","overflow","page_fault","protection","security","segment_not_present","simd","stack_segment","virtualization","IDT","IDTFlags","IDT_ENTRIES","INTERRUPT","IPI_ABORT","IPI_BASE","IPI_RESCHEDULE","IdtDescriptor","IdtEntry","InterruptErrorStack","InterruptHandlerFn","InterruptStack","IretRegisters","NULL","PRESENT","PreservedRegisters","RING_0","RING_1","RING_2","RING_3","SS","ScratchRegisters","TRAP","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","code","contains","cs","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","fs","get_hash","get_hash","hash","ignore","init","insert","intersects","into","into","into","into","into","into","into","into","iret","is_all","is_empty","is_user","ist","load_idt","ne","new","not","offset","offset_hi","offset_low","offset_middle","partial_cmp","preserved","r10","r11","r12","r13","r14","r15","r8","r9","rax","rbp","rbx","rcx","rdi","rdx","remove","rflags","rip","rsi","rsp","scratch","selector","set","set_flags","set_function","set_offset","size","ss","stack","sub","sub_assign","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_attr","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","abort","reschedule","keyboard","lapic_error","mouse","pit_stack","ArchTask","Context","KernelTaskFrame","address_space","arch_task_spinup","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","context","context_switch_rsp","cr3","default","exec","fork","from","from","from","fs_base","get_fs_base","into","into","into","iret","new_idle","new_kernel","r12","r13","r14","r15","rbp","rbx","rdi","rflags","rip","rpl","set_fs_base","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ahci","keyboard","mouse","pci","tty","uart_16550","0","A","AE","ALPE","APST","APSTE","ASP","ATAPI","ATTR_ALHD","ATTR_PM","ATTR_SMB","ATTR_XMT","Active","AhciCommand","AhciDriver","AhciPort","AhciPortProtected","AhciProtected","AtaCommand","AtaCommandDataSetManagement","AtaCommandDeviceReset","AtaCommandFlushCache","AtaCommandFlushCacheExt","AtaCommandGetMediaStatus","AtaCommandIdentifyDevice","AtaCommandIdentifyPacketDevice","AtaCommandMediaEject","AtaCommandNop","AtaCommandNopNopAutopoll","AtaCommandPacket","AtaCommandReadDma","AtaCommandReadDmaExt","AtaCommandReadDmaQueued","AtaCommandReadDmaQueuedExt","AtaCommandReadMultiple","AtaCommandReadMultipleExt","AtaCommandReadSectors","AtaCommandReadSectorsExt","AtaCommandService","AtaCommandSetFeatures","AtaCommandSetFeaturesDisableReleaseInt","AtaCommandSetFeaturesDisableServiceInt","AtaCommandSetFeaturesEnableReleaseInt","AtaCommandSetFeaturesEnableServiceInt","AtaCommandWriteDma","AtaCommandWriteDmaExt","AtaCommandWriteDmaQueued","AtaCommandWriteDmaQueuedExt","AtaCommandWriteMultiple","AtaCommandWriteMultipleExt","AtaCommandWriteSectors","AtaCommandWriteSectorsExt","B","BB","BOH","BOS","C","CCCS","CLO","CPD","CPDE","CPDS","CPS","CR","CTL_RST","CTL_TM","DESO","DHRE","DHRS","DLAE","DMPE","DMPS","DPE","DPS","DRIVER","DSE","DSS","DevSleep","DmaBuffer","DmaCommand","DmaRequest","EMS","ESP","FBSCP","FBSS","FR","FRE","FisRegH2D","FisType","HBDE","HBDS","HBFE","HBFS","HPCP","HR","HbaBohc","HbaCapabilities","HbaCapabilities2","HbaCmdHeader","HbaCmdHeaderFlags","HbaCmdTbl","HbaEnclosureCtrl","HbaHostCont","HbaMemory","HbaPort","HbaPortCmd","HbaPortDd","HbaPortIE","HbaPortIS","HbaPortIpm","HbaPrdtEntry","HbaSataStatus","IE","IFE","IFS","INFE","INFS","IPME","IPMS","MPSS","MRSM","MSPC","NVMP","None","None","OFE","OFS","OOC","OOS","Offline","P","PCE","PCS","PMA","PMD","POD","PRCE","PRCS","PSC","PSE","PSS","Partial","PresentAndE","PresentNotE","R","Read","RegH2D","S64A","SADM","SAL","SALP","SAM","SCLO","SDBE","SDBS","SDS","SMPS","SNCQ","SOOE","SPM","SSC","SSNTF","SSS","ST","STS_MR","SUD","SUPP_LED","SUPP_SAFTE","SUPP_SES2","SUPP_SGPIO","SXS","Slumber","TFEE","TFES","UFE","UFS","W","__MODULE_INIT","_reserved","_reserved","_reserved","_reserved","_reserved","_reserved","_reserved_1","acmd","address","ahci_init","all","all","all","all","all","all","all","all","all","at_offset","bios_handoff_ctrl_sts","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","ccc_control","ccc_ports","cfis","cfis_as_h2d_mut","ci","clb","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmd","cmd_header_at","cmds","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","command","command","contains","contains","contains","contains","contains","contains","contains","contains","contains","control","copy_into","count","count","ctb","data_size","dba","device","device_detection","devslp","empty","empty","empty","empty","empty","empty","empty","empty","empty","enable_interrupts","enclosure_management_control","enclosure_management_location","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","extend","extend","extend","extend","extend","extend","extend","extend","fb","fbs","featureh","featurel","fis_type","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","free_cmds","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","get_ahci","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","global_host_control","handles","hash","hash","hash","hash","hash","hash","hash","hash","hash","hba","hba_mem","hba_port","host_capabilities_extended","host_capability","huge","icc","ie","inner","inner","insert","insert","insert","insert","insert","insert","insert","insert","insert","interface_power_management","interrupt_status","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_command","is","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","lba0","lba1","lba2","lba3","lba4","lba5","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","not","not","not","not","not","not","not","not","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","port_mut","ports","ports_implemented","prdbc","prdt_entry","prdt_entry_mut","prdtl","probe","read","remove","remove","remove","remove","remove","remove","remove","remove","remove","request","run_command","run_request","run_request","sact","sctl","sector","serr","set","set","set","set","set","set","set","set","set","sig","sntf","ssts","start","start","start","start_cmd","start_driver","start_hba","stop_cmd","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","tfd","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vendor","vendor","version","CONFIG_RESERVED_3","CONFIG_RESERVED_7","ConfigFlags","FIRST_DISABLED","FIRST_INTERRUPT","FIRST_TRANSLATE","KEYBOARD_LISTNER","KEY_0","KEY_1","KEY_2","KEY_3","KEY_4","KEY_5","KEY_6","KEY_7","KEY_8","KEY_9","KEY_A","KEY_APOSTROPHE","KEY_B","KEY_BACKSLASH","KEY_BACKSPACE","KEY_C","KEY_CAPSLOCK","KEY_COMMA","KEY_COMPOSE","KEY_D","KEY_DELETE","KEY_DOT","KEY_DOWN","KEY_E","KEY_END","KEY_ENTER","KEY_EQUAL","KEY_ESC","KEY_F","KEY_F1","KEY_F10","KEY_F11","KEY_F12","KEY_F2","KEY_F3","KEY_F4","KEY_F5","KEY_F6","KEY_F7","KEY_F8","KEY_F9","KEY_G","KEY_GRAVE","KEY_H","KEY_HOME","KEY_I","KEY_INSERT","KEY_J","KEY_K","KEY_KP0","KEY_KP1","KEY_KP2","KEY_KP3","KEY_KP4","KEY_KP5","KEY_KP6","KEY_KP7","KEY_KP8","KEY_KP9","KEY_KPASTERISK","KEY_KPDOT","KEY_KPENTER","KEY_KPMINUS","KEY_KPPLUS","KEY_KPSLASH","KEY_L","KEY_LEFT","KEY_LEFTALT","KEY_LEFTBRACE","KEY_LEFTCTRL","KEY_LEFTMETA","KEY_LEFTSHIFT","KEY_M","KEY_MINUS","KEY_N","KEY_NUMLOCK","KEY_O","KEY_P","KEY_PAGEDOWN","KEY_PAGEUP","KEY_Q","KEY_R","KEY_RESERVED","KEY_RIGHT","KEY_RIGHTALT","KEY_RIGHTBRACE","KEY_RIGHTCTRL","KEY_RIGHTMETA","KEY_RIGHTSHIFT","KEY_S","KEY_SCROLLLOCK","KEY_SEMICOLON","KEY_SLASH","KEY_SPACE","KEY_T","KEY_TAB","KEY_U","KEY_UP","KEY_V","KEY_W","KEY_X","KEY_Y","KEY_Z","KeyCode","KeyboardListener","POST_PASSED","PS2_KEYBOARD_STATE","Ps2KeyboardState","SECOND_DISABLED","SECOND_INTERRUPT","__MODULE_INIT","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","contains","empty","eq","eq","extend","flush","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get_hash","get_hash","handle","hash","insert","intersects","into","into","into","is_all","is_empty","ne","new","not","on_key","partial_cmp","ps2_keyboard_init","register_keyboard_listener","released","remove","set","special","sub","sub_assign","to_owned","to_owned","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ALWAYS_ONE","LEFT_BUTTON","MIDDLE_BUTTON","MOUSE","MOUSE_WAIT_TIMEOUT","Mouse","MouseFlags","MouseState","RIGHT_BUTTON","X_OVERFLOW","X_SIGN","Y_OVERFLOW","Y_SIGN","__private_field","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","contains","cycle","default","deref","draw_mouse_pointer","empty","eq","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get_hash","get_hash","handle","hash","init","initialize","insert","intersects","into","into","into","into","is_all","is_empty","is_left_button_pressed","is_middle_button_pressed","is_right_button_pressed","mouse_wait","mouse_wait_input","mouse_write","ne","new","new","not","partial_cmp","process_collected_packet","process_mouse_packet","remove","set","sign_extend","state","sub","sub_assign","to_owned","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","x","y","0","AMD","AccessBusController","AtaController","AtmController","AudioDevice","AudioSatelliteCommunicationsController","Bar","BluetoothController","BroadbandController","CanBusController","CardBusBridge","CoProcessor","CommunicationsSynchronizationController","ConsumerIrController","DataSatelliteCommunicationsController","DeviceType","Digitizer","DmaController","DpioModule","EisaBridge","EntertainmentCryptionController","Ethernet24GHzController","Ethernet5GHzController","EthernetController","FddiController","FibreChannelController","FirewireController","FlashController","FloppyController","GameportController","GenericDockingStation","GenericPciHotPlugController","GpibController","HostBridge","IO","IdeController","InfiniBandController","InfinibandPciHostBridge","Intel","IntelligentIoController","InterruptController","IpiBusController","IpmiController","IrdaController","IsaBridge","IsdnController","KeyboardController","LegacyNotVgaCompatible","LegacyVgaCompatible","ManagementCard","McaBridge","Memory32","Memory64","Modem","MouseController","MultiportSerialController","NVIDIA","NetworkCryptionController","NuBusBridge","OtherBridgeDevice","OtherCommunicationsDevice","OtherCryptionController","OtherDisplayController","OtherDockingStation","OtherInputController","OtherMassStorageController","OtherMemoryController","OtherMultimediaDevice","OtherNetworkController","OtherSignalProcessingController","OtherSystemPeripheral","OtherWirelessController","PCI_CONFIG_ADDRESS_PORT","PCI_CONFIG_DATA_PORT","PCI_TABLE","ParallelPort","PciDevice","PciDeviceHandle","PciHeader","PciPciBridge","PciTable","PcmciaBridge","PerformanceCounter","PicmgController","Processor386","Processor486","ProcessorAlpha","ProcessorMips","ProcessorPentium","ProcessorPowerPc","Qemu","RacewayBridge","RaidController","RamController","RfController","RtcController","SasController","SataController","ScannerController","ScsiBusController","SdHostController","SemiTransparentPciPciBridge","SercosController","SerialController","SmBusController","SmartCard","SsaBusController","SystemTimer","TelephonyDevice","ThreeDController","TokenRingController","TvSatelliteCommunicationsController","Unknown","Unknown","UsbController","Vendor","VgaCompatibleController","VideoDevice","VoiceSatelliteCommunicationsController","XgaController","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bus","clone","clone_into","device","enable_bus_mastering","eq","eq","fmt","fmt","fmt","from","from","from","from","from","from","function","get_bar","get_device","get_interface_id","get_vendor","get_vendor_id","handle","handles","has_multiple_functions","init","inner","into","into","into","into","into","into","ne","new","new","new","new","pre_init","read","register_device_driver","start","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","write","0","address","address","prefetchable","prefetchable","size","size","0","ALTGR_ALT_MAP","ALTGR_CTRL_ALT_MAP","ALTGR_CTRL_MAP","ALTGR_MAP","ALT_MAP","CTRL_ALT_MAP","CTRL_MAP","PLAIN_MAP","SHIFT_ALTGR_MAP","SHIFT_ALT_MAP","SHIFT_CTRL_ALT_MAP","SHIFT_CTRL_MAP","SHIFT_MAP","StdinBuffer","TTY","Tty","TtyState","__MODULE_INIT","__private_field","altgr","back_buffer","block_queue","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","caps","deref","device_id","device_marker","device_name","from","from","from","from","front_buffer","i","init_tty","initialize","inode","into","into","into","into","is_complete","lalt","lctrl","lshift","new","new","on_key","rctrl","read_at","rshift","sref","state","stdin","swap_buffer","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write_at","0","COM_1","ERRORED","INPUT_FULL","InterruptEnable","LineStatus","OUTPUT_EMPTY","RECEIVED","SENT","STATUS_CHANGE","SerialPort","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","contains","contains","empty","empty","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","get_hash","get_hash","get_hash","get_hash","hash","hash","init","init","insert","insert","intersects","intersects","into","into","into","is_all","is_all","is_empty","is_empty","line_status","ne","ne","new","not","not","partial_cmp","partial_cmp","remove","remove","send_byte","serial_print","serial_println","set","set","sub","sub","sub_assign","sub_assign","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wait_for_line_status","write_str","0","0","Busy","EntryExists","EntryNotFound","FileSystem","FileSystemError","MOUNT_MANAGER","MountKey","MountManager","MountPoint","NotSupported","Path","ROOT_DIR","ROOT_FS","Result","__private_field","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cache","clone","clone_into","components","deref","devfs","file_table","filesystem","find_mount","fmt","fmt","from","from","from","from","init","initialize","inode","into","into","into","into","lookup_path","mount","new","new","origin_entry","ramfs","root_dir","root_dir","root_entry","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","0","Cache","CacheIndex","CacheItem","CacheKey","Cacheable","CachedINode","DIR_CACHE","DirCache","DirCacheItem","DirCacheKey","INODE_CACHE","INodeCache","INodeCacheItem","INodeCacheKey","INodeCacheWeakItem","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cache","cache_key","cache_key","clear","clear_inode_cache","dcache","deref","deref","from","from","from","from","get","icache","index","init","inner","into","into","into","into","make_item_cached","make_item_no_cache","new","new","new","self_ref","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unused","used","value","0","0","0","DEVICES","DEVICE_MARKER","DEV_FILESYSTEM","DEV_NULL","DevFs","DevINode","DevNull","Device","__private_field","alloc_device_marker","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","device_marker","device_marker","device_name","device_name","from","from","from","from","init","initialize","inode","inode","install_device","into","into","into","into","new","new","new","read_at","read_at","root_dir","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write_at","write_at","0","FileHandle","FileTable","borrow","borrow","borrow_mut","borrow_mut","fd","flags","from","from","get_handle","inode","into","into","new","new","offset","open_file","read","try_from","try_from","try_into","try_into","type_id","type_id","write","Content","DIR_CACHE_MARKER","Device","Device","DirEntry","DirProtectedData","Directory","File","FileContents","FileType","INodeInterface","Metadata","None","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cache_key","cache_marker","children_len","clone","clone","clone_into","clone_into","data","default","default","eq","fetch_dir_entry","file_type","filesystem","fmt","fmt","from","from","from","from","from","id","inode","inode","into","into","into","into","into","is_directory","lookup","make_dev_inode","metadata","mkdir","name","new","new_root","open","parent","read_at","size","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","weak_filesystem","write_at","0","0","0","LockedRamINode","RamFs","RamINode","allocate_inode","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","children","contents","default","file_type","filesystem","from","from","from","id","init","into","into","into","lookup","make_dev_inode","make_inode","metadata","mkdir","new","new","next_id","node","parent","read_at","root_dir","root_dir","root_inode","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","weak_filesystem","write_at","AeroLogger","DEFAULT_LOG_RING_BUFFER_SIZE","LOGGER","LOG_RING_BUFFER","MAX_LOG_LEVEL_SPACE","borrow","borrow_mut","enabled","flush","force_unlock","from","init","into","log","try_from","try_into","type_id","AddressSpace","alloc","borrow","borrow_mut","cr3","cr3","from","into","new","offset_page_table","page_table","paging","pti","switch","this","try_from","try_into","type_id","0","HEAP_MAX_SIZE","HEAP_START","LockedHeap","alloc","alloc_error_handler","allocate","borrow","borrow_mut","dealloc","from","init","init_heap","into","new_uninit","try_from","try_into","type_id","CAUSED_BY_WRITE","FRAME_ALLOCATOR","INSTRUCTION_FETCH","MALFORMED_TABLE","PROTECTION_VIOLATION","PageFaultErrorCode","USER_MODE","active_level_4_table","addr","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","clone_into","cmp","contains","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","frame","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get_hash","get_hash","hash","init","insert","intersects","into","is_all","is_empty","level_5_paging_enabled","mapper","ne","not","page","page_table","partial_cmp","remove","set","sub","sub_assign","to_owned","toggle","try_from","try_into","type_id","0","0","0","0","PhysAddr","PhysAddrNotValid","VirtAddr","VirtAddrNotValid","add","add","add","add","add_assign","add_assign","add_assign","add_assign","align_down","align_down","align_down","align_up","align_up","as_mut_ptr","as_ptr","as_u64","as_u64","backward_checked","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forward_checked","from","from","from","from","into","into","into","into","is_aligned","ne","ne","new","new","p1_index","p2_index","p3_index","p4_index","p5_index","page_offset","partial_cmp","partial_cmp","steps_between","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zero","0","GlobalFrameAllocator","LockedFrameAllocator","allocate_frame","allocate_frame","borrow","borrow","borrow_mut","borrow_mut","from","from","get_frame_type","get_frame_type","init","into","into","memory_map","new","new_uninit","next","try_from","try_from","try_into","try_into","type_id","type_id","usable_frames","0","FlagUpdateError","FrameAllocationFailed","FrameAllocationFailed","FrameAllocator","FrameDeallocator","InvalidFrameAddress","InvalidFrameAddress","InvalidFrameAddress","MapToError","Mapped","MappedFrame","MappedPageTable","MappedToHugePage","MappedToHugePage","Mapper","MapperAllSizes","MapperFlush","NotMapped","NotMapped","OffsetPageTable","PageAlreadyMapped","PageNotMapped","PageNotMapped","PageNotMapped","PageTableCreateError","PageTableFrameMapping","PageTableWalkError","PageTableWalker","ParentEntryHugePage","ParentEntryHugePage","ParentEntryHugePage","ParentEntryHugePage","PhysOffset","Size1GiB","Size2MiB","Size4KiB","Translate","TranslateError","TranslateResult","UnmapError","allocate_frame","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","create_next_table","deallocate_frame","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fork","frame_to_pointer","frame_to_pointer","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","identity_map","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","level_5_paging_enabled","map_to","map_to_2mib","map_to_4kib","map_to_with_table_flags","map_to_with_table_flags","map_to_with_table_flags","map_to_with_table_flags","map_to_with_table_flags","new","new","new","new","next_table","next_table_mut","offset","page_table","page_table_frame_mapping","page_table_walker","size","start_address","translate","translate","translate","translate_addr","translate_page","translate_page","translate_page","translate_page","translate_page","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unmap","unmap","unmap","unmap","unmap","unmap_range","update_flags","update_flags","update_flags","update_flags","update_flags","0","0","0","0","0","0","flags","frame","offset","0","AddressNotAligned","NotGiantPageSize","Page","PageRange","PageRangeInclusive","PageSize","PhysFrame","PhysFrameRange","PhysFrameRangeInclusive","SIZE","SIZE_AS_DEBUG_STR","Size1GiB","Size2MiB","Size4KiB","add","add","add_assign","add_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","containing_address","containing_address","end","end","end","end","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_start_address","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","ne","ne","ne","ne","ne","ne","next","next","next","next","p1_index","p2_index","p3_index","p4_index","p5_index","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","range_inclusive","size","size","start","start","start","start","start_address","start_address","start_address","start_address","sub","sub","sub","sub","sub_assign","sub_assign","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","ACCESSED","BIT_10","BIT_11","BIT_52","BIT_53","BIT_54","BIT_55","BIT_56","BIT_57","BIT_58","BIT_59","BIT_60","BIT_61","BIT_62","BIT_9","DIRTY","ENTRY_COUNT","FrameError","FrameNotPresent","GLOBAL","HUGE_PAGE","HugeFrame","NO_CACHE","NO_EXECUTE","PRESENT","PageOffset","PageTable","PageTableEntry","PageTableFlags","PageTableIndex","USER_ACCESSIBLE","WRITABLE","WRITE_THROUGH","addr","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","contains","default","empty","entries","entry","eq","eq","eq","eq","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_entries_mut","frame","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get_hash","get_hash","hash","index","index","index_mut","index_mut","insert","intersects","into","into","into","into","into","into","is_all","is_empty","is_unused","ne","ne","ne","new","new","new","new","new_truncate","new_truncate","not","partial_cmp","partial_cmp","partial_cmp","remove","set","set_addr","set_flags","set_frame","set_unused","sub","sub_assign","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","zero","PTI_CPU_STACK","PTI_STACK_SIZE","map_pti","switch_pti_stack","unmap_pti","0","ModuleInit","borrow","borrow_mut","from","init","into","make_module_init","try_from","try_into","type_id","0","0","1","BGR","BLACK","Color","ColorCode","DEBUG_RENDY","DebugRendy","FrameBufferInfo","PixelFormat","RGB","U8","WHITE","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","byte_len","bytes_per_pixel","carriage_return","clear_screen","clear_screen","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","color","dbg","eq","eq","eq","fmt","fmt","fmt","fmt","force_unlock","from","from","from","from","from","from_hex","get_background","get_foreground","height","horizontal_resolution","info","init","inner","into","into","into","into","into","is_initialized","ne","ne","new","new","new_line","pixel_format","print","println","put_bytes","put_pixel","set_color_code","stride","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vertical_resolution","width","write_character","write_str","write_string","x_pos","y_pos","RegistersFrame","SyscallFrame","__inner_syscall","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cr2","fmt","fmt","from","from","fs","init","into","into","process","r10","r11","r12","r13","r14","r15","r8","r9","rax","rbp","rbx","rcx","rdi","rdx","rflags","rip","rsi","rsp","syscall_handler","syscall_interrupt_handler","time","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","open","read","write","ARCH_GET_FS","ARCH_GET_GS","ARCH_SET_FS","ARCH_SET_GS","arch_prctl","exit","fork","mmap","munmap","shutdown","PIT_FREQUENCY_HZ","SCHED_TICKS","SCHED_TIMESLICE_MS","UNIX_EPOCH","UPTIME_RAW","UPTIME_SEC","init","tick","THREAD_LOCAL_STORAGE","ThreadControlBlock","ThreadLocalStorage","borrow","borrow","borrow_mut","borrow_mut","from","from","init","into","into","new","pointer","restore_user_tls","self_pointer","tcb_offset","try_from","try_from","try_into","try_into","type_id","type_id","_Unwind_Resume","rust_begin_unwind","rust_eh_personality","unwind_stack_trace","USERLAND_SHELL","init","init_ap","run","scheduler","task","vm","0","SCHEDULER","Scheduler","SchedulerInterface","TaskContainer","await_io","borrow","borrow","borrow_mut","borrow_mut","current_task","current_task","exec","exit","from","from","get_scheduler","init","init","inner","into","into","new","new","preempt","register_task","register_task","register_task","round_robin","tasks","try_from","try_from","try_into","try_into","type_id","type_id","wake_up","RoundRobin","TaskQueue","await_io","awaiting","borrow","borrow","borrow_mut","borrow_mut","current_task","current_task","dead","exit","from","from","idle_task","init","into","into","new","new","preempt","preempt_task","preempter","push_awaiting","push_dead","push_runnable","queue","register_task","runnable","schedule_next_task","sweep_dead","sweeper","try_from","try_from","try_into","try_into","type_id","type_id","wake_up","0","AwaitingIo","NEW","Runnable","Task","TaskAdapter","TaskId","TaskState","Zombie","allocate","arch_task","arch_task","arch_task_mut","as_usize","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","default","eq","eq","exec","exit_status","file_table","fmt","fmt","fork","from","from","from","from","from","get_hash","get_hash","get_link","get_value","hash","into","into","into","into","into_zombie","link","link_ops","link_ops","link_ops_mut","ne","new","new","new_idle","new_kernel","partial_cmp","pointer_ops","pointer_ops","state","state","task_id","task_id","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_state","vm","vm","End","Full","MMapFile","Mapping","None","Parital","Start","UnmapResult","Vm","VmProtected","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","end_addr","file","file","find_any_above","find_fixed_mapping","flags","fork_from","fork_from","from","from","from","from","from","handle_cow","handle_page_fault","handle_page_fault","handle_pf_private_anon","handle_pf_private_file","inner","into","into","into","into","into","load_bin","load_bin","log","mappings","mmap","mmap","munmap","munmap","new","new","new","offset","protocol","size","start_addr","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unmap","0","Downcastable","PerCpu","StackHelper","VolatileCell","as_any","as_mut_ptr","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buffer","const_unsafe","data","downcast","from","from","from","get","get","get_mut","intel_asm","intel_fn","into","into","into","io","linker","new","new","new_uninit","offset","pop_fs","pop_preserved","pop_scratch","ptr","push_fs","push_preserved","push_scratch","set","skip_by","sync","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate_slice","validate_slice_mut","validate_str","value","RingBuffer","append_byte","borrow","borrow_mut","clear_buffer","fmt","from","into","new","position","storage","try_from","try_into","type_id","write_str","IA32_APIC_BASE","IA32_EFER","IA32_FMASK","IA32_FS_BASE","IA32_KERNEL_GSBASE","IA32_LSTAR","IA32_STAR","IA32_X2APIC_APICID","IA32_X2APIC_EOI","IA32_X2APIC_ESR","IA32_X2APIC_ICR","IA32_X2APIC_LVT_ERROR","IA32_X2APIC_SIVR","IA32_X2APIC_TPR","delay","inb","inl","outb","outl","rdmsr","wait","wrmsr","LinkerSymbol","as_ptr","as_usize","BlockQueue","IrqGuard","Mutex","MutexGuard","block_on","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref_mut","drop","drop","force_unlock","from","from","from","from","guard","inner","into","into","into","into","irq_lock","lock","lock_irq","locked","new","new","new","notify_complete","queue","remove_task","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":["aero_kernel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aero_kernel::acpi","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aero_kernel::acpi::AcpiHeader","","aero_kernel::acpi::fadt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aero_kernel::acpi::hpet","","","","","","","","","","","","","","","","","","","","","","aero_kernel::acpi::madt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aero_kernel::acpi::madt::MadtEntry","","","aero_kernel::acpi::mcfg","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aero_kernel::acpi::rsdp","","","","","","","","","","","","","","","","","","","","","aero_kernel::acpi::sdt","","","","","","","","","","","","","","","","","","","","","","","","","","","aero_kernel::apic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aero_kernel::arch","aero_kernel::arch::x86_64","","","","","aero_kernel::arch::x86_64::controlregsaero_kernel::arch::x86_64::gdtaero_kernel::arch::x86_64::interrupts","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aero_kernel::arch::x86_64::interrupts::exceptions","","","","","","","","","","","","","","","","","","","","","aero_kernel::arch::x86_64::interrupts::idt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aero_kernel::arch::x86_64::interrupts::ipi","","aero_kernel::arch::x86_64::interrupts::irq","","","","aero_kernel::arch::x86_64::task","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aero_kernel::drivers","","","","","","aero_kernel::drivers::ahciaero_kernel::drivers::keyboardaero_kernel::drivers::mouse","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aero_kernel::drivers::pciaero_kernel::drivers::pci::Bar","","","","","","","aero_kernel::drivers::pci::Vendor","aero_kernel::drivers::tty","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aero_kernel::drivers::uart_16550","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aero_kernel::fs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aero_kernel::fs::cache","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aero_kernel::fs::devfs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aero_kernel::fs::file_table","","","","","","","","","","","","","","","","","","","","","","","","","","","aero_kernel::fs::inode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aero_kernel::fs::inode::FileContents","","aero_kernel::fs::ramfs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aero_kernel::logger","","","","","","","","","","","","","","","","","aero_kernel::mem","","","","","","","","","","","","","","","","","","aero_kernel::mem::alloc","","","","","","","","","","","","","","","","","","aero_kernel::mem::paging","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aero_kernel::mem::paging::addr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aero_kernel::mem::paging::frame","","","","","","","","","","","","","","","","","","","","","","","","","","","aero_kernel::mem::paging::mapper","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aero_kernel::mem::paging::mapper::MapToError","aero_kernel::mem::paging::mapper::MappedFrame","","","aero_kernel::mem::paging::mapper::TranslateError","aero_kernel::mem::paging::mapper::TranslateResult","","","","aero_kernel::mem::paging::mapper::UnmapError","aero_kernel::mem::paging::pageaero_kernel::mem::paging::page_table","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aero_kernel::mem::pti","","","","","aero_kernel::modules","","","","","","","","","","","aero_kernel::rendy","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aero_kernel::syscall","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aero_kernel::syscall::fs","","","aero_kernel::syscall::process","","","","","","","","","","aero_kernel::time","","","","","","","","aero_kernel::tls","","","","","","","","","","","","","","","","","","","","","","","aero_kernel::unwind","","","","aero_kernel::userland","","","","","","","aero_kernel::userland::scheduler","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aero_kernel::userland::scheduler::round_robin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aero_kernel::userland::task","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aero_kernel::userland::vm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aero_kernel::userland::vm::UnmapResult","aero_kernel::utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aero_kernel::utils::buffer","","","","","","","","","","","","","","","aero_kernel::utils::io","","","","","","","","","","","","","","","","","","","","","","aero_kernel::utils::linker","","","aero_kernel::utils::sync","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","We are now going to define a framebuffer header tag. This …","","We are now going to define a level 5 paging header tag. …","","We need to tell the stivale bootloader where we want our …","","The stivale2 specification says we need to define a “…","The ACPI (Advanced Configuration and Power Interface) …","","","","","","","","","","","","","","","A kernel module is an object file that contains code that …","","","System Calls are used to call a kernel service from user …","","The PIT (Programmable Interval Timer) chip basically …","Thread Local Storage (TLS) are per-thread global …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The data address of this header’s data.","","The FADT ACPI table contains information about fixed …","","","","","","","","Initialize the ACPI tables.","","","","","Lookup ACPI table entry with the provided signature.","","","Create a new ACPI table from the RSDP addresshe ACPI MCFG table describes the location of the PCI …","","","","","","","","","","","Return a immutable reference to the MCFG table.","","","","","Returns true if the ACPI table contains the MCFG entry.","","","","","","","","","","","","","","","","","","","Get the SDT address.","","","","","","","","","","","","","","","","","","","","","","","","Get the address of this tables data.","Get the length of this tables data.","","","Get SDT from its address.","","","","","","","","","","","","","","","","","The count of all the active CPUs.","","","","","","EOI register. Write-only.","Error Status Register (ESR). Read/write.","Interrupt Command Register (ICR). Read/write.","Interrupt Command Register (ICR). Read/write.","LVT Error register. Read/write.","Spurious Interrupt Vector Register (SVR). Read/write.","Task Priority Register (TPR). Read/write. Bits 31:8 are …","","","Returns true if the AP is ready.","Returns the APIC type of this local APIC instance.","","","","","","","","At power up, system hardware assigns a unique APIC ID to …","","","Writes to the EOI register to signal the end of an …","","","","","","","Get the local BSP’s id.","Return the number of active CPUs.","The local APIC records errors detected during interrupt …","Get a mutable reference to the local apic.","","","Initialize the local apic.","This function is responsible for initializing this …","","","","","Return the index of the I/O APIC that handles this …","Get the maximum number of redirects this I/O APIC can …","","Read from the <code>io_apic_id</code> I/O APIC as described by the …","","","Write from the <code>io_apic_id</code> I/O APIC as described by the …","","","","","Creates a new local APIC instance.","Reads from the provided <code>register</code> as described by the MADT.","","This function is responsible for sending IPI to the …","Sets the provided <code>value</code> to the ICR register of this …","Sets the provided <code>value</code> to the ICR register of the …","Return true if the current CPU supports X2 APIC.","","","","","","","","","","","Write to the provided <code>register</code> with the provided <code>data</code> as …","","","The GDT contains entries telling the CPU about memory …","","","","Enable automatic alignment checking if CR0.AM is set. …","Set by hardware if last arithmetic operation generated a …","Set by hardware if last arithmetic operation generated a …","Controls cache settings for the level 4 page table.","Controls cache settings for the level 4 page table.","Enables I/O breakpoint capability and enforces treatment …","Determines the order in which strings are processed.","Enables software running in 64-bit mode at any privilege …","Processor feature identification flag.","Enable interrupts.","The high bit of the I/O Privilege Level field.","The low bit of the I/O Privilege Level field.","Enables 5-level paging on supported CPUs.","Enables the machine-check exception mechanism.","Used by <code>iret</code> in hardware task switch mode to determine if …","Enable the use of legacy SSE instructions; allows using …","Enables the SIMD floating-point exception (#XF) for …","Enables extendet processor state management instructions, …","Set by hardware to indicate that the sign bit of the …","Enables the global-page mechanism, which allows to make …","Disable caching for the P4 table.","Use a writethrough cache policy for the P4 table (else a …","Enables the use of 4MB physical frames; ignored in long …","Set by hardware if last result has an even number of 1 …","Enables process-context identifiers (PCIDs).","Allows software running at any privilege level to use the …","Enables physical address extension and 2MB physical …","Enables support for protected-mode virtual interrupts.","Enables 4-level paging to associate each linear address …","Allows to restart an instruction following an instrucion …","The RFLAGS register.","Enables SMX instructions.","Set by hardware if last arithmetic operation resulted in …","Enables restrictions for supervisor-mode software when …","Prevents the execution of instructions that reside in …","When set, only privilege-level 0 can execute the RDTSC or …","Enable single-step mode for debugging.","Prevents the execution of the SGDT, SIDT, SLDT, SMSW, and …","Enable the virtual-8086 mode.","Enables hardware-supported performance enhancements for …","Virtual image of the INTERRUPT_FLAG bit.","Indicates that an external, maskable interrupt is pending.","Enables VMX insturctions.","Set by hardware if last arithmetic operation resulted in …","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","","","","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns an empty set of flags","Returns an empty set of flags","Returns an empty set of flags","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Convert from underlying bit representation, preserving all…","Convert from underlying bit representation, preserving all…","","","","","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","Read the current page fault linear address from the CR2 …","Read the current P4 table address from the CR3 register.","","Read the current set of CR4 flags.","Returns the current value of the RFLAGS register.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specifies which element to load into a segment from …","","","","","","","The Task State Segment (TSS) is a special data structure …","","","Returns the set containing all flags.","Returns the set containing all flags.","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","","","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns an empty set of flags","Returns an empty set of flags","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Convert from underlying bit representation, preserving all…","","","","","","","","","Initialize the <em>actual</em> GDT stored in TLS.","Initialize the bootstrap GDT which is required to …","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","The 16-bit offset to the I/O permission bit map from the …","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","The full 64-bit canonical forms of the interrupt stack …","","The limit high and the flags.","","","","","","","","","","","","Create a new GDT descriptor.","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","The linear address of the table.","","","Removes the specified flags in-place.","Removes the specified flags in-place.","","","","","The full 64-bit canonical forms of the stack pointers …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","","","","The size of the table subtracted by 1. The size of the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","APIC (Advanced Programmable Interrupt Controller) is an …","","","","","The global interrupt controller for x86 protected by a …","The interrupt controller interface. The task of an …","","","","","","","PIC (Programmable Interrupt Controller) manages hardware …","","","","","","","","","","","","","","","","","","","Disables the PIC interrupt controller.","Wrapper function to the <code>cli</code> assembly instruction used to …","Wrapper function to the <code>sti</code> assembly instruction used to …","Send EOI, indicating the completion of an interrupt.","Send EOI to the local APIC, indicating the completion of …","Send EOI to the PIC chip, indicating the completion of an …","","","","","","","","Helper function to get the IRQ register. This function is …","Wrapper function to the <code>hlt</code> assembly instruction used to …","The IDT is similar to the Global Descriptor Table in …","","","","Helper macro that generates an interrupt handler that …","Helper macro to generate an interrupt exception handler …","Helper macro to generate an interrupt handler that takes …","","","","","","","","","Returns true if interrupts are enabled.","Returns true if the PIC master chip is active.","Returns true if the PIC slave chip is active.","","Creates a new interrupt controller using the PIC chip by …","Creates a new PIC controller. This function is …","Wrapper function to the <code>pause</code> assembly instruction used …","Sets the interrupt controller to APIC.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","IDT entry with all values defaulted to 0, ie <code>null</code>.","","","","","","","","","","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> all of the flags in <code>other</code> are contained …","","Returns an empty set of flags","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","","","","","","","Initialize the IDT.","Inserts the specified flags in-place.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","","","Create a new IDT descriptor.","Returns the complement of this set of flags.","","","","","","","","","","","","","","","","","","","","","Removes the specified flags in-place.","","","","","","","Inserts or removes the specified flags depending on the …","Set the IDT entry flags.","Set the handler function of the IDT entry.","Set the IDT entry offset.","","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This function is responsible for performing the inner …","","","","","","","","","","","","","","","","","","","","","","","Allocates a new kernel task pointing at the provided …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Structure representing the ACHI driverhis function is responsible for initializing and running …","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","","","","","","","","","","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","","Copys the data from the DMA buffer into the given buffer.","","","","The data size of the DMA buffer.","","","","","Returns an empty set of flags","Returns an empty set of flags","Returns an empty set of flags","Returns an empty set of flags","Returns an empty set of flags","Returns an empty set of flags","Returns an empty set of flags","Returns an empty set of flags","Returns an empty set of flags","This function is responsible for enabling bus mastering …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Convert from underlying bit representation, preserving all…","Convert from underlying bit representation, preserving all…","Convert from underlying bit representation, preserving all…","Convert from underlying bit representation, preserving all…","Convert from underlying bit representation, preserving all…","Convert from underlying bit representation, preserving all…","Convert from underlying bit representation, preserving all…","Convert from underlying bit representation, preserving all…","","","","","","","","","","Returns a reference-counting pointer to the AHCI driver.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","True if the sector size is greator then 4KiB and we need …","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","","","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","","","","","","","","","","","","","","","Creates a new DMA request for the given sector and count.","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","","","","","","","","","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","","","","","","","","","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","","","This function is responsible for allocating space for …","","The start address of the DMA buffer.","","This function is responsible for initializing and …","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","","","","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-placeeturns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns an empty set of flags","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","","","","","","Inserts the specified flags in-place.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","Returns the complement of this set of flags.","","","This function is responsible for initializing PS2 …","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","","","Toggles the specified flags in-place.","","","","","","","","","","Whether or not the packet is valid or not.","","","","","","Represents the flags currently set for the mouse.","","","Whether or not the x delta overflowed.","Whether or not the x delta is negative.","Whether or not the y delta overflowed.","Whether or not the y delta is negative.","","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","Returns <code>true</code> all of the flags in <code>other</code> are contained …","","","","","Returns an empty set of flags","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","","","","Handle the mouse interrupt.","","Initialise the PS/2 Mouse.","","Inserts the specified flags in-place.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","","","","","","","Create a new mouse state","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This function is responsible for enabling bus masterning …","","","","","","","","","","","","","","","","","","","Returns true if the PCI device driver handles the device …","","Lookup and initialize all PCI devices.","","","","","","","","","","","","","","","","This function is responsible for initializing the device …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An interface to a serial port that allows sending out …","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","","","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns an empty set of flags","Returns an empty set of flags","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Convert from underlying bit representation, preserving all…","","","","","","","","","Initialize the serial ports if avaliable.","Initialize the serial port.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","Removes the specified flags in-place.","","","","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","Notes","","","","","","","A slice of a path (akin to str).","","","","","","","","","","","","","","","General implementation for file system caching. Stuff …","","","","","The <code>/dev</code> directory contains the special device files for …","","","","","","","","","","","","","","","","","","","","","","Implementation of in-memory filesystem. This is used for …","","","","","","","","","","","","","","","","","","","Structure representing a cache with a key of <code>K</code> and value …","Inner implementation structure for caching. This …","Structure representing a cache item in the cache index. …","","","","","","","The cache key for the directory entry cache used to get …","","","","","","","","","","","","","","","","","This function is responsible for clearning the used and …","Clears the inode cache. This function is mostly called …","","","","","","","","","","","This function is responsible for initializing the inode …","","","","","","","","","Creates a new cache with the provided that holds at most …","","","","","","","","","","","","","","","","","","","","","","","","","Implementation of dev filesystem. (See the module-level …","Structure representing a device inode. This is internally …","Implementation of the null device (akin <code>/dev/null</code>).","A trait representing a device. A device has a device …","","","","","","","","","","","","Returns the device marker (or simply the device ID) of …","","Returns the device name of this device. (See the …","","","","","","Initializes the dev filesystem. (See the module-level …","","","","Installs the provided <code>device</code> in the device filesystem …","","","","","Creates a new device inode by looking up the device with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new file handle.","","","","","","","","","","","","This variant expresses a <em>normal file</em> (akin: A file that …","","If the file type of the inode is FileType::Device, in …","","","","","","Enum representing the inner contents of a file. The file …","","An inode describes a file. An inode structure holds …","Structure representing the curcial, characteristics of an …","This file does <em>not</em> and <em>cannot</em> have any contents in bytes. …","","","","","","","","","","","","","The length of the children’s map of the inode. Set to …","","","","","","","","","Fetches a cached directory entry item from the directory …","","","","","","","","","","","Returns the inner inode cache item of the directory entry …","","","","","","","Returns true if the file type of the inode is a directory.","Looks up the directory entry in the filesystem.","Creates a new dev inode with the provided <code>name</code> and the …","Returns the inode metadata of <code>this</code> inode.","Creates a new directory with the provided <code>name</code> in the …","","Creates a new cached directory entry, where the entry has …","Creates a new root cached directory entry where the there …","","","Read at the provided <code>offset</code> to the given <code>buffer</code>.","The total size of the content that the inode holds. Set …","","","","","","","","","","","","","","","","","","Returns a weak reference to the filesystem that this …","Write at the provided <code>offset</code> with the given <code>buffer</code> as its …","","","","","Implementation of in-memory filesystem. (See the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Force-unlocks the logger ring buffer to prevent a …","","Initialize the global logger instance and the logger ring …","","","","","","Structure representing a <em>virtual</em> address space. The …","","","","Returns a reference to the page table frame allocated for …","","","","Allocates a new <em>virtual</em> address space.","Returns a mutable refernce to the mapper pointing to the …","Returns a mutable reference to the page table allocated …","","PTI (Page Table Isolation) is a feature that mitigates …","","Returns the current active address space.","","","","","","","","","","Allocate memory as described by the given <code>layout</code>.","","","","","Initializes an empty heap.","Initialize the heap at the HEAP_START.","","Creates a new uninitialized instance of the kernel global …","","","","If this flag is set, the memory access that caused the …","","If this flag is set, it indicates that the access that …","If this flag is set, the page fault is a result of the …","If this flag is set, the page fault was caused by a …","Describes an page fault error code.","If this flag is set, an access in user mode (CPL=3) …","Get a mutable reference to the active level 4 page table.","Physical and virtual addresses manipulation","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns an empty set of flags","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","","","","","Initialize paging.","Inserts the specified flags in-place.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns true if level 5 paging is supported by the CPU …","","","Returns the complement of this set of flags.","Abstractions for default-sized and huge virtual memory …","Abstractions for page tables and page table entries.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","","Toggles the specified flags in-place.","","","","","","","","A 64-bit physical memory address.","A passed <code>u64</code> was not a valid physical address.","A 64-bit virtual memory address.","A passed <code>u64</code> was not a valid virtual address.","","","","","","","","","Align address downwards.","Aligns the virtual address downwards to the given …","Aligns the physical address downwards to the given …","Align address upwards.","Aligns the virtual address upwards to the given alignment.","Converts the address to a mutable raw pointer.","Converts the address to a raw pointer.","Converts the address to an <code>u64</code>.","Converts the address to an <code>u64</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks whether the physical address has the demanded …","","","Creates a new canonical virtual address.","Creates a new physical address.","Returns the 9-bit level 1 page table index.","Returns the 9-bit level 2 page table index.","Returns the 9-bit level 3 page table index.","Returns the 9-bit level 4 page table index.","Returns the 9-bit level 5 page table index.","Returns the 12-bit page offset of this virtual address.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a virtual address that points to <code>0</code>.","","","","","","","","","","","","","Get the [MemoryRegionType] of a frame","Initializes the inner locked global frame allocator.","","","","Create a new global frame allocator from the memory map …","Constructs a new uninitialized and locked version of the …","","","","","","","","Returns an iterator over the usable frames specified in …","","An error indicating that an <code>update_flags</code> call failed.","An additional frame was needed for the mapping process, …","","A trait for types that can allocate a frame of memory.","A trait for types that can deallocate a frame of memory.","The page table entry for the given virtual address points …","The page table entry for the given page points to an …","The page table entry for the given page points to an …","This error is returned from <code>map_to</code> and similar methods.","The virtual address is mapped to a physical frame.","Represents a physical frame mapped in a page table.","A Mapper implementation that relies on a PhysAddr to …","","","A trait for common page table operations on pages of size …","An empty convencience trait that requires the <code>Mapper</code> …","This type represents a page whose mapping has changed in …","The given virtual address is not mapped to a physical …","","A Mapper implementation that requires that the complete …","The given page is already mapped to a physical frame.","The given page is not mapped to a physical frame.","The given page is not mapped to a physical frame.","The given page is not mapped to a physical frame.","","Provides a virtual address mapping for physical page …","","","An upper level page table entry has the <code>HUGE_PAGE</code> flag …","An upper level page table entry has the <code>HUGE_PAGE</code> flag …","An upper level page table entry has the <code>HUGE_PAGE</code> flag …","An upper level page table entry has the <code>HUGE_PAGE</code> flag …","","The virtual address is mapped to a “huge” 1GiB frame.","The virtual address is mapped to a “large” 2MiB frame.","The virtual address is mapped to a 4KiB frame.","Provides methods for translating virtual addresses.","An error indicating that an <code>translate</code> call failed.","The return value of the <code>Translate::translate</code> function.","An error indicating that an <code>unmap</code> call failed.","Allocate a frame of the appropriate size and return it if …","","","","","","","","","","","","","","","","","","","","","","","","","","","Internal helper function to create the page table of the …","Deallocate the given unused frame.","Flush the page from the TLB to ensure that the newest …","","","","","","","","","","","","","","","Translate the given physical frame to a virtual page …","","","","","","","","","","","","","","","","","","","","","","Maps the given frame to the virtual page with the same …","","","","","","","","","","","","","","","","Creates a new mapping in the page table.","","","Creates a new mapping in the page table.","","","","","Create a new flush promise","Creates a new <code>MappedPageTable</code> that uses the passed …","","Creates a new <code>OffsetPageTable</code> that uses the given offset …","Internal helper function to get a reference to the page …","Internal helper function to get a mutable reference to …","","","","","Returns the size the frame (4KB, 2MB or 1GB).","Returns the start address of the frame.","Return the frame that the given virtual address is mapped …","","","Translates the given virtual address to the physical …","Return the frame that the specified page is mapped to.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes a mapping from the page table and returns the …","","","","","","Updates the flags of an existing mapping.","","","","","","","","","","","The entry flags in the lowest-level page table.","The mapped frame.","The offset whithin the mapped frame.","","The given address was not sufficiently aligned.","This trait is implemented for 4KiB and 2MiB pages, but …","A virtual memory page.","A range of pages with exclusive upper bound.","A range of pages with inclusive upper bound.","Trait for abstracting over the three possible page sizes …","A physical memory frame.","An range of physical memory frames, exclusive the upper …","An range of physical memory frames, inclusive the upper …","The page size in bytes.","A string representation of the page size for debug output.","A “giant” 1GiB page.","A “huge” 2MiB page.","A standard 4KiB page.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the page that contains the given virtual address.","Returns the frame that contains the given physical …","The end of the range, exclusive.","The end of the range, inclusive.","The end of the range, exclusive.","The start of the range, inclusive.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the frame that starts at the given virtual …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the level 1 page table index of this page.","Returns the level 2 page table index of this page.","Returns the level 3 page table index of this page.","Returns the level 4 page table index of this page.","Returns the level 5 page table index of this page.","","","","","","Returns a range of pages, inclusive <code>end</code>.","","","The start of the range, inclusive.","The start of the range, inclusive.","The start of the range, inclusive.","The start of the range, inclusive.","Returns the start address of the page.","Returns the start address of the frame.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set by the CPU when the mapped frame or page table is …","Available to the OS, can be used to store additional …","Available to the OS, can be used to store additional …","Available to the OS, can be used to store additional …","Available to the OS, can be used to store additional …","Available to the OS, can be used to store additional …","Available to the OS, can be used to store additional …","Available to the OS, can be used to store additional …","Available to the OS, can be used to store additional …","Available to the OS, can be used to store additional …","Available to the OS, can be used to store additional …","Available to the OS, can be used to store additional …","Available to the OS, can be used to store additional …","Available to the OS, can be used to store additional …","Available to the OS, can be used to store additional …","Set by the CPU on a write to the mapped frame.","The number of entries in a page table.","The error returned by the <code>PageTableEntry::frame</code> method.","The entry does not have the <code>PRESENT</code> flag set, so it isn’…","Indicates that the mapping is present in all address …","Specifies that the entry maps a huge frame instead of a …","The entry does have the <code>HUGE_PAGE</code> flag set. The <code>frame</code> …","Disables caching for the pointed entry is cacheable.","Forbid code execution from the mapped frames.","Specifies whether the mapped frame or page table is …","A 12-bit offset into a 4KiB Page.","Represents a page table.","A 64-bit page table entry.","Possible flags for a page table entry.","A 9-bit index into a page table.","Controls whether accesses from userspace (i.e. ring 3) …","Controls whether writes to the mapped frames are allowed.","If this bit is set, a “write-through” policy is used …","Returns the physical address mapped by this entry, might …","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> all of the flags in <code>other</code> are contained …","","Returns an empty set of flags","","","","","","","","Returns the flags of this entry.","","","","","","","","","","","","Returns the physical frame mapped by this entry.","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","","","","","","","","","Inserts the specified flags in-place.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns whether this entry is zero.","","","","Creates an unused page table entry.","Creates an empty page table.","Creates a new index from the given <code>u16</code>. Panics if the …","Creates a new offset from the given <code>u16</code>. Panics if the …","Creates a new index from the given <code>u16</code>. Throws away bits …","Creates a new offset from the given <code>u16</code>. Throws away bits …","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Map the entry to the specified physical address with the …","Sets the flags of this entry.","Map the entry to the specified physical frame with the …","Sets this entry to zero.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","Clears all entries.","The PTI CPU stack stored as a thread local.","","","","","","Inner helper structure holding the module init function …","","","","This function is responsible for initializing all of the …","","Inner helper function to make sure the function provided …","","","","","","","One byte blue, then one byte green, then one byte red.","","","","","Debug renderer used by the kernel and the bootloader to …","Describes the layout and pixel format of a framebuffer.","Color format of pixels in the framebuffer.","One byte red, then one byte green, then one byte blue.","A single byte, representing the grayscale value.","","","","","","","","","","","","The raw framebuffer pointer queried from the BIOS or UEFI …","The total size in bytes.","The number of bytes per pixel.","","","","","","","","","","","","","","","","","","","","","Force-unlocks the rendy to prevent a deadlock.","","","","","","","","","","The width in pixels.","","","","","","","","","Return true if the debug renderer is initialized.","","","Create a new debug renderer with the default foreground …","","","The color format of each pixel.","","","","","","Number of pixels between the start of a line and the …","","","","","","","","","","","","","","","","","","","","The height in pixels.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This function is responsible for initializing the PIT …","","","The TCB (Thread Control Block) containg the self pointer …","","","","","","","","Initialize support for the <code>#[thread_local]</code> attribute.","","","","Pointer to the allocated memory for the TLS.","","","","","","","","","","This function is automatically called after each …","","This function is the entry point for the unwinding …","","","","","","","","","","","","Scheduler interface for each scheduling algorithm. The …","Container or a transparent struct containing a hashmap of …","","","","","","Get a reference-counting pointer to the current task.","","","Exits the current task.","","","Get a reference to the active scheduler.","Initialize the scheduler.","","","","","Creates a new task container with no taskes by default.","Create a new scheduler with no active tasks by default.","Yields execution to another task.","Register the provided task into the task scheduler queue.","Registers the provided <code>task</code> in the task container.","Registers the provided task in the schedulers queue.","","","","","","","","","","Round Robin is the simplest algorithm for a preemptive …","Scheduler queue containing a vector of all of the task of …","","","","","","","","","","","","","The kernel idle task is a special kind of task that is …","","","","Creates a new task queue with no taskes by default.","Creates a new instance of the round robin scheduler and …","","","","","","","The per-cpu scheduler queues.","","","","","Special scheduler task which is responsible to terminate …","","","","","","","","","","","","","","","","","Allocates a new task ID.","Returns a immutable reference to the inner ArchTask …","","Returns a mutable reference to the inner ArchTask …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a per-cpu idle task. An idle task is a special <em>…","Allocates a new kernel task pointing at the provided …","","","","","","Returns the task ID that was allocated for this task.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clears all of the mappings in the VM.","","","","","","","","","","","","","","","","","","Handler routine for a COW (Copy-On-Write) pages. A COW …","","This function is responsible for handling page faults …","Handler routine for private anonymous pages. Since its an …","Handler routine for pages backed by a file. This function …","","","","","","","","Mapping the provided <code>bin</code> file into the VM.","","","","","","","","Creates a new instance of VM.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Just like <code>Cell</code> but with volatile read / write operations","","","","","","","","","","","","","","","","Returns a copy of the contained value.","","","","","","","","Wrapper functions for the hardware IO using respective …","","","","","","","","Pop scratch registers.","","","Push preserved registers.","Push scratch registers.","Sets the contained value.","","","","","","","","","","","","","","","","Special special kind of buffer that stores valid UTF-8 …","Appends the provided byte to the ring buffer.","","","Clears the ring buffer and resets the position.","","","","Creates a new kernel ring buffer with the storage …","","","","","","","APIC Location and Status (R/W).","","System Call Flag Mask (R/W).","","Swap Target of BASE Address of GS (R/W).","IA-32e Mode System Call Target Address (R/W).","System Call Target Address (R/W).","x2APIC ID register (R/O) See X2APIC Specification.","x2APIC End of Interrupt.","Error Status Register.","x2APIC Interrupt Command register (R/W)","","x2APIC Spurious Interrupt Vector register (R/W)","x2APIC Task Priority register (R/W)","","Wrapper function to the <code>inb</code> assembly instruction used to …","Wrapper function to the <code>inl</code> assembly instruction used to …","Wrapper function to the <code>outb</code> assembly instruction used to …","Wrapper function to the <code>outl</code> assembly instruction used to …","Wrapper function to the <code>rdmsr</code> assembly instruction used","This function is called after every <code>outb</code> and <code>outl</code> …","Wrapper function to the <code>wrmsr</code> assembly instruction used …","","","","","Helper guard structure used to lock interrupts. When …","A spin-based lock providing mutually exclusive access to …","","Run a future to completion on the current task. This …","","","","","","","","","","","Drops the IRQ guard, enabling interrupts again. See the …","","Force unlock this <code>Mutex</code>.","","","","","","","","","","","","Locks the <code>Mutex</code> and returns a guard that permits access …","Locks the <code>Mutex</code> and returns a IRQ guard that permits …","","Creates a new block queue.","Creates a new IRQ guard. See the <code>IrqGuard</code> documentation …","Creates a new <code>Mutex</code> wrapping the supplied data.","Notify’s all of the tasks in the blocker’s queue that …","","Inner helper function which removes a task from the block …","","","","","","","","","","","",""],"i":[1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,2,2,3,3,3,2,3,3,2,4,5,3,2,4,5,3,3,3,2,4,0,3,2,4,5,3,4,0,0,2,4,5,3,4,0,0,4,5,5,5,5,5,5,5,5,5,5,0,0,3,2,4,5,3,2,4,5,3,2,4,5,3,5,5,5,5,5,5,5,5,5,5,6,7,0,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,10,10,10,0,0,0,0,0,0,11,12,11,13,10,14,15,12,11,13,10,14,15,13,15,15,14,15,12,11,13,12,11,13,10,14,15,13,12,11,13,12,12,11,13,10,14,15,14,13,12,15,14,12,14,11,0,0,0,15,12,11,13,10,14,15,12,11,13,10,14,15,12,11,13,10,14,15,16,17,18,0,0,0,0,19,19,20,19,20,19,20,19,20,0,20,20,19,20,0,19,19,20,19,19,20,19,20,19,20,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,0,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,0,0,0,0,0,0,0,0,23,23,0,0,0,0,0,0,0,23,24,0,24,24,24,25,23,24,25,23,24,23,23,24,23,23,24,25,23,23,0,0,24,0,25,25,0,24,24,25,23,25,0,0,25,0,0,0,0,0,23,0,0,24,24,25,24,24,24,23,23,24,25,23,24,25,23,24,25,23,24,0,0,0,0,0,0,26,26,26,0,0,27,26,27,26,26,26,26,27,27,26,27,27,27,26,27,28,28,27,26,27,27,27,27,27,26,0,27,26,27,27,27,26,27,26,27,26,26,27,26,28,27,26,28,27,26,28,27,26,28,27,26,28,27,26,28,27,26,28,27,26,28,27,26,28,27,26,28,27,26,28,27,26,28,27,26,28,27,26,28,27,26,28,27,26,28,27,26,28,27,26,28,27,26,28,28,28,28,28,27,27,27,27,27,26,26,26,26,26,28,27,26,28,27,26,28,27,26,28,27,26,28,27,26,28,28,27,27,26,26,28,27,26,28,27,26,28,27,26,28,27,26,28,27,26,28,27,26,28,27,26,28,27,26,28,27,26,0,0,0,0,0,28,27,26,28,27,26,28,27,26,28,27,26,28,27,26,28,27,26,28,27,26,28,27,26,28,27,26,0,0,29,0,0,0,0,0,0,0,30,30,30,31,29,31,32,29,29,31,29,29,33,33,33,33,0,34,34,29,0,0,33,33,30,29,30,0,30,32,33,31,32,32,32,33,31,33,31,33,31,33,31,33,31,33,31,33,31,33,31,29,30,35,33,31,34,32,36,29,30,35,33,31,34,32,36,33,31,34,32,36,33,31,34,32,36,33,31,33,31,33,31,33,31,34,33,31,33,33,33,33,33,31,31,31,31,31,34,32,36,29,30,35,33,31,34,32,36,33,31,33,31,33,31,33,31,33,33,31,31,33,31,0,0,33,31,33,31,29,30,35,33,31,34,32,36,36,33,31,33,31,36,36,32,32,0,0,0,0,0,0,0,0,33,31,35,33,32,36,33,31,35,33,31,33,31,36,36,36,36,36,33,31,36,32,32,32,35,33,31,33,31,33,31,34,32,36,33,31,29,30,35,33,31,34,32,36,29,30,35,33,31,34,32,36,29,30,35,33,31,34,32,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,38,39,40,41,42,37,38,39,40,41,42,37,38,39,37,38,39,42,0,0,40,41,42,0,40,41,42,37,38,39,42,0,0,37,38,39,0,0,0,40,41,42,37,38,39,0,0,0,42,42,40,40,42,0,40,40,41,42,37,38,39,40,41,42,37,38,39,40,41,42,37,38,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,0,0,0,0,0,0,0,0,0,44,43,0,43,43,43,43,43,0,43,43,43,43,43,43,43,43,43,43,45,43,44,46,47,48,49,50,45,43,44,46,47,48,49,50,43,44,46,47,48,49,50,43,44,46,47,48,49,50,43,50,43,48,43,43,43,43,43,43,43,43,46,47,48,49,50,45,43,44,46,47,48,49,50,43,43,43,43,49,43,43,43,44,0,43,43,45,43,44,46,47,48,49,50,49,43,43,48,44,0,43,45,43,45,44,44,44,43,49,46,46,47,47,47,47,46,46,46,47,47,46,46,46,43,48,48,46,48,49,44,43,44,44,44,45,48,50,43,43,43,44,46,47,48,49,50,43,45,43,44,46,47,48,49,50,45,43,44,46,47,48,49,50,44,45,43,44,46,47,48,49,50,0,0,0,0,0,0,0,0,0,51,0,52,51,53,52,51,53,51,51,53,53,51,51,52,51,53,51,51,52,51,53,52,51,51,53,53,53,53,53,53,52,53,53,51,51,52,51,53,52,51,53,52,51,53,0,0,0,0,0,0,54,55,56,57,58,57,57,57,59,59,59,59,60,0,0,0,0,0,0,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,55,62,58,62,55,63,57,57,64,65,57,57,59,59,58,64,65,57,64,65,64,65,0,64,65,60,0,0,0,63,57,57,63,57,57,0,0,64,65,64,65,57,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,64,65,64,65,64,65,57,56,57,58,66,60,64,65,62,62,66,55,64,65,57,63,57,64,65,63,64,65,60,66,66,55,67,68,63,58,63,63,63,63,64,65,58,63,63,62,63,63,63,63,57,59,57,59,59,59,59,63,60,64,65,64,65,55,0,69,70,71,72,73,74,73,71,75,0,59,58,62,63,56,65,64,57,55,76,69,59,58,62,63,56,65,64,57,55,59,58,62,63,56,65,64,57,55,59,58,62,63,56,65,64,57,55,59,58,62,63,56,65,64,57,55,59,58,62,63,56,65,64,57,55,59,58,62,63,56,65,64,57,55,59,58,62,63,56,65,64,57,55,59,58,62,63,56,65,64,57,55,67,77,76,69,70,71,72,66,60,73,74,78,75,79,80,81,59,58,62,63,56,65,64,57,55,61,68,54,67,77,76,69,70,71,72,66,60,73,74,78,75,79,80,81,59,58,62,63,56,65,64,57,55,61,68,54,76,69,69,71,71,73,73,59,58,62,63,56,65,64,57,55,68,54,59,58,62,63,56,65,64,57,55,68,54,73,73,75,59,58,62,63,56,65,64,57,55,76,70,59,58,62,63,56,65,64,57,55,70,76,76,70,74,77,72,70,54,73,59,58,62,63,56,65,64,57,55,80,69,69,59,58,62,63,56,65,64,57,55,61,59,58,62,63,56,65,64,57,55,73,73,70,70,70,70,72,74,59,59,59,59,59,58,58,58,58,58,62,62,62,62,62,63,63,63,63,63,56,56,56,56,56,65,65,65,65,65,64,64,64,64,64,57,57,57,57,57,55,55,55,55,55,75,67,77,76,69,70,71,72,66,60,73,74,78,75,79,80,81,59,58,62,63,56,65,64,57,55,61,68,54,59,58,62,63,56,65,64,57,55,59,58,62,63,56,65,64,57,55,59,58,62,63,56,65,64,57,55,59,58,62,63,56,65,64,57,55,0,59,59,58,58,62,62,63,63,56,56,65,65,64,64,57,57,55,55,69,81,59,58,62,63,56,65,64,57,55,80,80,75,69,69,77,70,73,79,81,59,58,62,63,56,65,64,57,55,54,69,59,58,62,63,56,65,64,57,55,67,77,76,69,70,71,72,66,60,73,74,78,75,79,80,81,59,58,62,63,56,65,64,57,55,61,68,54,76,73,59,58,62,63,56,65,64,57,55,59,58,62,63,56,65,64,57,55,70,70,70,70,70,70,59,58,62,63,56,65,64,57,55,76,79,59,58,62,63,56,65,64,57,55,59,58,62,63,56,65,64,57,55,69,80,69,74,71,71,74,73,79,59,58,62,63,56,65,64,57,55,78,73,75,79,73,73,76,73,59,58,62,63,56,65,64,57,55,73,73,73,73,81,77,73,80,80,73,59,58,62,63,56,65,64,57,55,59,58,62,63,56,65,64,57,55,73,59,58,62,63,56,65,64,57,55,68,54,59,58,62,63,56,65,64,57,55,67,77,76,69,70,71,72,66,60,73,74,78,75,79,80,81,59,58,62,63,56,65,64,57,55,61,68,54,67,77,76,69,70,71,72,66,60,73,74,78,75,79,80,81,59,58,62,63,56,65,64,57,55,61,68,54,67,77,76,69,70,71,72,66,60,73,74,78,75,79,80,81,59,58,62,63,56,65,64,57,55,61,68,54,69,73,69,82,82,0,82,82,82,0,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,0,0,82,0,0,82,82,0,82,82,82,82,82,82,82,82,82,84,82,83,84,82,83,82,83,82,83,82,82,82,82,83,82,84,82,82,82,82,82,83,84,82,83,82,82,82,82,82,82,0,82,82,82,84,82,83,82,82,82,84,82,85,82,0,0,84,82,82,84,82,82,82,83,82,84,82,83,84,82,83,84,82,83,86,86,86,0,0,0,0,0,86,86,86,86,86,87,86,86,86,86,86,86,86,86,86,88,87,86,89,88,87,86,89,86,86,86,86,88,86,87,88,86,86,86,89,86,86,86,86,86,89,88,87,86,89,86,86,86,86,86,86,0,86,0,87,86,86,88,87,86,89,86,86,89,89,89,0,0,0,86,88,89,86,86,88,88,86,86,0,88,86,86,86,86,88,87,86,89,88,87,86,89,88,87,86,89,89,89,90,91,92,92,92,92,92,0,92,92,92,92,92,92,92,92,0,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,93,92,92,92,91,92,92,92,92,92,92,92,92,92,92,92,92,93,93,92,92,92,91,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,0,0,0,92,0,0,0,92,0,92,92,92,92,92,92,92,92,92,91,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,91,92,0,92,92,92,92,90,94,95,93,92,91,90,94,95,93,92,91,90,93,93,90,90,92,91,93,92,91,90,94,95,93,92,91,90,90,90,90,90,90,94,96,90,0,95,90,94,95,93,92,91,91,90,95,92,91,0,90,0,96,93,90,94,95,93,92,91,90,94,95,93,92,91,90,94,95,93,92,91,90,97,98,99,98,99,98,99,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,101,102,103,104,103,102,104,101,103,102,104,101,102,101,104,104,104,103,102,104,101,103,103,0,101,104,103,102,104,101,103,102,102,102,103,104,104,102,104,102,104,104,104,103,103,102,104,101,103,102,104,101,103,102,104,101,104,105,0,106,107,0,0,107,106,106,106,0,106,107,106,107,106,107,106,107,106,107,106,107,106,107,106,107,106,107,105,106,107,105,106,107,106,107,106,107,106,107,106,107,106,107,106,107,106,107,106,106,106,106,106,107,107,107,107,107,105,106,107,106,107,106,107,106,107,106,107,106,106,107,107,106,107,0,105,106,107,106,107,105,106,107,106,107,106,107,105,106,107,105,106,107,106,107,106,107,105,0,0,106,107,106,107,106,107,106,107,106,107,105,106,107,105,106,107,105,106,107,105,105,108,109,110,110,110,0,0,0,0,0,0,110,0,0,0,0,111,108,111,112,110,109,108,111,112,110,109,0,112,112,109,111,0,0,112,108,110,109,108,111,112,110,0,111,0,108,111,112,110,0,108,108,109,112,0,0,113,112,112,108,111,112,110,108,111,112,110,108,111,112,110,109,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,115,116,117,114,115,116,117,114,115,118,114,117,0,0,115,114,115,116,117,114,117,0,117,0,114,115,116,117,114,117,117,115,117,114,117,115,116,117,114,115,116,117,114,115,116,117,114,116,116,115,119,120,121,0,0,0,0,0,0,0,0,122,0,119,120,121,122,119,120,121,122,122,123,121,123,121,119,120,121,122,0,122,123,121,0,119,120,121,122,119,120,121,119,121,120,119,120,121,122,119,120,121,122,119,120,121,122,119,121,124,0,0,125,124,125,124,125,125,125,124,124,125,125,124,125,124,125,124,125,125,124,125,124,125,124,125,126,0,126,127,0,0,127,127,0,0,0,0,126,126,128,129,130,127,126,128,129,130,127,129,129,130,130,127,130,127,129,126,127,127,0,130,129,130,127,126,128,129,130,127,130,129,128,126,128,129,130,127,130,131,131,131,131,128,129,129,131,128,131,130,130,127,126,128,129,130,127,126,128,129,130,127,126,128,129,130,127,131,131,132,133,134,0,0,0,135,134,135,136,134,135,136,136,136,136,136,136,134,135,136,136,134,134,135,136,134,134,134,134,134,134,135,135,136,136,134,135,135,135,134,135,136,134,135,136,134,135,136,134,134,0,0,0,0,0,137,137,137,137,0,137,0,137,137,137,137,137,0,0,138,138,138,138,138,138,138,138,138,0,0,138,138,138,138,138,139,0,0,0,139,0,139,139,139,139,139,139,0,139,139,139,139,139,140,0,140,140,140,0,140,0,0,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,0,140,140,140,140,140,140,140,140,0,140,140,140,140,140,0,0,140,140,0,0,140,140,140,140,140,140,140,140,140,140,141,142,143,144,0,0,0,0,141,141,142,142,141,141,142,142,0,141,142,0,141,141,141,141,142,141,141,142,143,144,141,142,143,144,141,142,141,142,141,142,141,142,141,141,141,141,141,141,142,142,142,142,142,142,143,144,141,141,142,143,144,141,142,143,144,142,141,142,141,142,141,141,141,141,141,141,141,142,141,141,141,141,142,142,142,141,141,142,142,141,142,141,142,143,144,141,142,143,144,141,142,143,144,141,145,0,0,145,146,145,146,145,146,145,146,145,146,145,145,146,146,146,145,146,145,146,145,146,145,146,146,147,0,148,149,0,0,150,151,152,0,150,0,0,153,149,0,0,0,150,153,0,148,151,154,152,0,0,0,0,148,151,154,152,0,155,155,155,0,0,0,0,156,150,155,147,148,151,154,152,157,158,153,149,159,160,150,155,147,148,151,154,152,157,158,153,149,159,160,158,161,147,150,155,147,148,151,154,152,157,158,153,149,159,160,159,162,160,150,155,147,148,148,148,148,151,151,154,154,152,152,157,158,153,153,149,159,160,163,159,150,155,147,148,151,154,152,157,158,153,149,159,160,157,163,157,157,163,157,157,159,159,147,157,158,159,158,158,160,157,158,157,155,155,164,157,159,164,163,157,157,159,159,150,155,147,148,151,154,152,157,158,153,149,159,160,150,155,147,148,151,154,152,157,158,153,149,159,160,150,155,147,148,151,154,152,157,158,153,149,159,160,163,157,157,159,159,159,163,157,157,159,159,165,166,167,168,169,170,171,171,171,172,0,0,0,0,0,0,0,0,0,173,173,0,0,0,174,175,174,175,176,177,178,174,179,180,181,175,182,183,176,177,178,174,179,180,181,175,182,183,176,177,178,174,179,180,175,182,183,176,177,178,174,179,180,175,182,183,176,177,178,174,175,174,175,179,180,182,183,176,177,178,174,179,180,175,182,183,176,177,178,174,179,180,181,181,175,182,183,176,177,178,174,179,180,181,175,182,183,175,176,177,178,174,179,180,181,175,182,183,179,180,182,183,174,179,180,175,182,183,179,180,182,183,174,174,174,174,174,176,177,178,174,175,174,174,175,179,180,182,183,174,175,174,175,174,174,175,175,174,175,176,177,178,174,179,180,175,182,183,181,176,177,178,174,179,180,181,175,182,183,176,177,178,174,179,180,181,175,182,183,176,177,178,174,179,180,181,175,182,183,184,185,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,0,0,187,186,186,187,186,186,186,0,0,0,0,0,186,186,186,188,186,186,186,186,186,186,186,186,186,187,188,186,189,184,185,187,188,186,189,184,185,187,188,186,189,184,185,187,188,186,189,184,185,186,184,185,186,189,186,189,188,187,186,184,185,186,188,187,188,186,186,186,186,186,189,184,185,189,188,187,188,186,186,189,184,185,186,186,186,186,186,186,186,189,189,189,189,186,186,187,188,186,189,184,185,186,186,188,186,184,185,188,189,184,185,184,185,186,186,184,185,186,186,188,188,188,188,186,186,187,188,186,189,184,185,186,187,188,186,189,184,185,187,188,186,189,184,185,187,188,186,189,184,185,189,0,0,0,0,0,190,0,190,190,190,0,190,0,190,190,190,191,192,192,193,191,0,0,0,0,0,0,193,193,191,194,191,192,193,195,194,191,192,193,195,194,195,195,194,0,194,191,192,193,195,191,192,193,195,194,0,191,192,193,191,192,193,195,0,194,191,192,193,195,191,192,192,194,195,194,0,191,194,191,192,193,195,0,191,192,194,192,194,195,0,0,194,194,194,195,191,192,193,195,194,191,192,193,195,194,191,192,193,195,194,191,192,193,195,195,194,194,194,194,194,194,0,0,0,196,197,196,197,196,197,196,197,197,196,197,196,197,0,0,196,197,0,197,197,197,197,197,197,197,197,197,197,197,197,197,197,196,196,197,196,0,0,0,196,197,196,197,196,197,196,197,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,198,199,198,199,198,199,0,198,199,199,199,0,198,199,198,199,198,199,198,199,0,0,0,0,0,0,0,0,0,0,0,200,0,0,0,0,201,200,202,200,202,201,202,202,201,200,202,0,0,201,202,200,202,200,202,201,201,200,202,0,202,200,202,200,202,200,202,201,0,0,203,204,204,203,204,203,203,204,204,203,204,203,204,203,204,203,204,203,203,204,0,204,204,204,203,203,204,203,203,0,204,203,204,203,204,203,203,205,206,207,206,0,0,0,0,206,205,208,208,208,205,208,205,206,207,208,205,206,207,205,206,207,205,206,207,205,207,205,206,208,208,208,205,206,208,208,205,206,206,207,205,205,207,207,205,208,205,206,207,208,208,207,207,207,205,205,207,208,208,205,207,207,208,208,208,208,205,206,207,208,205,206,207,208,205,206,207,208,205,206,207,208,208,208,209,209,0,0,209,209,209,0,0,0,209,210,211,212,213,209,210,211,212,213,211,212,213,212,213,213,212,213,210,210,213,210,211,209,210,211,212,213,213,210,211,213,213,211,209,210,211,212,213,210,211,211,210,210,211,210,211,210,211,212,212,213,212,213,212,213,209,210,211,212,213,209,210,211,212,213,209,210,211,212,213,213,214,0,0,0,0,215,216,217,216,218,217,216,218,0,0,216,0,217,216,218,217,216,216,0,0,217,216,218,0,0,216,218,216,218,0,0,0,218,0,0,0,217,218,0,217,216,218,217,216,218,217,216,218,0,0,0,217,0,219,219,219,219,219,219,219,219,219,219,219,219,219,219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,220,220,0,0,0,0,221,221,222,223,224,221,222,223,224,224,224,222,224,223,221,222,223,224,224,223,221,222,223,224,224,223,223,222,221,222,223,221,221,221,221,222,223,224,221,222,223,224,221,222,223,224],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],null,[[]],null,[[]],[[["u64",15],["virtaddr",3]]],[[["stivalestruct",3]]],[[]],null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["sdt",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["genericaddressstructure",3]],[[]],[[],["usize",15]],null,null,[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,null,[[["virtaddr",3],["physaddr",3]]],[[]],[[]],[[]],[[]],[[["str",15]],[["option",4,["sdt"]],["sdt",3]]],null,null,[[["virtaddr",3]]],[[["u16",15]],["u16",15]],[[["u16",15]],["u32",15]],[[["u16",15]],["u8",15]],[[["u16",15],["u8",15]],["u16",15]],[[["u16",15],["u8",15]],["u32",15]],[[["u16",15],["u8",15]],["u8",15]],[[["usize",15]],["u16",15]],[[["usize",15]],["u32",15]],[[["usize",15]],["u64",15]],[[["usize",15]],["u8",15]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["u16",15]]],[[["u16",15],["u32",15]]],[[["u16",15],["u8",15]]],[[["u16",15],["u8",15]]],[[["u16",15],["u8",15],["u32",15]]],[[["u16",15],["u8",15]]],[[["usize",15],["u16",15]]],[[["usize",15],["u32",15]]],[[["usize",15],["u64",15]]],[[["usize",15],["u8",15]]],null,null,null,null,null,null,null,[[]],[[]],null,null,[[],["fadt",3]],[[]],null,null,null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[]],null,null,null,null,null,null,[[]],null,[[["sdt",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,[[]],[[]],[[],["hpet",3]],[[]],null,[[["formatter",3]],["result",6]],[[]],null,null,null,[[]],null,[[["sdt",3]]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["entryheader",3]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["madtiterator",3]],null,null,null,[[],["option",4]],null,null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,[[],["usize",15]],[[]],[[]],[[],["mcfg",3]],null,[[]],[[]],[[]],[[],["bool",15]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],null,[[],["rsdp",3]],[[]],null,[[]],[[],["usize",15]],[[]],null,null,null,null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,[[]],[[]],[[]],null,[[],["sdt",3]],[[]],null,null,[[],["usize",15]],[[],["usize",15]],[[["formatter",3]],["result",6]],[[]],[[["u64",15]]],[[]],null,null,null,null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[],["apictype",4]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[],["apictype",4]],[[]],[[]],[[["apictype",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[["featureinfo",3]]],[[]],[[],["u64",15]],[[],["usize",15]],[[],["u32",15]],[[],[["mutexguard",3,["localapic"]],["localapic",3]]],null,null,[[],["apictype",4]],[[]],[[]],[[]],[[]],null,[[["u32",15]],[["usize",15],["option",4,["usize"]]]],[[["usize",15]],["u32",15]],null,[[["usize",15],["u32",15]],["u32",15]],[[["u8",15],["u32",15],["i32",15],["u16",15]]],[[["u8",15],["i32",15]]],[[["usize",15],["u32",15]]],[[],["bool",15]],[[],["bool",15]],[[["bool",15]]],[[["bool",15]]],[[["virtaddr",3],["apictype",4]]],[[["u32",15]],["u32",15]],null,[[["usize",15],["u8",15]]],[[["u64",15]]],[[["u32",15]]],[[],["bool",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["u32",15]]],null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["cr3flags",3]],[[],["cr4flags",3]],[[],["rflags",3]],[[["cr3flags",3]],["cr3flags",3]],[[["cr4flags",3]],["cr4flags",3]],[[["rflags",3]],["rflags",3]],[[["cr3flags",3]]],[[["cr4flags",3]]],[[["rflags",3]]],[[["cr3flags",3]],["cr3flags",3]],[[["cr4flags",3]],["cr4flags",3]],[[["rflags",3]],["rflags",3]],[[["cr3flags",3]]],[[["cr4flags",3]]],[[["rflags",3]]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],null,null,null,[[["cr3flags",3]],["cr3flags",3]],[[["cr4flags",3]],["cr4flags",3]],[[["rflags",3]],["rflags",3]],[[["cr3flags",3]]],[[["cr4flags",3]]],[[["rflags",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["cr3flags",3]],[[],["cr4flags",3]],[[],["rflags",3]],[[]],[[]],[[]],[[["cr3flags",3]],["ordering",4]],[[["cr4flags",3]],["ordering",4]],[[["rflags",3]],["ordering",4]],[[["cr3flags",3]],["bool",15]],[[["cr4flags",3]],["bool",15]],[[["rflags",3]],["bool",15]],[[],["cr3flags",3]],[[],["cr4flags",3]],[[],["rflags",3]],[[["cr3flags",3]],["bool",15]],[[["cr4flags",3]],["bool",15]],[[["rflags",3]],["bool",15]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["u64",15]],[["option",4,["cr3flags"]],["cr3flags",3]]],[[["u64",15]],[["option",4,["cr4flags"]],["cr4flags",3]]],[[["u64",15]],[["option",4,["rflags"]],["rflags",3]]],[[["u64",15]],["cr3flags",3]],[[["u64",15]],["cr4flags",3]],[[["u64",15]],["rflags",3]],[[["u64",15]],["cr3flags",3]],[[["u64",15]],["cr4flags",3]],[[["u64",15]],["rflags",3]],[[["intoiterator",8]],["cr3flags",3]],[[["intoiterator",8]],["cr4flags",3]],[[["intoiterator",8]],["rflags",3]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[]],[[["cr3flags",3]]],[[["cr4flags",3]]],[[["rflags",3]]],[[["cr3flags",3]],["bool",15]],[[["cr4flags",3]],["bool",15]],[[["rflags",3]],["bool",15]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["cr3flags",3]],["bool",15]],[[["cr4flags",3]],["bool",15]],[[["rflags",3]],["bool",15]],[[],["cr3flags",3]],[[],["cr4flags",3]],[[],["rflags",3]],[[["cr3flags",3]],[["option",4,["ordering"]],["ordering",4]]],[[["cr4flags",3]],[["option",4,["ordering"]],["ordering",4]]],[[["rflags",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["virtaddr",3]],[[]],[[],["u64",15]],[[],["cr4flags",3]],[[],["rflags",3]],[[["cr3flags",3]]],[[["cr4flags",3]]],[[["rflags",3]]],[[["cr3flags",3],["bool",15]]],[[["bool",15],["cr4flags",3]]],[[["rflags",3],["bool",15]]],[[["cr3flags",3]],["cr3flags",3]],[[["cr4flags",3]],["cr4flags",3]],[[["rflags",3]],["rflags",3]],[[["cr3flags",3]]],[[["cr4flags",3]]],[[["rflags",3]]],[[]],[[]],[[]],[[["cr3flags",3]]],[[["cr4flags",3]]],[[["rflags",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["segmentselector",3]],[[],["gdtentryflags",3]],null,null,null,[[["segmentselector",3]],["segmentselector",3]],[[["gdtentryflags",3]],["gdtentryflags",3]],[[["segmentselector",3]]],[[["gdtentryflags",3]]],[[["segmentselector",3]],["segmentselector",3]],[[["gdtentryflags",3]],["gdtentryflags",3]],[[["segmentselector",3]]],[[["gdtentryflags",3]]],[[],["u16",15]],[[],["u8",15]],null,null,[[["segmentselector",3]],["segmentselector",3]],[[["gdtentryflags",3]],["gdtentryflags",3]],[[["segmentselector",3]]],[[["gdtentryflags",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["segmentselector",3]],[[],["gdtentryflags",3]],[[],["ring",4]],[[],["gdtentry",3]],[[],["tss",3]],[[]],[[]],[[]],[[]],[[]],[[["segmentselector",3]],["ordering",4]],[[["gdtentryflags",3]],["ordering",4]],[[["segmentselector",3]],["bool",15]],[[["gdtentryflags",3]],["bool",15]],[[],["segmentselector",3]],[[],["gdtentryflags",3]],[[["segmentselector",3]],["bool",15]],[[["gdtentryflags",3]],["bool",15]],[[["ring",4]],["bool",15]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u16",15]],[["option",4,["segmentselector"]],["segmentselector",3]]],[[["u8",15]],[["gdtentryflags",3],["option",4,["gdtentryflags"]]]],[[["u16",15]],["segmentselector",3]],[[["u8",15]],["gdtentryflags",3]],[[["u16",15]],["segmentselector",3]],[[["u8",15]],["gdtentryflags",3]],[[["intoiterator",8]],["segmentselector",3]],[[["intoiterator",8]],["gdtentryflags",3]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[["virtaddr",3]]],[[]],[[["segmentselector",3]]],[[["gdtentryflags",3]]],[[["segmentselector",3]],["bool",15]],[[["gdtentryflags",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,[[["segmentselector",3]]],[[["segmentselector",3]]],[[["segmentselector",3]]],[[["segmentselector",3]]],[[["gdtdescriptor",3]]],[[["segmentselector",3]]],[[["segmentselector",3]]],[[["segmentselector",3]]],[[["segmentselector",3]],["bool",15]],[[["gdtentryflags",3]],["bool",15]],[[["u16",15],["u64",15]]],[[["u16",15],["ring",4]]],[[["u8",15],["gdtentryflags",3]]],[[]],[[],["segmentselector",3]],[[],["gdtentryflags",3]],null,[[["segmentselector",3]],[["option",4,["ordering"]],["ordering",4]]],[[["gdtentryflags",3]],[["option",4,["ordering"]],["ordering",4]]],[[["segmentselector",3]]],[[["gdtentryflags",3]]],null,null,null,null,null,[[["segmentselector",3],["bool",15]]],[[["gdtentryflags",3],["bool",15]]],[[["u64",15]]],[[["u32",15]]],[[["u32",15]]],[[]],null,[[["segmentselector",3]],["segmentselector",3]],[[["gdtentryflags",3]],["gdtentryflags",3]],[[["segmentselector",3]]],[[["gdtentryflags",3]]],[[]],[[]],[[]],[[]],[[]],[[["segmentselector",3]]],[[["gdtentryflags",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["piccontroller",3]],[[],["apiccontroller",3]],[[],["interruptcontroller",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[["u8",15]],["u16",15]],[[]],null,[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["idtflags",3]],[[["idtflags",3]],["idtflags",3]],[[["idtflags",3]]],[[["idtflags",3]],["idtflags",3]],[[["idtflags",3]]],[[],["u8",15]],null,[[["idtflags",3]],["idtflags",3]],[[["idtflags",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["idtflags",3]],[[],["idtentry",3]],[[],["scratchregisters",3]],[[],["preservedregisters",3]],[[],["iretregisters",3]],[[],["interruptstack",3]],[[],["interrupterrorstack",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["idtflags",3]],["ordering",4]],null,[[["idtflags",3]],["bool",15]],null,[[],["idtflags",3]],[[["idtflags",3]],["bool",15]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u8",15]],[["option",4,["idtflags"]],["idtflags",3]]],[[["u8",15]],["idtflags",3]],[[["u8",15]],["idtflags",3]],[[["intoiterator",8]],["idtflags",3]],null,[[],["u64",15]],[[],["u64",15]],[[]],null,[[]],[[["idtflags",3]]],[[["idtflags",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[["idtdescriptor",3]]],[[["idtflags",3]],["bool",15]],[[["u16",15],["u64",15]]],[[],["idtflags",3]],null,null,null,null,[[["idtflags",3]],[["option",4,["ordering"]],["ordering",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["idtflags",3]]],null,null,null,null,null,null,[[["bool",15],["idtflags",3]]],[[["idtflags",3]]],[[]],[[["u16",15],["usize",15]]],null,null,null,[[["idtflags",3]],["idtflags",3]],[[["idtflags",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["idtflags",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[["archtask",3],["archtask",3]]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[],["context",3]],[[["vm",3],["elffile",3]],[["result",4,["maptoerror"]],["maptoerror",4,["size4kib"]]]],[[],[["maptoerror",4,["size4kib"]],["result",4,["maptoerror"]]]],[[]],[[]],[[]],null,[[],["virtaddr",3]],[[]],[[]],[[]],null,[[]],[[["virtaddr",3],["bool",15]]],null,null,null,null,null,null,null,null,null,null,[[["virtaddr",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[],["hbaenclosurectrl",3]],[[],["hbacapabilities2",3]],[[],["hbabohc",3]],[[],["hbacapabilities",3]],[[],["hbahostcont",3]],[[],["hbaportis",3]],[[],["hbaportie",3]],[[],["hbaportcmd",3]],[[],["hbacmdheaderflags",3]],[[["usize",15]]],null,[[["hbaenclosurectrl",3]],["hbaenclosurectrl",3]],[[["hbacapabilities2",3]],["hbacapabilities2",3]],[[["hbabohc",3]],["hbabohc",3]],[[["hbacapabilities",3]],["hbacapabilities",3]],[[["hbahostcont",3]],["hbahostcont",3]],[[["hbaportis",3]],["hbaportis",3]],[[["hbaportie",3]],["hbaportie",3]],[[["hbaportcmd",3]],["hbaportcmd",3]],[[["hbacmdheaderflags",3]],["hbacmdheaderflags",3]],[[["hbaenclosurectrl",3]]],[[["hbacapabilities2",3]]],[[["hbabohc",3]]],[[["hbacapabilities",3]]],[[["hbahostcont",3]]],[[["hbaportis",3]]],[[["hbaportie",3]]],[[["hbaportcmd",3]]],[[["hbacmdheaderflags",3]]],[[["hbaenclosurectrl",3]],["hbaenclosurectrl",3]],[[["hbacapabilities2",3]],["hbacapabilities2",3]],[[["hbabohc",3]],["hbabohc",3]],[[["hbacapabilities",3]],["hbacapabilities",3]],[[["hbahostcont",3]],["hbahostcont",3]],[[["hbaportis",3]],["hbaportis",3]],[[["hbaportie",3]],["hbaportie",3]],[[["hbaportcmd",3]],["hbaportcmd",3]],[[["hbacmdheaderflags",3]],["hbacmdheaderflags",3]],[[["hbaenclosurectrl",3]]],[[["hbacapabilities2",3]]],[[["hbabohc",3]]],[[["hbacapabilities",3]]],[[["hbahostcont",3]]],[[["hbaportis",3]]],[[["hbaportie",3]]],[[["hbaportcmd",3]]],[[["hbacmdheaderflags",3]]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u16",15]],null,null,null,null,null,null,null,null,null,[[["hbaenclosurectrl",3]],["hbaenclosurectrl",3]],[[["hbacapabilities2",3]],["hbacapabilities2",3]],[[["hbabohc",3]],["hbabohc",3]],[[["hbacapabilities",3]],["hbacapabilities",3]],[[["hbahostcont",3]],["hbahostcont",3]],[[["hbaportis",3]],["hbaportis",3]],[[["hbaportie",3]],["hbaportie",3]],[[["hbaportcmd",3]],["hbaportcmd",3]],[[["hbacmdheaderflags",3]],["hbacmdheaderflags",3]],[[["hbaenclosurectrl",3]]],[[["hbacapabilities2",3]]],[[["hbabohc",3]]],[[["hbacapabilities",3]]],[[["hbahostcont",3]]],[[["hbaportis",3]]],[[["hbaportie",3]]],[[["hbaportcmd",3]]],[[["hbacmdheaderflags",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[],["fisregh2d",3]],null,null,[[],["hbaenclosurectrl",3]],[[],["hbacapabilities2",3]],[[],["hbabohc",3]],[[],["hbacapabilities",3]],[[],["hbahostcont",3]],[[],["hbaportis",3]],[[],["hbaportie",3]],[[],["hbaportcmd",3]],[[],["hbacmdheaderflags",3]],[[],["fistype",4]],[[],["hbasatastatus",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["usize",15]],["hbacmdheader",3]],null,[[["hbaenclosurectrl",3]],["ordering",4]],[[["hbacapabilities2",3]],["ordering",4]],[[["hbabohc",3]],["ordering",4]],[[["hbacapabilities",3]],["ordering",4]],[[["hbahostcont",3]],["ordering",4]],[[["hbaportis",3]],["ordering",4]],[[["hbaportie",3]],["ordering",4]],[[["hbaportcmd",3]],["ordering",4]],[[["hbacmdheaderflags",3]],["ordering",4]],null,null,[[["hbaenclosurectrl",3]],["bool",15]],[[["hbacapabilities2",3]],["bool",15]],[[["hbabohc",3]],["bool",15]],[[["hbacapabilities",3]],["bool",15]],[[["hbahostcont",3]],["bool",15]],[[["hbaportis",3]],["bool",15]],[[["hbaportie",3]],["bool",15]],[[["hbaportcmd",3]],["bool",15]],[[["hbacmdheaderflags",3]],["bool",15]],null,[[]],null,null,null,null,null,null,[[],["hbaportdd",4]],null,[[],["hbaenclosurectrl",3]],[[],["hbacapabilities2",3]],[[],["hbabohc",3]],[[],["hbacapabilities",3]],[[],["hbahostcont",3]],[[],["hbaportis",3]],[[],["hbaportie",3]],[[],["hbaportcmd",3]],[[],["hbacmdheaderflags",3]],[[["pciheader",3]]],null,null,[[["hbaenclosurectrl",3]],["bool",15]],[[["hbacapabilities2",3]],["bool",15]],[[["hbabohc",3]],["bool",15]],[[["hbacapabilities",3]],["bool",15]],[[["hbahostcont",3]],["bool",15]],[[["hbaportis",3]],["bool",15]],[[["hbaportie",3]],["bool",15]],[[["hbaportcmd",3]],["bool",15]],[[["hbacmdheaderflags",3]],["bool",15]],[[["atacommand",4]],["bool",15]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],null,null,null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]],[["hbaenclosurectrl",3],["option",4,["hbaenclosurectrl"]]]],[[["u32",15]],[["hbacapabilities2",3],["option",4,["hbacapabilities2"]]]],[[["u32",15]],[["hbabohc",3],["option",4,["hbabohc"]]]],[[["u32",15]],[["option",4,["hbacapabilities"]],["hbacapabilities",3]]],[[["u32",15]],[["hbahostcont",3],["option",4,["hbahostcont"]]]],[[["u32",15]],[["hbaportis",3],["option",4,["hbaportis"]]]],[[["u32",15]],[["option",4,["hbaportie"]],["hbaportie",3]]],[[["u32",15]],[["option",4,["hbaportcmd"]],["hbaportcmd",3]]],[[["u16",15]],[["hbacmdheaderflags",3],["option",4,["hbacmdheaderflags"]]]],[[["u32",15]],["hbaenclosurectrl",3]],[[["u32",15]],["hbacapabilities2",3]],[[["u32",15]],["hbabohc",3]],[[["u32",15]],["hbacapabilities",3]],[[["u32",15]],["hbahostcont",3]],[[["u32",15]],["hbaportis",3]],[[["u32",15]],["hbaportie",3]],[[["u32",15]],["hbaportcmd",3]],[[["u16",15]],["hbacmdheaderflags",3]],[[["u32",15]],["hbaenclosurectrl",3]],[[["u32",15]],["hbacapabilities2",3]],[[["u32",15]],["hbabohc",3]],[[["u32",15]],["hbacapabilities",3]],[[["u32",15]],["hbahostcont",3]],[[["u32",15]],["hbaportis",3]],[[["u32",15]],["hbaportie",3]],[[["u32",15]],["hbaportcmd",3]],[[["u16",15]],["hbacmdheaderflags",3]],[[["intoiterator",8]],["hbaenclosurectrl",3]],[[["intoiterator",8]],["hbacapabilities2",3]],[[["intoiterator",8]],["hbabohc",3]],[[["intoiterator",8]],["hbacapabilities",3]],[[["intoiterator",8]],["hbahostcont",3]],[[["intoiterator",8]],["hbaportis",3]],[[["intoiterator",8]],["hbaportie",3]],[[["intoiterator",8]],["hbaportcmd",3]],[[["intoiterator",8]],["hbacmdheaderflags",3]],[[],["arc",3]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],null,[[["vendor",4],["devicetype",4]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["hbamemory",3]],[[],["hbaport",3]],null,null,null,null,null,null,null,[[["hbaenclosurectrl",3]]],[[["hbacapabilities2",3]]],[[["hbabohc",3]]],[[["hbacapabilities",3]]],[[["hbahostcont",3]]],[[["hbaportis",3]]],[[["hbaportie",3]]],[[["hbaportcmd",3]]],[[["hbacmdheaderflags",3]]],[[],["hbaportipm",4]],null,[[["hbaenclosurectrl",3]],["bool",15]],[[["hbacapabilities2",3]],["bool",15]],[[["hbabohc",3]],["bool",15]],[[["hbacapabilities",3]],["bool",15]],[[["hbahostcont",3]],["bool",15]],[[["hbaportis",3]],["bool",15]],[[["hbaportie",3]],["bool",15]],[[["hbaportcmd",3]],["bool",15]],[[["hbacmdheaderflags",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["atacommand",4]],null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,[[["hbaenclosurectrl",3]],["bool",15]],[[["hbacapabilities2",3]],["bool",15]],[[["hbabohc",3]],["bool",15]],[[["hbacapabilities",3]],["bool",15]],[[["hbahostcont",3]],["bool",15]],[[["hbaportis",3]],["bool",15]],[[["hbaportie",3]],["bool",15]],[[["hbaportcmd",3]],["bool",15]],[[["hbacmdheaderflags",3]],["bool",15]],[[["usize",15]]],[[["virtaddr",3]]],[[],["hbaenclosurectrl",3]],[[],["hbacapabilities2",3]],[[],["hbabohc",3]],[[],["hbacapabilities",3]],[[],["hbahostcont",3]],[[],["hbaportis",3]],[[],["hbaportie",3]],[[],["hbaportcmd",3]],[[],["hbacmdheaderflags",3]],[[["hbaenclosurectrl",3]],[["option",4,["ordering"]],["ordering",4]]],[[["hbacapabilities2",3]],[["option",4,["ordering"]],["ordering",4]]],[[["hbabohc",3]],[["option",4,["ordering"]],["ordering",4]]],[[["hbacapabilities",3]],[["option",4,["ordering"]],["ordering",4]]],[[["hbahostcont",3]],[["option",4,["ordering"]],["ordering",4]]],[[["hbaportis",3]],[["option",4,["ordering"]],["ordering",4]]],[[["hbaportie",3]],[["option",4,["ordering"]],["ordering",4]]],[[["hbaportcmd",3]],[["option",4,["ordering"]],["ordering",4]]],[[["hbacmdheaderflags",3]],[["option",4,["ordering"]],["ordering",4]]],[[["usize",15]],["hbaport",3]],null,null,null,null,[[["usize",15]],["hbaprdtentry",3]],null,[[["usize",15]],["bool",15]],[[["usize",15]],[["usize",15],["option",4,["usize"]]]],[[["hbaenclosurectrl",3]]],[[["hbacapabilities2",3]]],[[["hbabohc",3]]],[[["hbacapabilities",3]]],[[["hbahostcont",3]]],[[["hbaportis",3]]],[[["hbaportie",3]]],[[["hbaportcmd",3]]],[[["hbacmdheaderflags",3]]],null,[[["usize",15],["atacommand",4]]],[[["dmarequest",3],["usize",15],["arc",3,["dmarequest"]]],["usize",15]],[[["dmarequest",3],["arc",3,["dmarequest"]]],[["usize",15],["option",4,["usize"]]]],null,null,null,null,[[["bool",15],["hbaenclosurectrl",3]]],[[["hbacapabilities2",3],["bool",15]]],[[["hbabohc",3],["bool",15]]],[[["bool",15],["hbacapabilities",3]]],[[["hbahostcont",3],["bool",15]]],[[["hbaportis",3],["bool",15]]],[[["bool",15],["hbaportie",3]]],[[["bool",15],["hbaportcmd",3]]],[[["hbacmdheaderflags",3],["bool",15]]],null,null,null,[[]],[[["pciheader",3],["offsetpagetable",3]]],null,[[]],[[["pciheader",3]],[["result",4,["maptoerror"]],["maptoerror",4,["size4kib"]]]],[[]],[[]],[[["hbaenclosurectrl",3]],["hbaenclosurectrl",3]],[[["hbacapabilities2",3]],["hbacapabilities2",3]],[[["hbabohc",3]],["hbabohc",3]],[[["hbacapabilities",3]],["hbacapabilities",3]],[[["hbahostcont",3]],["hbahostcont",3]],[[["hbaportis",3]],["hbaportis",3]],[[["hbaportie",3]],["hbaportie",3]],[[["hbaportcmd",3]],["hbaportcmd",3]],[[["hbacmdheaderflags",3]],["hbacmdheaderflags",3]],[[["hbaenclosurectrl",3]]],[[["hbacapabilities2",3]]],[[["hbabohc",3]]],[[["hbacapabilities",3]]],[[["hbahostcont",3]]],[[["hbaportis",3]]],[[["hbaportie",3]]],[[["hbaportcmd",3]]],[[["hbacmdheaderflags",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["hbaenclosurectrl",3]]],[[["hbacapabilities2",3]]],[[["hbabohc",3]]],[[["hbacapabilities",3]]],[[["hbahostcont",3]]],[[["hbaportis",3]]],[[["hbaportie",3]]],[[["hbaportcmd",3]]],[[["hbacmdheaderflags",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["configflags",3]],[[["configflags",3]],["configflags",3]],[[["configflags",3]]],[[["configflags",3]],["configflags",3]],[[["configflags",3]]],[[],["u8",15]],null,[[["configflags",3]],["configflags",3]],[[["configflags",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["configflags",3]],[[],["keycode",4]],[[]],[[]],[[["configflags",3]],["ordering",4]],[[["configflags",3]],["bool",15]],[[],["configflags",3]],[[["configflags",3]],["bool",15]],[[["keycode",4]],["bool",15]],[[["intoiterator",8]]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["u8",15]],[["configflags",3],["option",4,["configflags"]]]],[[["u8",15]],["configflags",3]],[[["u8",15]],["configflags",3]],[[["intoiterator",8]],["configflags",3]],[[],["u64",15]],[[],["u64",15]],[[["u8",15]]],[[]],[[["configflags",3]]],[[["configflags",3]],["bool",15]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["configflags",3]],["bool",15]],[[]],[[],["configflags",3]],[[["keycode",4],["bool",15]]],[[["configflags",3]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[["keyboardlistener",8]]],null,[[["configflags",3]]],[[["configflags",3],["bool",15]]],null,[[["configflags",3]],["configflags",3]],[[["configflags",3]]],[[]],[[]],[[["configflags",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["mouseflags",3]],[[["mouseflags",3]],["mouseflags",3]],[[["mouseflags",3]]],[[["mouseflags",3]],["mouseflags",3]],[[["mouseflags",3]]],[[],["u8",15]],null,[[["mouseflags",3]],["mouseflags",3]],[[["mouseflags",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["mouseflags",3]],[[]],[[["mouseflags",3]],["ordering",4]],[[["mouseflags",3]],["bool",15]],null,[[],["mouseflags",3]],[[],["mutex",3]],[[]],[[],["mouseflags",3]],[[["mouseflags",3]],["bool",15]],[[["intoiterator",8]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["u8",15]],[["mouseflags",3],["option",4,["mouseflags"]]]],[[["u8",15]],["mouseflags",3]],[[["u8",15]],["mouseflags",3]],[[["intoiterator",8]],["mouseflags",3]],[[],["u64",15]],[[],["u64",15]],[[["u8",15]]],[[]],[[]],[[]],[[["mouseflags",3]]],[[["mouseflags",3]],["bool",15]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[["u8",15]]],[[["mouseflags",3]],["bool",15]],[[]],[[]],[[],["mouseflags",3]],[[["mouseflags",3]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[["u8",15]]],[[["mouseflags",3]]],[[["mouseflags",3],["bool",15]]],[[["u8",15]],["i16",15]],null,[[["mouseflags",3]],["mouseflags",3]],[[["mouseflags",3]]],[[]],[[["mouseflags",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u8",15]],[[],["bar",4]],[[]],[[],["u8",15]],[[]],[[["devicetype",4]],["bool",15]],[[["vendor",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u8",15]],[[["u8",15]],[["option",4,["bar"]],["bar",4]]],[[],["devicetype",4]],[[],["u32",15]],[[],["vendor",4]],[[],["u32",15]],null,[[["vendor",4],["devicetype",4]],["bool",15]],[[],["bool",15]],[[["offsetpagetable",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[["vendor",4]],["bool",15]],[[["u8",15]]],[[]],[[["u32",15]]],[[["u32",15]]],[[]],[[["u32",15]],["u32",15]],[[["arc",3,["pcidevicehandle"]],["pcidevicehandle",8]]],[[["pciheader",3],["offsetpagetable",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["u32",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["arc",3]],null,[[],["usize",15]],[[],["str",15]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[],[["arc",3,["inodeinterface"]],["inodeinterface",8]]],[[]],[[]],[[]],[[]],[[],["bool",15]],null,null,null,[[]],[[],["arc",3]],[[["keycode",4],["bool",15]]],null,[[["usize",15]],[["usize",15],["filesystemerror",4],["result",4,["usize","filesystemerror"]]]],null,null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["usize",15]],[["usize",15],["filesystemerror",4],["result",4,["usize","filesystemerror"]]]],null,null,null,null,null,null,null,null,null,null,null,[[],["interruptenable",3]],[[],["linestatus",3]],[[["interruptenable",3]],["interruptenable",3]],[[["linestatus",3]],["linestatus",3]],[[["interruptenable",3]]],[[["linestatus",3]]],[[["interruptenable",3]],["interruptenable",3]],[[["linestatus",3]],["linestatus",3]],[[["interruptenable",3]]],[[["linestatus",3]]],[[],["u8",15]],[[],["u8",15]],null,null,[[["interruptenable",3]],["interruptenable",3]],[[["linestatus",3]],["linestatus",3]],[[["interruptenable",3]]],[[["linestatus",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["interruptenable",3]],[[],["linestatus",3]],[[]],[[]],[[["interruptenable",3]],["ordering",4]],[[["linestatus",3]],["ordering",4]],[[["interruptenable",3]],["bool",15]],[[["linestatus",3]],["bool",15]],[[],["interruptenable",3]],[[],["linestatus",3]],[[["interruptenable",3]],["bool",15]],[[["linestatus",3]],["bool",15]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["u8",15]],[["option",4,["interruptenable"]],["interruptenable",3]]],[[["u8",15]],[["linestatus",3],["option",4,["linestatus"]]]],[[["u8",15]],["interruptenable",3]],[[["u8",15]],["linestatus",3]],[[["u8",15]],["interruptenable",3]],[[["u8",15]],["linestatus",3]],[[["intoiterator",8]],["interruptenable",3]],[[["intoiterator",8]],["linestatus",3]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[["interruptenable",3]]],[[["linestatus",3]]],[[["interruptenable",3]],["bool",15]],[[["linestatus",3]],["bool",15]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["linestatus",3]],[[["interruptenable",3]],["bool",15]],[[["linestatus",3]],["bool",15]],[[["u16",15]]],[[],["interruptenable",3]],[[],["linestatus",3]],[[["interruptenable",3]],[["option",4,["ordering"]],["ordering",4]]],[[["linestatus",3]],[["option",4,["ordering"]],["ordering",4]]],[[["interruptenable",3]]],[[["linestatus",3]]],[[["u8",15]]],null,null,[[["bool",15],["interruptenable",3]]],[[["linestatus",3],["bool",15]]],[[["interruptenable",3]],["interruptenable",3]],[[["linestatus",3]],["linestatus",3]],[[["interruptenable",3]]],[[["linestatus",3]]],[[]],[[]],[[["interruptenable",3]]],[[["linestatus",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["linestatus",3]]],[[["str",15]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["mountpoint",3]],[[]],[[]],[[],["mountmanager",3]],null,null,null,[[["cacheitem",3,["direntry"]],["arc",3,["cacheitem"]]],[["mountpoint",3],["result",4,["mountpoint","filesystemerror"]],["filesystemerror",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],[["result",4,["filesystemerror"]],["filesystemerror",4]]],[[]],null,[[]],[[]],[[]],[[]],[[["path",3]],[["arc",3,["cacheitem"]],["result",4,["arc","filesystemerror"]],["filesystemerror",4]]],[[["cacheitem",3,["direntry"]],["arc",3,["cacheitem"]],["arc",3,["filesystem"]],["filesystem",8]],[["result",4,["filesystemerror"]],["filesystemerror",4]]],[[]],[[["str",15]]],null,null,[[],["arc",3]],[[],[["cacheitem",3,["direntry"]],["arc",3,["cacheitem"]]]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[],["arc",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4,["arc"]],["arc",3,["cacheitem"]]]],[[],["arc",3]],null,[[]],[[],["arc",3]],[[]],[[]],[[]],[[]],[[],[["cacheitem",3],["arc",3,["cacheitem"]]]],[[],[["cacheitem",3],["arc",3,["cacheitem"]]]],[[["weak",3]],["arc",3]],[[["usize",15]],["arc",3]],[[["inodeinterface",8],["arc",3,["inodeinterface"]]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["arc",3]],[[],["usize",15]],[[],["usize",15]],[[],["str",15]],[[],["str",15]],[[]],[[]],[[]],[[]],[[],[["result",4,["filesystemerror"]],["filesystemerror",4]]],[[]],[[],[["inodeinterface",8],["arc",3,["inodeinterface"]]]],[[],[["inodeinterface",8],["arc",3,["inodeinterface"]]]],[[["arc",3,["device"]],["device",8]],[["result",4,["filesystemerror"]],["filesystemerror",4]]],[[]],[[]],[[]],[[]],[[["usize",15]],[["result",4,["arc","filesystemerror"]],["arc",3],["filesystemerror",4]]],[[],["arc",3]],[[],["arc",3]],[[["usize",15]],[["usize",15],["filesystemerror",4],["result",4,["usize","filesystemerror"]]]],[[["usize",15]],[["usize",15],["filesystemerror",4],["result",4,["usize","filesystemerror"]]]],[[],[["cacheitem",3,["direntry"]],["arc",3,["cacheitem"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["usize",15]],[["usize",15],["filesystemerror",4],["result",4,["usize","filesystemerror"]]]],[[["usize",15]],[["usize",15],["filesystemerror",4],["result",4,["usize","filesystemerror"]]]],null,null,null,[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[["usize",15]],[["arc",3,["filehandle"]],["option",4,["arc"]]]],null,[[]],[[]],[[["usize",15],["cacheitem",3,["direntry"]],["arc",3,["cacheitem"]],["openflags",3]]],[[]],null,[[["cacheitem",3,["direntry"]],["arc",3,["cacheitem"]],["openflags",3]],[["usize",15],["filesystemerror",4],["result",4,["usize","filesystemerror"]]]],[[],[["usize",15],["filesystemerror",4],["result",4,["usize","filesystemerror"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],[["usize",15],["filesystemerror",4],["result",4,["usize","filesystemerror"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["metadata",3]],[[],["filetype",4]],[[]],[[]],null,[[]],[[]],[[["filetype",4]],["bool",15]],[[["cacheitem",3,["direntry"]],["arc",3,["cacheitem"]],["string",3]],[["arc",3,["cacheitem"]],["option",4,["arc"]]]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],null,[[],[["cacheitem",3,["cachedinode"]],["arc",3,["cacheitem"]]]],null,[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["cacheitem",3,["direntry"]],["arc",3,["cacheitem"]],["str",15]],[["arc",3,["cacheitem"]],["result",4,["arc","filesystemerror"]],["filesystemerror",4]]],[[["usize",15],["str",15]],[["result",4,["arc","filesystemerror"]],["filesystemerror",4],["arc",3,["cacheitem"]]]],[[],[["metadata",3],["filesystemerror",4],["result",4,["metadata","filesystemerror"]]]],[[["str",15]],[["result",4,["arc","filesystemerror"]],["filesystemerror",4],["arc",3,["cacheitem"]]]],null,[[["cacheitem",3,["direntry"]],["arc",3,["cacheitem"]],["cacheitem",3,["cachedinode"]],["arc",3,["cacheitem"]],["string",3]],[["cacheitem",3,["direntry"]],["arc",3,["cacheitem"]]]],[[["string",3],["cacheitem",3,["cachedinode"]],["arc",3,["cacheitem"]]],[["cacheitem",3,["direntry"]],["arc",3,["cacheitem"]]]],[[["openflags",3]],[["result",4,["filesystemerror"]],["filesystemerror",4]]],null,[[["usize",15]],[["usize",15],["filesystemerror",4],["result",4,["usize","filesystemerror"]]]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["weak",3,["filesystem"]],["option",4,["weak"]]]],[[["usize",15]],[["usize",15],["filesystemerror",4],["result",4,["usize","filesystemerror"]]]],null,null,null,null,null,null,[[["filetype",4],["filecontents",4]],[["lockedraminode",3],["arc",3,["lockedraminode"]]]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["raminode",3]],null,null,[[]],[[]],[[]],null,[[["filetype",4],["weak",3],["weak",3]]],[[]],[[]],[[]],[[["cacheitem",3,["direntry"]],["arc",3,["cacheitem"]],["str",15]],[["arc",3,["cacheitem"]],["result",4,["arc","filesystemerror"]],["filesystemerror",4]]],[[["usize",15],["str",15]],[["result",4,["arc","filesystemerror"]],["filesystemerror",4],["arc",3,["cacheitem"]]]],[[["filetype",4],["str",15],["filecontents",4]],[["result",4,["arc","filesystemerror"]],["filesystemerror",4],["arc",3,["cacheitem"]]]],[[],[["metadata",3],["filesystemerror",4],["result",4,["metadata","filesystemerror"]]]],[[["str",15]],[["result",4,["arc","filesystemerror"]],["filesystemerror",4],["arc",3,["cacheitem"]]]],[[["raminode",3]]],[[],["arc",3]],null,null,null,[[["usize",15]],[["usize",15],["filesystemerror",4],["result",4,["usize","filesystemerror"]]]],[[],[["cacheitem",3,["direntry"]],["arc",3,["cacheitem"]]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["weak",3,["filesystem"]],["option",4,["weak"]]]],[[["usize",15]],[["usize",15],["filesystemerror",4],["result",4,["usize","filesystemerror"]]]],null,null,null,null,null,[[]],[[]],[[["metadata",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[["record",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,[[]],[[]],[[],["physframe",3]],null,[[]],[[]],[[],[["maptoerror",4,["size4kib"]],["result",4,["maptoerror"]]]],[[],["offsetpagetable",3]],[[],["pagetable",3]],null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,[[["layout",3]]],[[["layout",3]]],[[["layout",3]],[["nonnull",3,["u8"]],["result",4,["nonnull"]]]],[[]],[[]],[[["layout",3]]],[[]],[[["usize",15]]],[[["offsetpagetable",3]],[["result",4,["maptoerror"]],["maptoerror",4,["size4kib"]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,[[],["pagetable",3]],null,[[],["pagefaulterrorcode",3]],[[["pagefaulterrorcode",3]],["pagefaulterrorcode",3]],[[["pagefaulterrorcode",3]]],[[["pagefaulterrorcode",3]],["pagefaulterrorcode",3]],[[["pagefaulterrorcode",3]]],[[],["u64",15]],null,[[["pagefaulterrorcode",3]],["pagefaulterrorcode",3]],[[["pagefaulterrorcode",3]]],[[]],[[]],[[],["pagefaulterrorcode",3]],[[]],[[["pagefaulterrorcode",3]],["ordering",4]],[[["pagefaulterrorcode",3]],["bool",15]],[[],["pagefaulterrorcode",3]],[[["pagefaulterrorcode",3]],["bool",15]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[]],[[["u64",15]],[["option",4,["pagefaulterrorcode"]],["pagefaulterrorcode",3]]],[[["u64",15]],["pagefaulterrorcode",3]],[[["u64",15]],["pagefaulterrorcode",3]],[[["intoiterator",8]],["pagefaulterrorcode",3]],[[],["u64",15]],[[],["u64",15]],[[]],[[["stivalememorymaptag",3]],[["maptoerror",4,["size4kib"]],["offsetpagetable",3],["result",4,["offsetpagetable","maptoerror"]]]],[[["pagefaulterrorcode",3]]],[[["pagefaulterrorcode",3]],["bool",15]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[["pagefaulterrorcode",3]],["bool",15]],[[],["pagefaulterrorcode",3]],null,null,[[["pagefaulterrorcode",3]],[["option",4,["ordering"]],["ordering",4]]],[[["pagefaulterrorcode",3]]],[[["bool",15],["pagefaulterrorcode",3]]],[[["pagefaulterrorcode",3]],["pagefaulterrorcode",3]],[[["pagefaulterrorcode",3]]],[[]],[[["pagefaulterrorcode",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,[[["u64",15]]],[[["usize",15]]],[[["u64",15]]],[[["usize",15]]],[[["usize",15]]],[[["u64",15]]],[[["usize",15]]],[[["u64",15]]],[[["u64",15]],["u64",15]],[[]],[[]],[[["u64",15]],["u64",15]],[[]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],[[["usize",15]],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["virtaddr",3]],[[],["physaddr",3]],[[]],[[]],[[["virtaddr",3]],["ordering",4]],[[["physaddr",3]],["ordering",4]],[[["virtaddr",3]],["bool",15]],[[["physaddr",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["usize",15]],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["virtaddr",3]],["bool",15]],[[["physaddr",3]],["bool",15]],[[["u64",15]],["virtaddr",3]],[[["u64",15]],["physaddr",3]],[[],["pagetableindex",3]],[[],["pagetableindex",3]],[[],["pagetableindex",3]],[[],["pagetableindex",3]],[[],["pagetableindex",3]],[[],["pageoffset",3]],[[["virtaddr",3]],[["option",4,["ordering"]],["ordering",4]]],[[["physaddr",3]],[["option",4,["ordering"]],["ordering",4]]],[[],[["usize",15],["option",4,["usize"]]]],[[["virtaddr",3]]],[[["usize",15]]],[[["u64",15]]],[[["usize",15]]],[[["physaddr",3]]],[[["u64",15]]],[[["u64",15]]],[[["usize",15]]],[[["u64",15]]],[[["usize",15]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["virtaddr",3]],null,null,null,[[],[["option",4,["physframe"]],["physframe",3,["size4kib"]]]],[[],[["physframe",3],["option",4,["physframe"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["physframe",3]],[["stivalememorymapentrytype",4],["option",4,["stivalememorymapentrytype"]]]],[[["physframe",3]],[["stivalememorymapentrytype",4],["option",4,["stivalememorymapentrytype"]]]],[[["stivalememorymaptag",3]]],[[]],[[]],null,[[["stivalememorymaptag",3]]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["physframe",3],["option",4,["physframe"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["pagetableentry",3],["pagetableflags",3]],[["pagetable",3],["pagetablecreateerror",4],["result",4,["pagetable","pagetablecreateerror"]]]],[[["physframe",3]]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],[["addressspace",3],["maptoerror",4,["size4kib"]],["result",4,["addressspace","maptoerror"]]]],[[["physframe",3]]],[[["physframe",3]]],[[]],[[]],[[]],[[["pagetablecreateerror",4]]],[[["pagetablecreateerror",4]]],[[]],[[["pagetablecreateerror",4]]],[[["pagetablewalkerror",4]]],[[]],[[]],[[["pagetablewalkerror",4]]],[[["pagetablewalkerror",4]]],[[]],[[]],[[]],[[]],[[["frameerror",4]]],[[]],[[]],[[]],[[["physframe",3],["pagetableflags",3]],[["mapperflush",3],["maptoerror",4],["result",4,["mapperflush","maptoerror"]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["physframe",3],["pagetableflags",3],["page",3]],[["mapperflush",3],["maptoerror",4],["result",4,["mapperflush","maptoerror"]]]],[[["pagetableflags",3],["physframe",3,["size2mib"]],["size2mib",4],["page",3,["size2mib"]]],[["mapperflush",3,["size2mib"]],["maptoerror",4,["size2mib"]],["result",4,["mapperflush","maptoerror"]]]],[[["pagetableflags",3],["page",3,["size4kib"]],["size4kib",4],["physframe",3,["size4kib"]]],[["result",4,["mapperflush","maptoerror"]],["mapperflush",3,["size4kib"]],["maptoerror",4,["size4kib"]]]],[[["pagetableflags",3],["page",3],["physframe",3]],[["mapperflush",3],["maptoerror",4],["result",4,["mapperflush","maptoerror"]]]],[[["pagetableflags",3],["page",3,["size4kib"]],["size4kib",4],["physframe",3,["size4kib"]]],[["result",4,["mapperflush","maptoerror"]],["mapperflush",3,["size4kib"]],["maptoerror",4,["size4kib"]]]],[[["pagetableflags",3],["physframe",3,["size2mib"]],["size2mib",4],["page",3,["size2mib"]]],[["mapperflush",3,["size2mib"]],["maptoerror",4,["size2mib"]],["result",4,["mapperflush","maptoerror"]]]],[[["pagetableflags",3],["page",3,["size4kib"]],["size4kib",4],["physframe",3,["size4kib"]]],[["result",4,["mapperflush","maptoerror"]],["mapperflush",3,["size4kib"]],["maptoerror",4,["size4kib"]]]],[[["pagetableflags",3],["physframe",3,["size2mib"]],["size2mib",4],["page",3,["size2mib"]]],[["mapperflush",3,["size2mib"]],["maptoerror",4,["size2mib"]],["result",4,["mapperflush","maptoerror"]]]],[[["page",3]]],[[["pagetable",3]]],[[]],[[["virtaddr",3],["pagetable",3]]],[[["pagetableentry",3]],[["result",4,["pagetable","pagetablewalkerror"]],["pagetable",3],["pagetablewalkerror",4]]],[[["pagetableentry",3]],[["pagetable",3],["pagetablewalkerror",4],["result",4,["pagetable","pagetablewalkerror"]]]],null,null,null,null,[[],["u64",15]],[[],["physaddr",3]],[[["virtaddr",3]],["translateresult",4]],[[["virtaddr",3]],["translateresult",4]],[[["virtaddr",3]],["translateresult",4]],[[["virtaddr",3]],[["option",4,["physaddr"]],["physaddr",3]]],[[["page",3]],[["result",4,["physframe","translateerror"]],["physframe",3],["translateerror",4]]],[[["page",3,["size4kib"]],["size4kib",4]],[["result",4,["physframe","translateerror"]],["physframe",3,["size4kib"]],["translateerror",4]]],[[["size2mib",4],["page",3,["size2mib"]]],[["translateerror",4],["physframe",3,["size2mib"]],["result",4,["physframe","translateerror"]]]],[[["page",3,["size4kib"]],["size4kib",4]],[["result",4,["physframe","translateerror"]],["physframe",3,["size4kib"]],["translateerror",4]]],[[["size2mib",4],["page",3,["size2mib"]]],[["translateerror",4],["physframe",3,["size2mib"]],["result",4,["physframe","translateerror"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["page",3]],[["result",4,["unmaperror"]],["unmaperror",4]]],[[["size2mib",4],["page",3,["size2mib"]]],[["result",4,["unmaperror"]],["unmaperror",4]]],[[["page",3,["size4kib"]],["size4kib",4]],[["unmaperror",4],["result",4,["unmaperror"]]]],[[["page",3,["size4kib"]],["size4kib",4]],[["unmaperror",4],["result",4,["unmaperror"]]]],[[["size2mib",4],["page",3,["size2mib"]]],[["result",4,["unmaperror"]],["unmaperror",4]]],[[["virtaddr",3],["range",3,["virtaddr"]],["u64",15]],[["result",4,["unmaperror"]],["unmaperror",4]]],[[["pagetableflags",3],["page",3]],[["mapperflush",3],["flagupdateerror",4],["result",4,["mapperflush","flagupdateerror"]]]],[[["page",3,["size4kib"]],["size4kib",4],["pagetableflags",3]],[["flagupdateerror",4],["result",4,["mapperflush","flagupdateerror"]],["mapperflush",3,["size4kib"]]]],[[["pagetableflags",3],["size2mib",4],["page",3,["size2mib"]]],[["mapperflush",3,["size2mib"]],["flagupdateerror",4],["result",4,["mapperflush","flagupdateerror"]]]],[[["pagetableflags",3],["size2mib",4],["page",3,["size2mib"]]],[["mapperflush",3,["size2mib"]],["flagupdateerror",4],["result",4,["mapperflush","flagupdateerror"]]]],[[["page",3,["size4kib"]],["size4kib",4],["pagetableflags",3]],[["flagupdateerror",4],["result",4,["mapperflush","flagupdateerror"]],["mapperflush",3,["size4kib"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["size4kib",4]],[[],["size2mib",4]],[[],["size1gib",4]],[[],["page",3]],[[],["pagerange",3]],[[],["pagerangeinclusive",3]],[[],["physframe",3]],[[],["physframerange",3]],[[],["physframerangeinclusive",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["size4kib",4]],["ordering",4]],[[["size2mib",4]],["ordering",4]],[[["size1gib",4]],["ordering",4]],[[["page",3]],["ordering",4]],[[["physframe",3]],["ordering",4]],[[["virtaddr",3]]],[[["physaddr",3]]],null,null,null,null,[[["size4kib",4]],["bool",15]],[[["size2mib",4]],["bool",15]],[[["size1gib",4]],["bool",15]],[[["page",3]],["bool",15]],[[["pagerange",3]],["bool",15]],[[["pagerangeinclusive",3]],["bool",15]],[[["physframe",3]],["bool",15]],[[["physframerange",3]],["bool",15]],[[["physframerangeinclusive",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["physaddr",3]],[["result",4,["addressnotaligned"]],["addressnotaligned",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["page",3]],["bool",15]],[[["pagerange",3]],["bool",15]],[[["pagerangeinclusive",3]],["bool",15]],[[["physframe",3]],["bool",15]],[[["physframerange",3]],["bool",15]],[[["physframerangeinclusive",3]],["bool",15]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["pagetableindex",3]],[[],["pagetableindex",3]],[[],["pagetableindex",3]],[[],["pagetableindex",3]],[[],["pagetableindex",3]],[[["size4kib",4]],[["option",4,["ordering"]],["ordering",4]]],[[["size2mib",4]],[["option",4,["ordering"]],["ordering",4]]],[[["size1gib",4]],[["option",4,["ordering"]],["ordering",4]]],[[["page",3]],[["option",4,["ordering"]],["ordering",4]]],[[["physframe",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["pagerangeinclusive",3]],null,null,null,null,null,null,[[],["virtaddr",3]],[[],["physaddr",3]],null,null,[[["u64",15]]],[[]],[[["u64",15]]],[[["physframe",3]]],[[["u64",15]]],[[["u64",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["physaddr",3]],[[],["pagetableflags",3]],[[["pagetableflags",3]],["pagetableflags",3]],[[["pagetableflags",3]]],[[["pagetableflags",3]],["pagetableflags",3]],[[["pagetableflags",3]]],[[],["u64",15]],null,[[["pagetableflags",3]],["pagetableflags",3]],[[["pagetableflags",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["frameerror",4]],[[],["pagetableentry",3]],[[],["pagetableflags",3]],[[],["pagetable",3]],[[],["pagetableindex",3]],[[],["pageoffset",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["pagetableflags",3]],["ordering",4]],[[["pagetableindex",3]],["ordering",4]],[[["pageoffset",3]],["ordering",4]],[[["pagetableflags",3]],["bool",15]],[[]],[[],["pagetableflags",3]],null,null,[[["frameerror",4]],["bool",15]],[[["pagetableflags",3]],["bool",15]],[[["pagetableindex",3]],["bool",15]],[[["pageoffset",3]],["bool",15]],[[["intoiterator",8]]],[[],["pagetableflags",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["pagetableflags",3]],[["result",4,["maptoerror"]],["maptoerror",4,["size4kib"]]]],[[],[["result",4,["physframe","frameerror"]],["physframe",3],["frameerror",4]]],[[]],[[]],[[]],[[["mmapprot",3]]],[[]],[[]],[[]],[[["u64",15]],[["option",4,["pagetableflags"]],["pagetableflags",3]]],[[["u64",15]],["pagetableflags",3]],[[["u64",15]],["pagetableflags",3]],[[["intoiterator",8]],["pagetableflags",3]],[[],["u64",15]],[[],["u64",15]],[[]],[[["pagetableindex",3]]],[[["usize",15]]],[[["pagetableindex",3]]],[[["usize",15]]],[[["pagetableflags",3]]],[[["pagetableflags",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["pagetableflags",3]],["bool",15]],[[["pagetableindex",3]],["bool",15]],[[["pageoffset",3]],["bool",15]],[[]],[[]],[[["u16",15]]],[[["u16",15]]],[[["u16",15]]],[[["u16",15]]],[[],["pagetableflags",3]],[[["pagetableflags",3]],[["option",4,["ordering"]],["ordering",4]]],[[["pagetableindex",3]],[["option",4,["ordering"]],["ordering",4]]],[[["pageoffset",3]],[["option",4,["ordering"]],["ordering",4]]],[[["pagetableflags",3]]],[[["pagetableflags",3],["bool",15]]],[[["pagetableflags",3],["physaddr",3]]],[[["pagetableflags",3]]],[[["physframe",3],["pagetableflags",3]]],[[]],[[["pagetableflags",3]],["pagetableflags",3]],[[["pagetableflags",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["pagetableflags",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,null,[[]],[[["usize",15]]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[],["moduleinit",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[],["color",3]],[[],["colorcode",3]],[[],["pixelformat",4]],[[],["framebufferinfo",3]],[[]],[[]],[[]],[[]],null,null,[[["color",3]],["bool",15]],[[["colorcode",3]],["bool",15]],[[["pixelformat",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]]],[[],["color",3]],[[],["color",3]],[[],["usize",15]],null,null,[[["stivaleframebuffertag",3]]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["color",3]],["bool",15]],[[["colorcode",3]],["bool",15]],[[["u64",15],["framebufferinfo",3]]],[[["color",3]],["colorcode",3]],[[]],null,null,null,[[]],[[["usize",15],["color",3]]],[[["colorcode",3]]],null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[],["usize",15]],[[["char",15]]],[[["str",15]],["result",6]],[[["str",15]]],null,null,null,null,[[["syscallframe",3],["registersframe",3]]],[[]],[[]],[[]],[[]],[[],["syscallframe",3]],[[],["registersframe",3]],[[]],[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],null,[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["usize",15]],[["usize",15],["aerosyscallerror",4],["result",4,["usize","aerosyscallerror"]]]],[[["usize",15]],[["usize",15],["aerosyscallerror",4],["result",4,["usize","aerosyscallerror"]]]],[[["usize",15]],[["usize",15],["aerosyscallerror",4],["result",4,["usize","aerosyscallerror"]]]],null,null,null,null,[[["usize",15]],[["usize",15],["aerosyscallerror",4],["result",4,["usize","aerosyscallerror"]]]],[[["usize",15]]],[[],[["usize",15],["aerosyscallerror",4],["result",4,["usize","aerosyscallerror"]]]],[[["usize",15]],[["usize",15],["aerosyscallerror",4],["result",4,["usize","aerosyscallerror"]]]],[[["usize",15]],[["usize",15],["aerosyscallerror",4],["result",4,["usize","aerosyscallerror"]]]],[[]],null,null,null,null,null,null,[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],null,[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["usize",15]]],[[["panicinfo",3]]],[[]],[[]],null,[[]],[[]],[[]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[],[["arc",3,["task"]],["task",3]]],[[],[["arc",3,["task"]],["task",3]]],[[["elffile",3]]],[[["isize",15]]],[[]],[[]],[[],["scheduler",3]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[["arc",3,["task"]],["task",3]]],[[["arc",3,["task"]],["taskid",3],["task",3]]],[[["arc",3,["task"]],["task",3]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["arc",3,["task"]],["task",3]]],null,null,[[]],null,[[]],[[]],[[]],[[]],[[],[["arc",3,["task"]],["task",3]]],null,null,[[["isize",15]]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[],["arc",3]],[[]],null,[[]],[[["arc",3,["task"]],["task",3]]],[[["arc",3,["task"]],["task",3]]],[[["arc",3,["task"]],["task",3]]],null,[[["arc",3,["task"]],["task",3]]],null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["arc",3,["task"]],["task",3]]],null,null,null,null,null,null,null,null,null,[[]],[[],["archtask",3]],null,[[],["archtask",3]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["taskid",3]],[[],["taskstate",4]],[[]],[[]],[[]],[[]],[[["taskid",3]],["ordering",4]],[[]],[[["taskid",3]],["bool",15]],[[["taskstate",4]],["bool",15]],[[["elffile",3]],[["result",4,["maptoerror"]],["maptoerror",4,["size4kib"]]]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],[["arc",3,["task"]],["task",3]]],[[]],[[]],[[]],[[["u8",15]]],[[]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],null,[[]],[[["taskid",3]],["bool",15]],[[["usize",15]]],[[]],[[],[["arc",3,["task"]],["task",3]]],[[["bool",15]],["arc",3]],[[["taskid",3]],[["option",4,["ordering"]],["ordering",4]]],[[]],null,[[],["taskstate",4]],null,[[],["taskid",3]],null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["taskstate",4]]],[[],["arc",3]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["mmapfile",3]],[[],["mapping",3]],[[]],[[]],null,null,null,[[["virtaddr",3],["usize",15]],["option",4]],[[["virtaddr",3],["usize",15]],["option",4]],null,[[["vm",3]]],[[["vm",3]]],[[]],[[]],[[]],[[]],[[]],[[["virtaddr",3],["offsetpagetable",3],["bool",15]],["bool",15]],[[["virtaddr",3],["pagefaulterrorcode",3]],["bool",15]],[[["virtaddr",3],["pagefaulterrorcode",3]],["bool",15]],[[["virtaddr",3],["offsetpagetable",3],["pagefaulterrorcode",3]],["bool",15]],[[["virtaddr",3],["offsetpagetable",3],["pagefaulterrorcode",3]],["bool",15]],null,[[]],[[]],[[]],[[]],[[]],[[["elffile",3]]],[[["elffile",3]]],[[]],null,[[["virtaddr",3],["usize",15],["mmapprot",3],["option",4],["mmapflags",3]],[["option",4,["virtaddr"]],["virtaddr",3]]],[[["virtaddr",3],["usize",15],["mmapprot",3],["mmapflags",3]],[["option",4,["virtaddr"]],["virtaddr",3]]],[[["virtaddr",3],["usize",15]],["bool",15]],[[["virtaddr",3],["usize",15]],["bool",15]],[[]],[[]],[[["usize",15]]],null,null,null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["virtaddr",3],["offsetpagetable",3]],[["unmaperror",4],["unmapresult",4],["result",4,["unmapresult","unmaperror"]]]],null,null,null,null,null,[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["arc",3]],[["option",4,["arc"]],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],null,null,[[],["percpu",3]],[[["u64",15]],["stackhelper",3]],[[],["percpu",3]],[[]],null,null,null,null,null,null,null,[[]],[[["u64",15]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["usize",15]],["option",4]],[[["usize",15]],["option",4]],[[["usize",15]],[["str",15],["option",4,["str"]]]],null,null,[[["u8",15]]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["str",15]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["usize",15]]],[[["u16",15]],["u8",15]],[[["u16",15]],["u32",15]],[[["u16",15],["u8",15]]],[[["u16",15],["u32",15]]],[[["u32",15]],["u64",15]],[[]],[[["u64",15],["u32",15]]],null,[[]],[[],["usize",15]],null,null,null,null,[[["mutex",3],["fnmut",8]],["mutexguard",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],null,[[],["mutexguard",3]],[[],["mutexguard",3]],null,[[]],[[]],[[]],[[]],null,[[["arc",3,["task"]],["task",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"P2Align12"],[4,"AcpiHeader"],[3,"GenericAddressStructure"],[3,"AcpiTable"],[3,"AmlHandler"],[13,"Rsdt"],[13,"Xsdt"],[3,"Fadt"],[3,"Hpet"],[4,"MadtEntry"],[3,"MadtLocalApic"],[3,"Madt"],[3,"MadtIntSrcOverride"],[3,"MadtIterator"],[3,"EntryHeader"],[13,"LocalApic"],[13,"IoApic"],[13,"IntSrcOverride"],[3,"DeviceConfig"],[3,"Mcfg"],[3,"Rsdp"],[3,"Sdt"],[4,"ApicType"],[3,"LocalApic"],[3,"IoApicHeader"],[3,"RFlags"],[3,"Cr4Flags"],[3,"Cr3Flags"],[3,"GdtAccessFlags"],[3,"GdtEntryType"],[3,"GdtEntryFlags"],[3,"GdtEntry"],[3,"SegmentSelector"],[4,"Ring"],[3,"GdtDescriptor"],[3,"Tss"],[3,"PIC_CONTROLLER"],[3,"APIC_CONTROLLER"],[3,"INTERRUPT_CONTROLLER"],[3,"InterruptController"],[3,"ApicController"],[3,"PicController"],[3,"IDTFlags"],[3,"IdtEntry"],[3,"IdtDescriptor"],[3,"ScratchRegisters"],[3,"PreservedRegisters"],[3,"IretRegisters"],[3,"InterruptStack"],[3,"InterruptErrorStack"],[3,"ArchTask"],[3,"KernelTaskFrame"],[3,"Context"],[3,"HbaSataStatus"],[3,"HbaCmdHeaderFlags"],[3,"HbaHostCont"],[3,"HbaPortCmd"],[3,"HbaCapabilities2"],[3,"HbaEnclosureCtrl"],[4,"HbaPortIpm"],[4,"AtaCommand"],[3,"HbaBohc"],[3,"HbaCapabilities"],[3,"HbaPortIE"],[3,"HbaPortIS"],[4,"HbaPortDd"],[4,"DmaCommand"],[4,"FisType"],[3,"HbaMemory"],[3,"FisRegH2D"],[3,"HbaCmdTbl"],[3,"HbaPrdtEntry"],[3,"HbaPort"],[3,"HbaCmdHeader"],[3,"AhciPortProtected"],[3,"DmaRequest"],[3,"DmaBuffer"],[3,"AhciCommand"],[3,"AhciPort"],[3,"AhciProtected"],[3,"AhciDriver"],[3,"ConfigFlags"],[4,"KeyCode"],[3,"Ps2KeyboardState"],[8,"KeyboardListener"],[3,"MouseFlags"],[3,"MOUSE"],[3,"Mouse"],[3,"MouseState"],[3,"PciHeader"],[4,"Vendor"],[4,"DeviceType"],[4,"Bar"],[3,"PciDevice"],[3,"PciTable"],[8,"PciDeviceHandle"],[13,"IO"],[13,"Memory32"],[13,"Memory64"],[13,"Unknown"],[3,"TTY"],[3,"TtyState"],[3,"StdinBuffer"],[3,"Tty"],[3,"SerialPort"],[3,"InterruptEnable"],[3,"LineStatus"],[3,"MountManager"],[3,"Path"],[4,"FileSystemError"],[3,"MOUNT_MANAGER"],[3,"MountPoint"],[8,"FileSystem"],[3,"CachedINode"],[3,"CacheItem"],[3,"CacheIndex"],[3,"Cache"],[8,"Cacheable"],[3,"DevINode"],[3,"DevFs"],[3,"DevNull"],[3,"DEV_FILESYSTEM"],[8,"Device"],[3,"FileTable"],[3,"FileHandle"],[4,"FileContents"],[4,"FileType"],[3,"DirProtectedData"],[3,"DirEntry"],[3,"Metadata"],[8,"INodeInterface"],[13,"Content"],[13,"Device"],[3,"LockedRamINode"],[3,"RamFs"],[3,"RamINode"],[3,"AeroLogger"],[3,"AddressSpace"],[3,"LockedHeap"],[3,"PageFaultErrorCode"],[3,"VirtAddr"],[3,"PhysAddr"],[3,"VirtAddrNotValid"],[3,"PhysAddrNotValid"],[3,"LockedFrameAllocator"],[3,"GlobalFrameAllocator"],[3,"MapperFlush"],[4,"MapToError"],[4,"PageTableCreateError"],[4,"TranslateResult"],[4,"UnmapError"],[4,"TranslateError"],[4,"PageTableWalkError"],[4,"FlagUpdateError"],[4,"MappedFrame"],[8,"FrameAllocator"],[3,"MappedPageTable"],[3,"PageTableWalker"],[3,"OffsetPageTable"],[3,"PhysOffset"],[8,"FrameDeallocator"],[8,"PageTableFrameMapping"],[8,"Mapper"],[8,"Translate"],[13,"PageAlreadyMapped"],[13,"Size4KiB"],[13,"Size2MiB"],[13,"Size1GiB"],[13,"InvalidFrameAddress"],[13,"InvalidFrameAddress"],[13,"Mapped"],[13,"InvalidFrameAddress"],[8,"PageSize"],[3,"Page"],[3,"PhysFrame"],[4,"Size4KiB"],[4,"Size2MiB"],[4,"Size1GiB"],[3,"PageRange"],[3,"PageRangeInclusive"],[3,"AddressNotAligned"],[3,"PhysFrameRange"],[3,"PhysFrameRangeInclusive"],[3,"PageTableIndex"],[3,"PageOffset"],[3,"PageTableFlags"],[4,"FrameError"],[3,"PageTableEntry"],[3,"PageTable"],[3,"ModuleInit"],[3,"Color"],[3,"ColorCode"],[4,"PixelFormat"],[3,"DebugRendy"],[3,"FrameBufferInfo"],[3,"SyscallFrame"],[3,"RegistersFrame"],[3,"ThreadControlBlock"],[3,"ThreadLocalStorage"],[3,"TaskContainer"],[8,"SchedulerInterface"],[3,"Scheduler"],[3,"RoundRobin"],[3,"TaskQueue"],[3,"TaskId"],[4,"TaskState"],[3,"TaskAdapter"],[3,"Task"],[4,"UnmapResult"],[3,"VmProtected"],[3,"Vm"],[3,"MMapFile"],[3,"Mapping"],[13,"Parital"],[8,"Downcastable"],[3,"PerCpu"],[3,"VolatileCell"],[3,"StackHelper"],[3,"RingBuffer"],[20,"LinkerSymbol"],[3,"BlockQueue"],[3,"IrqGuard"],[3,"Mutex"],[3,"MutexGuard"]]},\
"aero_syscall":{"doc":"","t":[4,6,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,18,18,18,18,3,3,18,18,18,18,18,18,18,18,18,3,18,18,18,18,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,0,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,17,17,17,17,17,17,17,14,5,5,5,5,5,5,5,5],"n":["AeroSyscallError","AeroSyscallResult","E2BIG","EACCES","EADDRINUSE","EADDRNOTAVAIL","EAFNOSUPPORT","EAGAIN","EALREADY","EBADF","EBADFD","EBADMSG","EBUSY","ECANCELED","ECHILD","ECONNABORTED","ECONNREFUSED","ECONNRESET","EDEADLK","EDESTADDRREQ","EDOM","EDQUOT","EEXIST","EFAULT","EFBIG","EHOSTDOWN","EHOSTUNREACH","EIDRM","EILSEQ","EINPROGRESS","EINTR","EINVAL","EIO","EISCONN","EISDIR","ELOOP","EMFILE","EMLINK","EMSGSIZE","EMULTIHOP","ENAMETOOLONG","ENETDOWN","ENETRESET","ENETUNREACH","ENFILE","ENOBUFS","ENODATA","ENODEV","ENOENT","ENOEXEC","ENOKEY","ENOLCK","ENOLINK","ENOMEDIUM","ENOMEM","ENOMSG","ENOPROTOOPT","ENOSPC","ENOSYS","ENOTBLK","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTRECOVERABLE","ENOTSOCK","ENOTSUP","ENOTTY","ENXIO","EOPNOTSUPP","EOVERFLOW","EOWNERDEAD","EPERM","EPIPE","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","ERANGE","EROFS","ESHUTDOWN","ESPIPE","ESRCH","ESTALE","ETIME","ETIMEDOUT","ETXTBSY","EXDEV","MAP_ANONYOMUS","MAP_FIXED","MAP_PRIVATE","MAP_SHARED","MMapFlags","MMapProt","O_CLOEXEC","O_CREAT","O_DIRECTORY","O_EXCL","O_NOCTTY","O_RDONLY","O_RDWR","O_TRUNC","O_WRONLY","OpenFlags","PROT_EXEC","PROT_NONE","PROT_READ","PROT_WRITE","Unknown","all","all","all","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","cmp","cmp","cmp","consts","contains","contains","contains","empty","empty","empty","eq","eq","eq","eq","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","hash","hash","hash","insert","insert","insert","intersects","intersects","intersects","into","into","into","into","is_all","is_all","is_all","is_empty","is_empty","is_empty","ne","ne","ne","not","not","not","partial_cmp","partial_cmp","partial_cmp","prelude","remove","remove","remove","set","set","set","sub","sub","sub","sub_assign","sub_assign","sub_assign","sys_exit","sys_fork","sys_mmap","sys_munmap","sys_open","sys_read","sys_write","syscall","syscall_result_as_usize","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","SYS_ARCH_PRCTL","SYS_CLOSE","SYS_EXIT","SYS_FORK","SYS_MMAP","SYS_MUNMAP","SYS_OPEN","SYS_READ","SYS_REBOOT","SYS_SHUTDOWN","SYS_WRITE","define_syscall_fns","supports_syscall_sysret","syscall0","syscall1","syscall2","syscall3","syscall4","syscall5","syscall6"],"q":["aero_syscallaero_syscall::consts","","","","","","","","","","","aero_syscall::syscall","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns an empty set of flags","Returns an empty set of flags","Returns an empty set of flags","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Convert from underlying bit representation, preserving all…","Convert from underlying bit representation, preserving all…","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Exits the current process with the provided status.","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the current CPU supports the <code>syscall</code> and …","","","","","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,0,0,3,3,3,3,3,3,3,3,3,0,4,4,4,4,1,4,2,3,4,2,3,4,2,3,4,2,3,4,2,3,4,2,3,4,2,3,4,2,3,4,2,3,1,4,2,3,1,4,2,3,1,4,2,3,0,4,2,3,4,2,3,4,2,3,1,4,2,3,4,4,4,4,4,2,2,2,2,2,3,3,3,3,3,1,4,2,3,1,4,2,3,4,2,3,4,2,3,4,2,3,4,2,3,4,2,3,4,2,3,4,2,3,1,4,2,3,4,2,3,4,2,3,4,2,3,4,2,3,0,4,2,3,4,2,3,4,2,3,4,2,3,0,0,0,0,0,0,0,0,0,4,2,3,4,2,3,1,4,2,3,1,4,2,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["mmapprot",3]],[[],["mmapflags",3]],[[],["openflags",3]],[[["mmapprot",3]],["mmapprot",3]],[[["mmapflags",3]],["mmapflags",3]],[[["openflags",3]],["openflags",3]],[[["mmapprot",3]]],[[["mmapflags",3]]],[[["openflags",3]]],[[["mmapprot",3]],["mmapprot",3]],[[["mmapflags",3]],["mmapflags",3]],[[["openflags",3]],["openflags",3]],[[["mmapprot",3]]],[[["mmapflags",3]]],[[["openflags",3]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["mmapprot",3]],["mmapprot",3]],[[["mmapflags",3]],["mmapflags",3]],[[["openflags",3]],["openflags",3]],[[["mmapprot",3]]],[[["mmapflags",3]]],[[["openflags",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["mmapprot",3]],[[],["mmapflags",3]],[[],["openflags",3]],[[],["aerosyscallerror",4]],[[["mmapprot",3]],["ordering",4]],[[["mmapflags",3]],["ordering",4]],[[["openflags",3]],["ordering",4]],null,[[["mmapprot",3]],["bool",15]],[[["mmapflags",3]],["bool",15]],[[["openflags",3]],["bool",15]],[[],["mmapprot",3]],[[],["mmapflags",3]],[[],["openflags",3]],[[["mmapprot",3]],["bool",15]],[[["mmapflags",3]],["bool",15]],[[["openflags",3]],["bool",15]],[[["aerosyscallerror",4]],["bool",15]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["usize",15]],[["option",4,["mmapprot"]],["mmapprot",3]]],[[["usize",15]],[["mmapflags",3],["option",4,["mmapflags"]]]],[[["usize",15]],[["openflags",3],["option",4,["openflags"]]]],[[["usize",15]],["mmapprot",3]],[[["usize",15]],["mmapflags",3]],[[["usize",15]],["openflags",3]],[[["usize",15]],["mmapprot",3]],[[["usize",15]],["mmapflags",3]],[[["usize",15]],["openflags",3]],[[["intoiterator",8]],["mmapprot",3]],[[["intoiterator",8]],["mmapflags",3]],[[["intoiterator",8]],["openflags",3]],[[]],[[]],[[]],[[["mmapprot",3]]],[[["mmapflags",3]]],[[["openflags",3]]],[[["mmapprot",3]],["bool",15]],[[["mmapflags",3]],["bool",15]],[[["openflags",3]],["bool",15]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["mmapprot",3]],["bool",15]],[[["mmapflags",3]],["bool",15]],[[["openflags",3]],["bool",15]],[[],["mmapprot",3]],[[],["mmapflags",3]],[[],["openflags",3]],[[["mmapprot",3]],[["option",4,["ordering"]],["ordering",4]]],[[["mmapflags",3]],[["option",4,["ordering"]],["ordering",4]]],[[["openflags",3]],[["option",4,["ordering"]],["ordering",4]]],null,[[["mmapprot",3]]],[[["mmapflags",3]]],[[["openflags",3]]],[[["mmapprot",3],["bool",15]]],[[["mmapflags",3],["bool",15]]],[[["bool",15],["openflags",3]]],[[["mmapprot",3]],["mmapprot",3]],[[["mmapflags",3]],["mmapflags",3]],[[["openflags",3]],["openflags",3]],[[["mmapprot",3]]],[[["mmapflags",3]]],[[["openflags",3]]],[[["usize",15]]],[[],["usize",15]],[[["usize",15],["mmapprot",3],["mmapflags",3]],["usize",15]],[[["usize",15]],["usize",15]],[[["str",15],["openflags",3]],["usize",15]],[[["usize",15]],["usize",15]],[[["usize",15]],["usize",15]],null,[[["aerosyscallresult",6]],["usize",15]],[[["mmapprot",3]]],[[["mmapflags",3]]],[[["openflags",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[["usize",15]],["usize",15]],[[["usize",15]],["usize",15]],[[["usize",15]],["usize",15]],[[["usize",15]],["usize",15]],[[["usize",15]],["usize",15]],[[["usize",15]],["usize",15]],[[["usize",15]],["usize",15]]],"p":[[4,"AeroSyscallError"],[3,"MMapFlags"],[3,"OpenFlags"],[3,"MMapProt"]]},\
"ahash":{"doc":"AHash is a hashing algorithm is intended to be a high …","t":[3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AHasher","CallHasher","RandomState","borrow","borrow","borrow_mut","borrow_mut","build_hasher","clone","clone","clone_into","clone_into","default","default","finish","fmt","fmt","from","from","generate_with","get_hash","into","into","new","new_with_keys","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","with_seeds","write","write_u128","write_u16","write_u32","write_u64","write_u8","write_usize"],"q":["ahash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A <code>Hasher</code> for hashing an arbitrary stream of bytes.","Provides a way to get an optimized hasher for a given …","Provides a Hasher factory. This is typically used (e.g. …","","","","","Constructs a new AHasher with keys based on this …","","","","","Constructs a new AHasher with fixed keys. If <code>std</code> is …","","","","","","","Allows for supplying seeds, but each time it is called …","","","","Use randomly generated keys","Creates a new hasher keyed to the provided key.","","","","","","","","","Allows for explicitly setting the seeds to used.","","","","","","",""],"i":[0,0,0,1,2,1,2,2,1,2,1,2,1,2,1,1,2,1,2,2,3,1,2,2,1,1,2,1,2,1,2,1,2,2,1,1,1,1,1,1,1],"f":[null,null,null,[[]],[[]],[[]],[[]],[[],["ahasher",3]],[[],["ahasher",3]],[[],["randomstate",3]],[[]],[[]],[[],["ahasher",3]],[[]],[[],["u64",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["u64",15]],["randomstate",3]],[[],["u64",15]],[[]],[[]],[[],["randomstate",3]],[[["u128",15]],["ahasher",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["u64",15]],["randomstate",3]],[[]],[[["u128",15]]],[[["u16",15]]],[[["u32",15]]],[[["u64",15]]],[[["u8",15]]],[[["usize",15]]]],"p":[[3,"AHasher"],[3,"RandomState"],[8,"CallHasher"]]},\
"aml":{"doc":"<code>aml</code> is a pure-Rust AML (ACPI Machine Language) parser, …","t":[17,13,13,3,4,3,3,4,13,13,13,13,8,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,0,10,10,10,10,10,10,10,10,10,10,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,10,10,10,10,10,10,10,10,10,10,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,3,4,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,13,13,13,4,3,4,13,13,3,4,4,13,13,13,13,3,13,4,4,13,3,13,13,13,4,4,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,12,5,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,13,4,4,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,3,13,4,13,13,13,13,13,13,13,4,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,3,13,13,13,13,13,13,13,13,13,13,13,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["AML_INTERPRETER_REVISION","All","AllScopes","AmlContext","AmlError","AmlHandle","AmlName","DebugVerbosity","EmptyNamesAreInvalid","FieldInvalidAccessSize","FieldInvalidAddress","FieldRegionIsNotOpRegion","Handler","IncompatibleValueConversion","InvalidArgAccess","InvalidFieldFlags","InvalidLocalAccess","InvalidNameSeg","InvalidNormalizedName","InvalidPkgLength","InvalidRegionSpace","InvalidShiftLeft","InvalidShiftRight","InvalidStatusObject","InvalidStringConstant","LevelDoesNotExist","MalformedBuffer","MalformedPackage","MalformedStream","NameCollision","Namespace","None","NotExecutingControlMethod","PrtInvalidAddress","PrtInvalidGsi","PrtInvalidPin","PrtInvalidSource","PrtNoEntry","ReservedResourceType","ResourceDescriptorTooLong","ResourceDescriptorTooShort","RootHasNoParent","Scopes","TriedToRemoveRootNamespace","TypeCannotBeCompared","TypeCannotBeSliced","UnexpectedByte","UnexpectedEndOfStream","UnexpectedResourceType","UnterminatedStringConstant","ValueDoesNotExist","WrongParser","add_level","add_value","add_value_at_resolved_path","as_string","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_components","from_name_seg","from_str","get","get_by_path","get_by_path_mut","get_handle","get_mut","initialize_objects","into","into","into","into","into","into","invoke_method","is_absolute","is_normal","namespace","ne","ne","ne","new","new","normalize","parent","parse_table","partial_cmp","partial_cmp","partial_cmp","pci_routing","read_io_u16","read_io_u32","read_io_u8","read_pci_u16","read_pci_u32","read_pci_u8","read_u16","read_u32","read_u64","read_u8","remove_level","resolve","resource","root","search","search_for_level","search_rules_apply","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","traverse","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","value","write_io_u16","write_io_u32","write_io_u8","write_pci_u16","write_pci_u32","write_pci_u8","write_u16","write_u32","write_u64","write_u8","0","0","0","0","0","0","0","0","0","0","current","target","Gsi","IntA","IntB","IntC","IntD","LinkObject","PciRoute","PciRouteType","PciRoutingTable","Pin","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_prt_path","into","into","into","into","route","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","0","0","ActiveHigh","ActiveLow","Additive","AddressSpace","AddressSpaceDecodeType","AddressSpaceDescriptor","AddressSpaceResourceType","BusNumberRange","CompatibilityMode","DMADescriptor","DMASupportedSpeed","DMATransferTypePreference","Dma","Edge","FixedLocation","IOPort","IOPortDescriptor","IORange","InterruptPolarity","InterruptTrigger","Irq","IrqDescriptor","Level","MemoryRange","MemoryRange","MemoryRangeDescriptor","Resource","Subtractive","TypeA","TypeB","TypeF","_16Bit","_8And16Bit","_8BitOnly","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","dma_format_descriptor","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","irq","is_consumer","is_shared","is_wake_capable","ne","ne","ne","ne","ne","ne","polarity","resource_descriptor_list","to_owned","to_owned","to_owned","to_owned","to_owned","trigger","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","base_address","is_writable","range_length","0","0","0","0","0","Aml","AmlType","AmlValue","Any","Args","Boolean","Buffer","Buffer","Buffer","BufferField","Byte","DWord","DdbHandle","DebugObject","Device","Device","EmbeddedControl","Event","Field","FieldAccessType","FieldFlags","FieldUnit","FieldUpdateRule","GeneralPurposeIo","GenericSerialBus","IPMI","Integer","Integer","Method","Method","MethodCode","MethodFlags","Mutex","Mutex","Native","ObjReference","OemDefined","OpRegion","OpRegion","Package","Package","PciBarTarget","PciConfig","PowerResource","PowerResource","Preserve","Processor","Processor","QWord","RawDataBuffer","RegionSpace","SMBus","StatusObject","String","String","SystemCmos","SystemIo","SystemMemory","ThermalZone","ThermalZone","Uninitialized","Word","WriteAsOnes","WriteAsZeros","access_type","arg","arg_0","arg_1","arg_2","arg_3","arg_4","arg_5","arg_6","arg_count","as_bool","as_buffer","as_concat_type","as_integer","as_status","as_string","as_type","battery_present","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","default","enabled","eq","eq","eq","eq","eq","eq","eq","field_update_rule","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_list","functional","into","into","into","into","into","into","into","into","into","into","lock_rule","native_method","ne","ne","ne","ne","new","new","one","ones","present","read_field","serialize","show_in_ui","sync_level","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_of","write_field","zero","0","0","0","0","0","code","flags","flags","id","length","length","offset","offset","parent_device","pblk_address","pblk_len","region","region","resource_order","sync_level","system_level","0","0","0"],"q":["aml","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aml::AmlError","","","","","","","","","","","","aml::pci_routing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aml::pci_routing::PciRouteType","","aml::resource","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aml::resource::MemoryRangeDescriptor","","","aml::resource::Resource","","","","","aml::valueaml::value::AmlValue","","","","","","","","","","","","","","","","","","","","","aml::value::MethodCode","","aml::value::RegionSpace"],"d":["AML has a <code>RevisionOp</code> operator that returns the “AML …","Print heads and tails of all objects, and extra debug …","Print heads and tails when entering and leaving scopes of …","","","A handle is used to refer to an AML value without …","","Describes how much debug information the parser should …","","","","","","","Produced when a method accesses an argument it does not …","","Produced when a method accesses a local that it has not …","","Produced when trying to normalize a path that does not …","","","","","","","Produced when a sub-level or value is added to a level …","Produced when a <code>DefBuffer</code> contains more bytes that its …","Produced when a <code>DefPackage</code> contains a different number of …","Produced when the stream evaluates to something other …","Produced when two values with the same name are added to …","","Print no debug information","Produced when AML tries to do something only possible in …","","","","","Produced when the PRT doesn’t contain an entry for the …","","","","","Print heads and tails when entering and leaving scopes of …","","","Produced when the <code>Mid</code> operator is applied to a value of a …","","","","","","Emitted by a parser when it’s clear that the stream …","Add a new level to the namespace. A “level” is named …","Add a value to the namespace at the given path, which …","Helper method for adding a value to the namespace at a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert a string representation of an AML name into an …","","","","","","","","","","","","","","","An AML path is normal if it does not contain any prefix …","","","","","Creates a new <code>AmlContext</code> - the central type in managing …","","Normalize an AML path, resolving prefix chars. Returns …","Get the parent of this <code>AmlName</code>. For example, the parent …","","","","","","","","","","","","","","","","","Resolve this path against a given scope, making it …","","","Search for an object at the given path of the namespace, …","","Special rules apply when searching for certain paths …","","","","","","","Traverse the namespace, calling <code>f</code> on each namespace …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The interrupt is hard-coded to a specific GSI","","","","","The interrupt is linked to a link object. This object …","","","A <code>PciRoutingTable</code> is used to interpret the data in a <code>_PRT</code> …","","","","","","","","","","","","","","","","","","","","","Construct a <code>PciRoutingTable</code> from a path to a <code>_PRT</code> object. …","","","","","Get the interrupt input that a given PCI interrupt pin is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse a <code>ResourceDescriptor</code> into a list of resources. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A control method can take up to 7 arguments, each of …","","","","","","","","Handle to a definition block handle. Returned by the <code>Load</code> …","","","","","","Describes a field unit within an operation region.","","","","","","","","","","","","","","","","","","","","Describes an operation region. Some regions require other …","","","","","","","","","","","","","","Representation of the return value of a <code>_STA</code> method, …","","","","","","","","","","","","","Get an argument by its <code>ArgNum</code>.","","","","","","","","","","","Converts an <code>AmlValue</code> to the representation that should be …","","Turns an <code>AmlValue</code> returned from a <code>_STA</code> method into a …","","Convert this value to a value of the same data, but with …","Only applicable for Control Method Battery Devices (…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Logically compare two <code>AmlValue</code>s, according to the rules …","","","Whether the device is enabled. Both <code>present</code> and <code>enabled</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether the device is physically present. If this is <code>false</code>…","Reads from a field of an opregion, returning either a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,0,0,0,0,0,2,2,2,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,1,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,3,3,3,4,5,6,3,4,1,2,5,6,3,4,1,2,6,3,4,1,2,6,3,4,1,2,6,4,1,6,4,1,2,6,3,4,4,1,2,5,6,3,4,1,2,4,4,4,3,3,3,3,3,5,5,6,3,4,1,2,5,4,4,5,6,4,2,5,3,4,4,5,6,4,1,0,7,7,7,7,7,7,7,7,7,7,3,4,0,4,3,3,4,6,3,4,1,2,4,3,5,6,3,4,1,2,5,6,3,4,1,2,5,6,3,4,1,2,0,7,7,7,7,7,7,7,7,7,7,8,9,10,11,12,13,14,15,16,17,18,18,19,20,20,20,20,19,0,0,0,0,20,19,21,22,20,19,21,22,20,20,20,20,19,21,22,20,19,21,22,22,20,19,21,22,22,20,20,19,21,22,20,19,21,22,20,19,21,22,23,24,25,25,26,27,0,0,0,28,29,0,0,0,27,30,31,27,0,28,0,0,27,0,30,27,28,0,0,26,29,29,29,32,32,32,27,30,25,28,26,33,31,34,29,32,35,36,27,30,25,28,26,33,31,34,29,32,35,36,30,25,28,26,34,30,25,28,26,34,0,27,30,25,28,26,33,31,34,29,32,35,36,27,30,25,28,26,33,31,34,29,32,35,36,27,30,25,28,26,33,31,34,29,32,35,36,27,30,25,28,26,33,31,34,29,32,35,36,34,34,34,34,27,33,31,34,35,36,34,0,30,25,28,26,34,34,27,30,25,28,26,33,31,34,29,32,35,36,27,30,25,28,26,33,31,34,29,32,35,36,27,30,25,28,26,33,31,34,29,32,35,36,37,37,37,38,39,40,41,42,43,0,0,44,0,45,44,46,45,46,44,44,46,46,46,45,47,46,45,0,0,46,0,47,47,47,46,45,46,45,0,0,46,45,43,46,47,46,45,46,45,47,47,46,45,48,46,45,44,46,0,47,0,46,45,47,47,47,46,45,46,44,48,48,49,50,50,50,50,50,50,50,50,51,45,45,45,45,45,45,45,52,47,44,48,49,51,52,46,43,45,50,47,44,48,49,51,52,46,43,45,50,47,44,48,49,51,52,46,43,45,50,47,44,48,49,51,52,46,43,45,50,45,52,50,52,47,44,48,49,51,52,46,49,47,44,48,49,51,52,46,43,45,50,47,44,48,49,51,51,52,46,43,45,50,50,52,47,44,48,49,51,52,46,43,45,50,49,45,47,49,51,52,49,51,45,45,52,45,51,52,51,47,44,48,49,51,52,46,43,45,50,47,44,48,49,51,52,46,43,45,50,47,44,48,49,51,52,46,43,45,50,47,44,48,49,51,52,46,43,45,50,45,45,45,53,54,55,56,57,58,59,58,60,61,59,61,59,61,60,60,61,59,62,63,62,64,65,66],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["amlname",3],["leveltype",4]],[["result",4,["amlerror"]],["amlerror",4]]],[[["amlname",3],["amlvalue",4]],[["amlhandle",3],["result",4,["amlhandle","amlerror"]],["amlerror",4]]],[[["amlname",3],["amlname",3],["amlvalue",4]],[["amlhandle",3],["result",4,["amlhandle","amlerror"]],["amlerror",4]]],[[],["string",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["amlhandle",3]],[[],["namespace",3]],[[],["amlname",3]],[[],["debugverbosity",4]],[[],["amlerror",4]],[[]],[[]],[[]],[[]],[[]],[[["amlhandle",3]],["ordering",4]],[[["amlname",3]],["ordering",4]],[[["debugverbosity",4]],["ordering",4]],[[["amlhandle",3]],["bool",15]],[[["amlname",3]],["bool",15]],[[["debugverbosity",4]],["bool",15]],[[["amlerror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["namecomponent",4],["vec",3,["namecomponent"]]],["amlname",3]],[[["nameseg",3]],["amlname",3]],[[["str",15]],[["result",4,["amlname","amlerror"]],["amlname",3],["amlerror",4]]],[[["amlhandle",3]],[["amlerror",4],["amlvalue",4],["result",4,["amlvalue","amlerror"]]]],[[["amlname",3]],[["amlerror",4],["amlvalue",4],["result",4,["amlvalue","amlerror"]]]],[[["amlname",3]],[["amlvalue",4],["result",4,["amlvalue","amlerror"]],["amlerror",4]]],[[["amlname",3]],[["amlhandle",3],["result",4,["amlhandle","amlerror"]],["amlerror",4]]],[[["amlhandle",3]],[["amlvalue",4],["result",4,["amlvalue","amlerror"]],["amlerror",4]]],[[],[["result",4,["amlerror"]],["amlerror",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["amlname",3],["args",3]],[["amlvalue",4],["result",4,["amlvalue","amlerror"]],["amlerror",4]]],[[],["bool",15]],[[],["bool",15]],null,[[["amlhandle",3]],["bool",15]],[[["amlname",3]],["bool",15]],[[["amlerror",4]],["bool",15]],[[["box",3,["handler"]],["debugverbosity",4],["handler",8]],["amlcontext",3]],[[],["namespace",3]],[[],[["result",4,["amlname","amlerror"]],["amlname",3],["amlerror",4]]],[[],[["result",4,["amlname","amlerror"]],["amlname",3],["amlerror",4]]],[[],[["result",4,["amlerror"]],["amlerror",4]]],[[["amlhandle",3]],[["option",4,["ordering"]],["ordering",4]]],[[["amlname",3]],[["option",4,["ordering"]],["ordering",4]]],[[["debugverbosity",4]],[["option",4,["ordering"]],["ordering",4]]],null,[[["u16",15]],["u16",15]],[[["u16",15]],["u32",15]],[[["u16",15]],["u8",15]],[[["u16",15],["u8",15]],["u16",15]],[[["u16",15],["u8",15]],["u32",15]],[[["u16",15],["u8",15]],["u8",15]],[[["usize",15]],["u16",15]],[[["usize",15]],["u32",15]],[[["usize",15]],["u64",15]],[[["usize",15]],["u8",15]],[[["amlname",3]],[["result",4,["amlerror"]],["amlerror",4]]],[[["amlname",3]],[["result",4,["amlname","amlerror"]],["amlname",3],["amlerror",4]]],null,[[],["amlname",3]],[[["amlname",3]],[["result",4,["amlerror"]],["amlerror",4]]],[[["amlname",3]],[["result",4,["amlname","amlerror"]],["amlname",3],["amlerror",4]]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],[["result",4,["amlerror"]],["amlerror",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[["u16",15]]],[[["u16",15],["u32",15]]],[[["u16",15],["u8",15]]],[[["u16",15],["u8",15]]],[[["u16",15],["u8",15],["u32",15]]],[[["u16",15],["u8",15]]],[[["usize",15],["u16",15]]],[[["usize",15],["u32",15]]],[[["usize",15],["u64",15]]],[[["usize",15],["u8",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["pin",4]],[[]],[[["pin",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["amlname",3],["amlcontext",3]],[["result",4,["pciroutingtable","amlerror"]],["amlerror",4],["pciroutingtable",3]]],[[]],[[]],[[]],[[]],[[["u16",15],["amlcontext",3],["pin",4]],[["irqdescriptor",3],["result",4,["irqdescriptor","amlerror"]],["amlerror",4]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["interrupttrigger",4]],[[],["interruptpolarity",4]],[[],["addressspaceresourcetype",4]],[[],["addressspacedecodetype",4]],[[],["irqdescriptor",3]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4,["resource","amlerror"]],["resource",4],["amlerror",4]]],[[["resource",4]],["bool",15]],[[["interrupttrigger",4]],["bool",15]],[[["interruptpolarity",4]],["bool",15]],[[["addressspaceresourcetype",4]],["bool",15]],[[["addressspacedecodetype",4]],["bool",15]],[[["addressspacedescriptor",3]],["bool",15]],[[["memoryrangedescriptor",4]],["bool",15]],[[["irqdescriptor",3]],["bool",15]],[[["dmasupportedspeed",4]],["bool",15]],[[["dmatransfertypepreference",4]],["bool",15]],[[["dmadescriptor",3]],["bool",15]],[[["ioportdescriptor",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[["resource",4]],["bool",15]],[[["addressspacedescriptor",3]],["bool",15]],[[["memoryrangedescriptor",4]],["bool",15]],[[["irqdescriptor",3]],["bool",15]],[[["dmadescriptor",3]],["bool",15]],[[["ioportdescriptor",3]],["bool",15]],null,[[["amlvalue",4]],[["vec",3,["resource"]],["amlerror",4],["result",4,["vec","amlerror"]]]],[[]],[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["result",4,["fieldaccesstype","amlerror"]],["fieldaccesstype",4],["amlerror",4]]],[[["u8",15]],[["amlerror",4],["amlvalue",4],["result",4,["amlvalue","amlerror"]]]],null,null,null,null,null,null,null,[[],["u8",15]],[[],[["result",4,["bool","amlerror"]],["amlerror",4],["bool",15]]],[[["amlcontext",3]],[["vec",3,["u8"]],["result",4,["vec","amlerror"]],["amlerror",4]]],[[],["amlvalue",4]],[[["amlcontext",3]],[["u64",15],["result",4,["u64","amlerror"]],["amlerror",4]]],[[],[["statusobject",3],["amlerror",4],["result",4,["statusobject","amlerror"]]]],[[["amlcontext",3]],[["result",4,["string","amlerror"]],["string",3],["amlerror",4]]],[[["amltype",4],["amlcontext",3]],[["amlvalue",4],["result",4,["amlvalue","amlerror"]],["amlerror",4]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["regionspace",4]],[[],["fieldaccesstype",4]],[[],["fieldupdaterule",4]],[[],["fieldflags",3]],[[],["methodflags",3]],[[],["statusobject",3]],[[],["amltype",4]],[[],["methodcode",4]],[[],["amlvalue",4]],[[],["args",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["amlcontext",3],["amlvalue",4]],[["amlerror",4],["ordering",4],["result",4,["ordering","amlerror"]]]],[[]],[[],["args",3]],null,[[["regionspace",4]],["bool",15]],[[["fieldaccesstype",4]],["bool",15]],[[["fieldupdaterule",4]],["bool",15]],[[["fieldflags",3]],["bool",15]],[[["methodflags",3]],["bool",15]],[[["statusobject",3]],["bool",15]],[[["amltype",4]],["bool",15]],[[],[["amlerror",4],["fieldupdaterule",4],["result",4,["fieldupdaterule","amlerror"]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["u8",15]],["methodflags",3]],[[]],[[]],[[]],[[]],[[]],[[["vec",3,["amlvalue"]],["amlvalue",4]],["args",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["u8",15],["bool",15]],["amlvalue",4]],[[["regionspace",4]],["bool",15]],[[["fieldflags",3]],["bool",15]],[[["methodflags",3]],["bool",15]],[[["statusobject",3]],["bool",15]],[[["u8",15]],["fieldflags",3]],[[["u8",15],["bool",15]],["methodflags",3]],[[],["amlvalue",4]],[[],["amlvalue",4]],null,[[["amlcontext",3]],[["amlvalue",4],["result",4,["amlvalue","amlerror"]],["amlerror",4]]],[[],["bool",15]],null,[[],["u8",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["amltype",4]],[[["amlcontext",3],["amlvalue",4]],[["result",4,["amlerror"]],["amlerror",4]]],[[],["amlvalue",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"DebugVerbosity"],[4,"AmlError"],[3,"Namespace"],[3,"AmlName"],[3,"AmlContext"],[3,"AmlHandle"],[8,"Handler"],[13,"UnexpectedByte"],[13,"InvalidRegionSpace"],[13,"InvalidNormalizedName"],[13,"LevelDoesNotExist"],[13,"ValueDoesNotExist"],[13,"NameCollision"],[13,"InvalidArgAccess"],[13,"InvalidLocalAccess"],[13,"TypeCannotBeCompared"],[13,"TypeCannotBeSliced"],[13,"IncompatibleValueConversion"],[4,"PciRouteType"],[4,"Pin"],[3,"PciRoute"],[3,"PciRoutingTable"],[13,"Gsi"],[13,"LinkObject"],[4,"InterruptPolarity"],[4,"AddressSpaceDecodeType"],[4,"Resource"],[4,"AddressSpaceResourceType"],[4,"DMASupportedSpeed"],[4,"InterruptTrigger"],[4,"MemoryRangeDescriptor"],[4,"DMATransferTypePreference"],[3,"AddressSpaceDescriptor"],[3,"IrqDescriptor"],[3,"DMADescriptor"],[3,"IOPortDescriptor"],[13,"FixedLocation"],[13,"Irq"],[13,"AddressSpace"],[13,"MemoryRange"],[13,"IOPort"],[13,"Dma"],[4,"MethodCode"],[4,"FieldAccessType"],[4,"AmlValue"],[4,"AmlType"],[4,"RegionSpace"],[4,"FieldUpdateRule"],[3,"FieldFlags"],[3,"Args"],[3,"MethodFlags"],[3,"StatusObject"],[13,"Boolean"],[13,"Integer"],[13,"String"],[13,"Buffer"],[13,"Package"],[13,"Method"],[13,"Field"],[13,"Processor"],[13,"OpRegion"],[13,"PowerResource"],[13,"Mutex"],[13,"Aml"],[13,"Native"],[13,"OemDefined"]]},\
"bit_field":{"doc":"Provides the abstraction of a bit field, which allows for …","t":[18,8,8,10,10,10,10,10,10,10,10,10],"n":["BIT_LENGTH","BitArray","BitField","bit_length","get_bit","get_bit","get_bits","get_bits","set_bit","set_bit","set_bits","set_bits"],"q":["bit_field","","","","","","","","","","",""],"d":["The number of bits in this bit field.","","A generic trait which provides methods for extracting and …","Returns the length, eg number of bits, in this bit array.","Obtains the bit at the index <code>bit</code>; note that index 0 is …","Obtains the bit at the index <code>bit</code>; note that index 0 is …","Obtains the range of bits specified by <code>range</code>; note that …","Obtains the range of bits specified by <code>range</code>; note that …","Sets the bit at the index <code>bit</code> to the value <code>value</code> (where …","Sets the bit at the index <code>bit</code> to the value <code>value</code> (where …","Sets the range of bits defined by the range <code>range</code> to the …","Sets the range of bits defined by the range <code>range</code> to the …"],"i":[1,0,0,2,1,2,1,2,1,2,1,2],"f":[null,null,null,[[],["usize",15]],[[["usize",15]],["bool",15]],[[["usize",15]],["bool",15]],[[["usize",15],["rangebounds",8,["usize"]]]],[[["usize",15],["rangebounds",8,["usize"]]]],[[["usize",15],["bool",15]]],[[["usize",15],["bool",15]]],[[["usize",15],["rangebounds",8,["usize"]]]],[[["usize",15],["rangebounds",8,["usize"]]]]],"p":[[8,"BitField"],[8,"BitArray"]]},\
"bitflags":{"doc":"A typesafe bitmask flag generator useful for sets of …","t":[14],"n":["bitflags"],"q":["bitflags"],"d":["The macro used to generate the flag structure."],"i":[0],"f":[null],"p":[]},\
"byteorder":{"doc":"This crate provides convenience methods for encoding and …","t":[6,4,8,6,4,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,10,11,11,10,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,10,11,11,10,11,11,11,10,11,11,10,11,11,11,10,11,11,10,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,10,11,11,10,11,11,11,10,11,11,10,11,11,11,10,11,11,10,11,11,10,11,11,10,11,11],"n":["BE","BigEndian","ByteOrder","LE","LittleEndian","NativeEndian","NetworkEndian","borrow","borrow","borrow_mut","borrow_mut","clone","clone","cmp","cmp","default","default","eq","eq","fmt","fmt","from","from","from_slice_f32","from_slice_f32","from_slice_f32","from_slice_f64","from_slice_f64","from_slice_f64","from_slice_i128","from_slice_i16","from_slice_i32","from_slice_i64","from_slice_u128","from_slice_u128","from_slice_u128","from_slice_u16","from_slice_u16","from_slice_u16","from_slice_u32","from_slice_u32","from_slice_u32","from_slice_u64","from_slice_u64","from_slice_u64","hash","hash","into","into","partial_cmp","partial_cmp","read_f32","read_f32_into","read_f32_into_unchecked","read_f64","read_f64_into","read_f64_into_unchecked","read_i128","read_i128_into","read_i16","read_i16_into","read_i24","read_i32","read_i32_into","read_i48","read_i64","read_i64_into","read_int","read_int128","read_u128","read_u128","read_u128","read_u128_into","read_u128_into","read_u128_into","read_u16","read_u16","read_u16","read_u16_into","read_u16_into","read_u16_into","read_u24","read_u32","read_u32","read_u32","read_u32_into","read_u32_into","read_u32_into","read_u48","read_u64","read_u64","read_u64","read_u64_into","read_u64_into","read_u64_into","read_uint","read_uint","read_uint","read_uint128","read_uint128","read_uint128","try_from","try_from","try_into","try_into","type_id","type_id","write_f32","write_f32_into","write_f64","write_f64_into","write_i128","write_i128_into","write_i16","write_i16_into","write_i24","write_i32","write_i32_into","write_i48","write_i64","write_i64_into","write_i8_into","write_int","write_int128","write_u128","write_u128","write_u128","write_u128_into","write_u128_into","write_u128_into","write_u16","write_u16","write_u16","write_u16_into","write_u16_into","write_u16_into","write_u24","write_u32","write_u32","write_u32","write_u32_into","write_u32_into","write_u32_into","write_u48","write_u64","write_u64","write_u64","write_u64_into","write_u64_into","write_u64_into","write_uint","write_uint","write_uint","write_uint128","write_uint128","write_uint128"],"q":["byteorder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A type alias for <code>BigEndian</code>.","Defines big-endian serialization.","<code>ByteOrder</code> describes types that can serialize integers as …","A type alias for <code>LittleEndian</code>.","Defines little-endian serialization.","Defines system native-endian serialization.","Defines network byte order serialization.","","","","","","","","","","","","","","","","","Converts the given slice of IEEE754 single-precision (4 …","","","Converts the given slice of IEEE754 double-precision (8 …","","","Converts the given slice of signed 128 bit integers to a …","Converts the given slice of signed 16 bit integers to a …","Converts the given slice of signed 32 bit integers to a …","Converts the given slice of signed 64 bit integers to a …","Converts the given slice of unsigned 128 bit integers to …","","","Converts the given slice of unsigned 16 bit integers to a …","","","Converts the given slice of unsigned 32 bit integers to a …","","","Converts the given slice of unsigned 64 bit integers to a …","","","","","","","","","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","Reads a IEEE754 double-precision (8 bytes) floating point …","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","Reads a signed 128 bit integer from <code>buf</code>.","Reads signed 128 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 16 bit integer from <code>buf</code>.","Reads signed 16 bit integers from <code>src</code> to <code>dst</code>.","Reads a signed 24 bit integer from <code>buf</code>, stored in i32.","Reads a signed 32 bit integer from <code>buf</code>.","Reads signed 32 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 48 bit integer from <code>buf</code>, stored in i64.","Reads a signed 64 bit integer from <code>buf</code>.","Reads signed 64 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed n-bytes integer from <code>buf</code>.","Reads a signed n-bytes integer from <code>buf</code>.","Reads an unsigned 128 bit integer from <code>buf</code>.","","","Reads unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","","","Reads an unsigned 16 bit integer from <code>buf</code>.","","","Reads unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","","","Reads an unsigned 24 bit integer from <code>buf</code>, stored in u32.","Reads an unsigned 32 bit integer from <code>buf</code>.","","","Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","","","Reads an unsigned 48 bit integer from <code>buf</code>, stored in u64.","Reads an unsigned 64 bit integer from <code>buf</code>.","","","Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","","","Reads an unsigned n-bytes integer from <code>buf</code>.","","","Reads an unsigned n-bytes integer from <code>buf</code>.","","","","","","","","","Writes a IEEE754 single-precision (4 bytes) floating …","Writes IEEE754 single-precision (4 bytes) floating point …","Writes a IEEE754 double-precision (8 bytes) floating …","Writes IEEE754 double-precision (8 bytes) floating point …","Writes a signed 128 bit integer <code>n</code> to <code>buf</code>.","Writes signed 128 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 16 bit integer <code>n</code> to <code>buf</code>.","Writes signed 16 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 24 bit integer <code>n</code> to <code>buf</code>, stored in i32.","Writes a signed 32 bit integer <code>n</code> to <code>buf</code>.","Writes signed 32 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 48 bit integer <code>n</code> to <code>buf</code>, stored in i64.","Writes a signed 64 bit integer <code>n</code> to <code>buf</code>.","Writes signed 64 bit integers from <code>src</code> into <code>dst</code>.","Writes signed 8 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes an unsigned 128 bit integer <code>n</code> to <code>buf</code>.","","","Writes unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 16 bit integer <code>n</code> to <code>buf</code>.","","","Writes unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 24 bit integer <code>n</code> to <code>buf</code>, stored in u32.","Writes an unsigned 32 bit integer <code>n</code> to <code>buf</code>.","","","Writes unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 48 bit integer <code>n</code> to <code>buf</code>, stored in u64.","Writes an unsigned 64 bit integer <code>n</code> to <code>buf</code>.","","","Writes unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","","","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","",""],"i":[0,0,0,0,0,0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,3,1,2,3,1,2,3,3,3,3,3,1,2,3,1,2,3,1,2,3,1,2,1,2,1,2,1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,2,3,1,2,3,1,2,3,1,2,3,3,1,2,3,1,2,3,3,1,2,3,1,2,3,1,2,3,1,2,1,2,1,2,1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,2,3,1,2,3,1,2,3,1,2,3,3,1,2,3,1,2,3,3,1,2,3,1,2,3,1,2,3,1,2],"f":[null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["bigendian",4]],[[],["littleendian",4]],[[["bigendian",4]],["ordering",4]],[[["littleendian",4]],["ordering",4]],[[],["bigendian",4]],[[],["littleendian",4]],[[["bigendian",4]],["bool",15]],[[["littleendian",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bigendian",4]],[["option",4,["ordering"]],["ordering",4]]],[[["littleendian",4]],[["option",4,["ordering"]],["ordering",4]]],[[],["f32",15]],[[]],[[]],[[],["f64",15]],[[]],[[]],[[],["i128",15]],[[]],[[],["i16",15]],[[]],[[],["i32",15]],[[],["i32",15]],[[]],[[],["i64",15]],[[],["i64",15]],[[]],[[["usize",15]],["i64",15]],[[["usize",15]],["i128",15]],[[],["u128",15]],[[],["u128",15]],[[],["u128",15]],[[]],[[]],[[]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[]],[[["usize",15]],["u64",15]],[[["usize",15]],["u64",15]],[[["usize",15]],["u64",15]],[[["usize",15]],["u128",15]],[[["usize",15]],["u128",15]],[[["usize",15]],["u128",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["f32",15]]],[[]],[[["f64",15]]],[[]],[[["i128",15]]],[[]],[[["i16",15]]],[[]],[[["i32",15]]],[[["i32",15]]],[[]],[[["i64",15]]],[[["i64",15]]],[[]],[[]],[[["usize",15],["i64",15]]],[[["usize",15],["i128",15]]],[[["u128",15]]],[[["u128",15]]],[[["u128",15]]],[[]],[[]],[[]],[[["u16",15]]],[[["u16",15]]],[[["u16",15]]],[[]],[[]],[[]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[]],[[]],[[]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[]],[[]],[[]],[[["u64",15],["usize",15]]],[[["u64",15],["usize",15]]],[[["u64",15],["usize",15]]],[[["usize",15],["u128",15]]],[[["usize",15],["u128",15]]],[[["usize",15],["u128",15]]]],"p":[[4,"BigEndian"],[4,"LittleEndian"],[8,"ByteOrder"]]},\
"cfg_if":{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","t":[14],"n":["cfg_if"],"q":["cfg_if"],"d":["The main macro provided by this crate. See crate …"],"i":[0],"f":[null],"p":[]},\
"font8x8":{"doc":"8x8 monochrome bitmap fonts for rendering","t":[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,17,17,17,17,17,17,17,17,17,17,12,12,17,17,17,3,3,3,3,17,3,17,3,17,3,17,3,17,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BASIC_FONTS","BASIC_UNICODE","BLOCK_FONTS","BLOCK_UNICODE","BOX_FONTS","BOX_UNICODE","GREEK_FONTS","GREEK_UNICODE","HIRAGANA_FONTS","HIRAGANA_UNICODE","LATIN_FONTS","LATIN_UNICODE","MISC_FONTS","MISC_UNICODE","SGA_FONTS","SGA_UNICODE","legacy","unicode","BASIC_LEGACY","BLOCK_LEGACY","BOX_LEGACY","CONTROL_LEGACY","GREEK_LEGACY","HIRAGANA_LEGACY","LATIN_LEGACY","MISC_LEGACY","NOTHING_TO_DISPLAY","SGA_LEGACY","0","1","BASIC_UNICODE","BLOCK_UNICODE","BOX_UNICODE","BasicFonts","BlockFonts","BoxFonts","FontUnicode","GREEK_UNICODE","GreekFonts","HIRAGANA_UNICODE","HiraganaFonts","LATIN_UNICODE","LatinFonts","MISC_UNICODE","MiscFonts","SGA_UNICODE","SgaFonts","UnicodeFonts","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_array","char","clone","default","default","default","default","default","default","default","default","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get","get","get","get","get","get","get","get","get","get_font","get_font","get_font","get_font","get_font","get_font","get_font","get_font","get_font","into","into","into","into","into","into","into","into","into","into_inner","is_whitespace","iter","iter","iter","iter","iter","iter","iter","iter","iter","ne","new","new","new","new","new","new","new","new","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["font8x8","","","","","","","","","","","","","","","","","","font8x8::legacy","","","","","","","","","","font8x8::unicode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A convenient constant for Basic Latin fonts (<code>U+0000</code> - …","A constant <code>[FontUnicode; 128]</code>, for Basic Latin fonts (…","A convenient constant for Block Element fonts (<code>U+2580</code> - …","A constant <code>[FontUnicode; 32]</code>, for Block Element fonts (…","A convenient constant for Box Element fonts (<code>U+2500</code> - …","A constant <code>[FontUnicode; 128]</code>, for Box Element fonts (…","A convenient constant for Greek fonts (<code>U+0390</code> - <code>U+03C9</code>), …","A constant <code>[FontUnicode; 128]</code>, for Greek fonts (<code>U+0390</code> - …","A convenient constant for Hiragana fonts (<code>U+3040</code> - <code>U+309F</code>…","A constant <code>[FontUnicode; 96]</code>, for Hiragana fonts (<code>U+3040</code> …","A convenient constant for Extended Latin fonts (<code>U+00A0</code> - …","A constant <code>[FontUnicode; 96]</code>, for Extended Latin fonts (…","A convenient constant for Miscellanous fonts (<code>U+20A7</code>, …","A constant <code>[FontUnicode; 10]</code>, for  Miscellanous fonts (…","A convenient constant for special SGA fonts (<code>U+E541</code> - …","A constant <code>[FontUnicode; 26]</code>, for special SGA fonts (…","Re-export the original <code>[u8; 8]</code> constants, taken from …","Unicode support for 8x8 fonts.","Contains raw-byte renderings for unicode points <code>U+0000</code> - …","Contains raw-byte renderings for unicode points <code>U+2580</code> - …","Contains raw-byte renderings for unicode points <code>U+2500</code> - …","Contains raw-byte renderings for unicode points <code>U+0080</code> - …","Contains raw-byte renderings for unicode points <code>U+0390</code> - …","Contains raw-byte renderings for unicode points <code>U+3040</code> - …","Contains raw-byte renderings for unicode points <code>U+00A0</code> - …","Contains raw-byte renderings for unicode points: <code>U+20A7</code>, …","Indicates all zeros, meaning nothing to render.","Contains raw-byte renderings for unicode points <code>U+E541</code> - …","","","A constant <code>[FontUnicode; 128]</code>, for Basic Latin fonts (…","A constant <code>[FontUnicode; 32]</code>, for Block Element fonts (…","A constant <code>[FontUnicode; 128]</code>, for Box Element fonts (…","Strong-typed collection wrapper for BASIC_UNICODE.","Strong-typed collection wrapper for BLOCK_UNICODE.","Strong-typed collection wrapper for BOX_UNICODE.","A single 8x8 font which supports <code>UTF-16</code> encoding/decoding.","A constant <code>[FontUnicode; 128]</code>, for Greek fonts (<code>U+0390</code> - …","Strong-typed collection wrapper for GREEK_UNICODE.","A constant <code>[FontUnicode; 96]</code>, for Hiragana fonts (<code>U+3040</code> …","Strong-typed collection wrapper for HIRAGANA_UNICODE.","A constant <code>[FontUnicode; 96]</code>, for Extended Latin fonts (…","Strong-typed collection wrapper for LATIN_UNICODE.","A constant <code>[FontUnicode; 10]</code>, for  Miscellanous fonts (…","Strong-typed collection wrapper for MISC_UNICODE.","A constant <code>[FontUnicode; 26]</code>, for special SGA fonts (…","Strong-typed collection wrapper for SGA_UNICODE.","A trait for collections of <code>FontUnicode</code>, which provide …","","","","","","","","","","","","","","","","","","","Return the <code>[u8; 8]</code>-representation for this font.","Return the char value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consumes the current <code>FontUnicode</code> and returns the inner …","Returns a <code>bool</code> indicating whether this font renders as a …","","","","","","","","","","","Create a new collection of <code>BASIC_UNICODE</code> fonts.","Create a new collection of <code>BLOCK_UNICODE</code> fonts.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,1,1,1,2,3,4,5,6,7,8,9,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,10,2,3,4,5,6,7,8,9,10,2,3,4,5,6,7,8,9,2,3,4,5,6,7,8,9,1,1,1,10,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["char",15]],[[],["fontunicode",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["basicfonts",3]],["bool",15]],[[["blockfonts",3]],["bool",15]],[[["boxfonts",3]],["bool",15]],[[["greekfonts",3]],["bool",15]],[[["hiraganafonts",3]],["bool",15]],[[["latinfonts",3]],["bool",15]],[[["miscfonts",3]],["bool",15]],[[["sgafonts",3]],["bool",15]],[[["fontunicode",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["char",15]],["option",4]],[[["char",15]],["option",4]],[[["char",15]],["option",4]],[[["char",15]],["option",4]],[[["char",15]],["option",4]],[[["char",15]],["option",4]],[[["char",15]],["option",4]],[[["char",15]],["option",4]],[[["char",15]],["option",4]],[[["char",15]],[["option",4,["fontunicode"]],["fontunicode",3]]],[[["char",15]],[["option",4,["fontunicode"]],["fontunicode",3]]],[[["char",15]],[["option",4,["fontunicode"]],["fontunicode",3]]],[[["char",15]],[["option",4,["fontunicode"]],["fontunicode",3]]],[[["char",15]],[["option",4,["fontunicode"]],["fontunicode",3]]],[[["char",15]],[["option",4,["fontunicode"]],["fontunicode",3]]],[[["char",15]],[["option",4,["fontunicode"]],["fontunicode",3]]],[[["char",15]],[["option",4,["fontunicode"]],["fontunicode",3]]],[[["char",15]],[["option",4,["fontunicode"]],["fontunicode",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],[["fontunicode",3],["iter",3,["fontunicode"]]]],[[],[["fontunicode",3],["iter",3,["fontunicode"]]]],[[],[["fontunicode",3],["iter",3,["fontunicode"]]]],[[],[["fontunicode",3],["iter",3,["fontunicode"]]]],[[],[["fontunicode",3],["iter",3,["fontunicode"]]]],[[],[["fontunicode",3],["iter",3,["fontunicode"]]]],[[],[["fontunicode",3],["iter",3,["fontunicode"]]]],[[],[["fontunicode",3],["iter",3,["fontunicode"]]]],[[],[["fontunicode",3],["iter",3,["fontunicode"]]]],[[["fontunicode",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"FontUnicode"],[3,"BasicFonts"],[3,"BlockFonts"],[3,"BoxFonts"],[3,"GreekFonts"],[3,"HiraganaFonts"],[3,"LatinFonts"],[3,"MiscFonts"],[3,"SgaFonts"],[8,"UnicodeFonts"]]},\
"hashbrown":{"doc":"This crate is a Rust port of Google’s high-performance …","t":[13,13,3,3,4,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,12,6,3,3,4,3,3,3,3,3,13,13,3,3,3,3,4,3,3,13,13,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,12,12,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AllocError","CapacityOverflow","HashMap","HashSet","TryReserveError","borrow","borrow_mut","clone","clone_into","eq","fmt","from","hash_map","hash_set","into","ne","to_owned","try_from","try_into","type_id","layout","DefaultHashBuilder","Drain","DrainFilter","Entry","HashMap","IntoIter","Iter","IterMut","Keys","Occupied","Occupied","OccupiedEntry","OccupiedError","RawEntryBuilder","RawEntryBuilderMut","RawEntryMut","RawOccupiedEntryMut","RawVacantEntryMut","Vacant","Vacant","VacantEntry","Values","ValuesMut","and_modify","and_modify","and_replace_entry_with","and_replace_entry_with","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","contains_key","default","drain","drain_filter","drop","entry","entry","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_hash","from_hash","from_iter","from_key","from_key","from_key_hashed_nocheck","from_key_hashed_nocheck","get","get","get","get_key_value","get_key_value","get_key_value_mut","get_key_value_mut","get_mut","get_mut","get_mut","hasher","index","insert","insert","insert","insert","insert","insert","insert","insert_hashed_nocheck","insert_key","insert_with_hasher","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_key","into_key","into_key_value","into_mut","into_mut","is_empty","iter","iter_mut","key","key","key","key","key_mut","keys","len","len","len","len","len","len","len","len","new","new_in","next","next","next","next","next","next","next","next","or_default","or_insert","or_insert","or_insert_with","or_insert_with","or_insert_with_key","raw_entry","raw_entry_mut","remove","remove","remove","remove_entry","remove_entry","remove_entry","replace_entry","replace_entry_with","replace_entry_with","replace_key","reserve","retain","shrink_to","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_insert","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","values","values_mut","with_capacity","with_capacity_and_hasher","with_capacity_and_hasher_in","with_capacity_in","with_hasher","with_hasher_in","0","0","0","0","Difference","Drain","DrainFilter","HashSet","Intersection","IntoIter","Iter","SymmetricDifference","Union","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","contains","default","difference","drain","drain_filter","drop","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_iter","get","get_or_insert","get_or_insert_owned","get_or_insert_with","hasher","insert","intersection","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_disjoint","is_empty","is_subset","is_superset","iter","len","len","len","len","new","new_in","next","next","next","next","next","next","next","next","remove","replace","reserve","retain","shrink_to","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","symmetric_difference","take","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","with_capacity","with_capacity_and_hasher","with_capacity_and_hasher_in","with_capacity_in","with_hasher","with_hasher_in"],"q":["hashbrown","","","","","","","","","","","","","","","","","","","","hashbrown::TryReserveError","hashbrown::hash_maphashbrown::hash_map::Entry","","hashbrown::hash_map::RawEntryMut","","hashbrown::hash_setd":["The memory allocator returned an error","Error due to the computed capacity exceeding the …","A hash map implemented with quadratic probing and SIMD …","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","The error type for <code>try_reserve</code> methods.","","","","","","","","A hash map implemented with quadratic probing and SIMD …","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","","","","","","","The layout of the allocation request that failed.","Default hasher for <code>HashMap</code>.","A draining iterator over the entries of a <code>HashMap</code>.","A draining iterator over entries of a <code>HashMap</code> which don’…","A view into a single entry in a map, which may either be …","A hash map implemented with quadratic probing and SIMD …","An owning iterator over the entries of a <code>HashMap</code>.","An iterator over the entries of a <code>HashMap</code>.","A mutable iterator over the entries of a <code>HashMap</code>.","An iterator over the keys of a <code>HashMap</code>.","An occupied entry.","An occupied entry.","A view into an occupied entry in a <code>HashMap</code>. It is part of …","The error returned by <code>try_insert</code> when the key already …","A builder for computing where in a <code>HashMap</code> a key-value …","A builder for computing where in a <code>HashMap</code> a key-value …","A view into a single entry in a map, which may either be …","A view into an occupied entry in a <code>HashMap</code>. It is part of …","A view into a vacant entry in a <code>HashMap</code>. It is part of …","A vacant entry.","A vacant entry.","A view into a vacant entry in a <code>HashMap</code>. It is part of …","An iterator over the values of a <code>HashMap</code>.","A mutable iterator over the values of a <code>HashMap</code>.","Provides in-place mutable access to an occupied entry …","Provides in-place mutable access to an occupied entry …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of elements the map can hold without …","Clears the map, removing all key-value pairs. Keeps the …","","","","","","","","","","Returns <code>true</code> if the map contains a value for the …","Creates an empty <code>HashMap&lt;K, V, S, A&gt;</code>, with the <code>Default</code> …","Clears the map, returning all key-value pairs as an …","Drains elements which are true under the given predicate, …","","Gets the given key’s corresponding entry in the map for …","The entry in the map that was already occupied.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>RawEntryMut</code> from the given hash.","Access an entry by hash.","","Creates a <code>RawEntryMut</code> from the given key.","Access an entry by key.","Creates a <code>RawEntryMut</code> from the given key and its hash.","Access an entry by a key and its hash.","Returns a reference to the value corresponding to the key.","Gets a reference to the value in the entry.","Gets a reference to the value in the entry.","Returns the key-value pair corresponding to the supplied …","Gets a reference to the key and value in the entry.","Returns the key-value pair corresponding to the supplied …","Gets a mutable reference to the key and value in the …","Returns a mutable reference to the value corresponding to …","Gets a mutable reference to the value in the entry.","Gets a mutable reference to the value in the entry.","Returns a reference to the map’s <code>BuildHasher</code>.","Returns a reference to the value corresponding to the …","Inserts a key-value pair into the map.","Sets the value of the entry, and returns a …","Sets the value of the entry, and returns the entry’s …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry, and returns an OccupiedEntry.","Sets the value of the entry, and returns the entry’s …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry, and returns the entry’s …","Set the value of an entry with a custom hasher function.","","","","","","","","","","","","","","","","","","","Creates a consuming iterator, that is, one that moves …","","","","","","","","","Converts the entry into a mutable reference to the key in …","Take ownership of the key.","Converts the OccupiedEntry into a mutable reference to …","Converts the OccupiedEntry into a mutable reference to …","Converts the OccupiedEntry into a mutable reference to …","Returns <code>true</code> if the map contains no elements.","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all key-value pairs in arbitrary …","Gets a reference to the key in the entry.","Returns a reference to this entry’s key.","Gets a reference to the key in the entry.","Gets a reference to the key that would be used when …","Gets a mutable reference to the key in the entry.","An iterator visiting all keys in arbitrary order. The …","Returns the number of elements in the map.","","","","","","","","Creates an empty <code>HashMap</code>.","Creates an empty <code>HashMap</code> using the given allocator.","","","","","","","","","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the result …","Ensures a value is in the entry by inserting the result …","Ensures a value is in the entry by inserting, if empty, …","Creates a raw immutable entry builder for the HashMap.","Creates a raw entry builder for the HashMap.","Removes a key from the map, returning the value at the …","Takes the value out of the entry, and returns it.","Takes the value out of the entry, and returns it.","Removes a key from the map, returning the stored key and …","Take the ownership of the key and value from the map.","Take the ownership of the key and value from the map.","Replaces the entry, returning the old key and value. The …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","Replaces the key in the hash map with the key used to …","Reserves capacity for at least <code>additional</code> more elements …","Retains only the elements specified by the predicate.","Shrinks the capacity of the map with a lower limit. It …","Shrinks the capacity of the map as much as possible. It …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to insert a key-value pair into the map, and returns…","","","","","","","","","","","","","","","","","","","Tries to reserve capacity for at least <code>additional</code> more …","","","","","","","","","","","","","","","","","","","The value which was not inserted, because the entry was …","An iterator visiting all values in arbitrary order. The …","An iterator visiting all values mutably in arbitrary …","Creates an empty <code>HashMap</code> with the specified capacity.","Creates an empty <code>HashMap</code> with the specified capacity, …","Creates an empty <code>HashMap</code> with the specified capacity, …","Creates an empty <code>HashMap</code> with the specified capacity …","Creates an empty <code>HashMap</code> which will use the given hash …","Creates an empty <code>HashMap</code> which will use the given hash …","","","","","A lazy iterator producing elements in the difference of …","A draining iterator over the items of a <code>HashSet</code>.","A draining iterator over entries of a <code>HashSet</code> which don’…","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","A lazy iterator producing elements in the intersection of …","An owning iterator over the items of a <code>HashSet</code>.","An iterator over the items of a <code>HashSet</code>.","A lazy iterator producing elements in the symmetric …","A lazy iterator producing elements in the union of <code>HashSet</code>…","","","","","","","","","","","","","","","","","","","Returns the number of elements the set can hold without …","Clears the set, removing all values.","","","","","","","","","","","","","","Returns <code>true</code> if the set contains a value.","Creates an empty <code>HashSet&lt;T, S&gt;</code> with the <code>Default</code> value for …","Visits the values representing the difference, i.e., the …","Clears the set, returning all elements in an iterator.","Drains elements which are true under the given predicate, …","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the value in the set, if any, that …","Inserts the given <code>value</code> into the set if it is not …","Inserts an owned copy of the given <code>value</code> into the set if …","Inserts a value computed from <code>f</code> into the set if the given …","Returns a reference to the set’s <code>BuildHasher</code>.","Adds a value to the set.","Visits the values representing the intersection, i.e., …","","","","","","","","","","Creates a consuming iterator, that is, one that moves …","","","","","","","","","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>.…","Returns <code>true</code> if the set contains no elements.","Returns <code>true</code> if the set is a subset of another, i.e., …","Returns <code>true</code> if the set is a superset of another, i.e., …","An iterator visiting all elements in arbitrary order. The …","Returns the number of elements in the set.","","","","Creates an empty <code>HashSet</code>.","Creates an empty <code>HashSet</code>.","","","","","","","","","Removes a value from the set. Returns whether the value …","Adds a value to the set, replacing the existing value, if …","Reserves capacity for at least <code>additional</code> more elements …","Retains only the elements specified by the predicate.","Shrinks the capacity of the set with a lower limit. It …","Shrinks the capacity of the set as much as possible. It …","","","","","","","","","Visits the values representing the symmetric difference, …","Removes and returns the value in the set, if any, that is …","","","","","","","","","","","","","","","","","","","","","","","","","Tries to reserve capacity for at least <code>additional</code> more …","","","","","","","","","","Visits the values representing the union, i.e., all the …","Creates an empty <code>HashSet</code> with the specified capacity.","Creates an empty <code>HashSet</code> with the specified capacity, …","Creates an empty <code>HashSet</code> with the specified capacity, …","Creates an empty <code>HashSet</code> with the specified capacity.","Creates a new empty hash set which will use the given …","Creates a new empty hash set which will use the given …"],"i":[1,1,0,0,0,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,3,4,0,0,0,0,0,0,0,3,4,0,0,0,3,4,3,4,5,6,7,8,9,10,11,12,13,14,3,15,16,17,4,18,19,20,5,6,7,8,9,10,11,12,13,14,3,15,16,17,4,18,19,20,5,5,5,6,9,10,5,5,6,9,10,5,5,5,5,12,5,20,5,5,5,5,6,7,8,9,10,11,13,14,3,15,16,17,4,18,19,20,20,5,6,7,8,9,10,11,12,13,14,3,15,16,17,4,18,19,20,14,17,5,14,17,14,17,5,15,18,5,15,5,15,5,15,18,5,5,5,3,15,16,4,18,19,16,15,16,5,6,7,8,9,10,11,12,13,14,3,15,16,17,4,18,19,20,5,6,7,8,9,10,11,12,13,15,19,15,15,18,5,5,5,15,4,18,19,15,5,5,6,7,8,9,10,11,13,5,5,6,7,8,9,10,11,12,13,4,3,4,3,4,4,5,5,5,15,18,5,15,18,18,15,18,18,5,5,5,5,6,7,8,9,10,11,12,13,5,6,9,10,20,5,6,7,8,9,10,11,12,13,14,3,15,16,17,4,18,19,20,5,5,6,7,8,9,10,11,12,13,14,3,15,16,17,4,18,19,20,5,5,6,7,8,9,10,11,12,13,14,3,15,16,17,4,18,19,20,20,5,5,5,5,5,5,5,5,21,22,23,24,0,0,0,0,0,0,0,0,0,25,26,27,28,29,30,31,32,33,25,26,27,28,29,30,31,32,33,25,25,25,26,30,31,32,33,25,25,26,30,31,32,33,25,25,25,25,25,29,25,25,25,25,26,27,28,30,31,32,33,25,25,26,27,28,29,30,31,32,33,25,25,25,25,25,25,25,25,25,26,27,28,29,30,31,32,33,25,26,27,28,29,30,31,32,33,25,25,25,25,25,25,26,27,28,25,25,26,27,28,29,30,31,32,33,25,25,25,25,25,25,26,27,28,29,30,31,32,33,25,25,25,26,30,31,32,33,25,26,27,28,29,30,31,32,33,25,26,27,28,29,30,31,32,33,25,25,26,27,28,29,30,31,32,33,25,25,25,25,25,25,25],"f":[null,null,null,null,null,[[]],[[]],[[],["tryreserveerror",4]],[[]],[[["tryreserveerror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],null,null,[[]],[[["tryreserveerror",4]],["bool",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[],["drain",3]],[[],["drainfilter",3]],[[]],[[],["entry",4]],null,[[],["bool",15]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",15]],["rawentrymut",4]],[[["u64",15]],["option",4]],[[["intoiterator",8]]],[[],["rawentrymut",4]],[[],["option",4]],[[["u64",15]],["rawentrymut",4]],[[["u64",15]],["option",4]],[[],["option",4]],[[]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["rawoccupiedentrymut",3]],[[]],[[]],[[],["occupiedentry",3]],[[]],[[]],[[["u64",15]]],[[]],[[["u64",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["intoiter",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["iter",3]],[[],["itermut",3]],[[]],[[]],[[]],[[]],[[]],[[],["keys",3]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[["fnonce",8]]],[[["fnonce",8]]],[[],["rawentrybuilder",3]],[[],["rawentrybuildermut",3]],[[],["option",4]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[],["rawentrymut",4]],[[],["entry",4]],[[]],[[["usize",15]]],[[]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["occupiederror",3],["result",4,["occupiederror"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]],[["result",4,["tryreserveerror"]],["tryreserveerror",4]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[],["values",3]],[[],["valuesmut",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[],["difference",3]],[[],["drain",3]],[[],["drainfilter",3]],[[]],[[],["bool",15]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["hashmap",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["intoiterator",8]]],[[],["option",4]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["intersection",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["intoiter",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["iter",3]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["bool",15]],[[],["option",4]],[[["usize",15]]],[[]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["symmetricdifference",3]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]],[["result",4,["tryreserveerror"]],["tryreserveerror",4]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["union",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]]],"p":[[4,"TryReserveError"],[13,"AllocError"],[4,"RawEntryMut"],[4,"Entry"],[3,"HashMap"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"Drain"],[3,"DrainFilter"],[3,"ValuesMut"],[3,"RawEntryBuilderMut"],[3,"RawOccupiedEntryMut"],[3,"RawVacantEntryMut"],[3,"RawEntryBuilder"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"OccupiedError"],[13,"Occupied"],[13,"Vacant"],[13,"Occupied"],[13,"Vacant"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"DrainFilter"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"]]},\
"intrusive_collections":{"doc":"Intrusive collections for Rust.","t":[8,4,8,3,13,13,16,8,8,16,16,18,18,16,16,8,16,13,3,16,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,14,10,10,0,11,11,14,10,0,10,0,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,3,3,3,3,3,3,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,3,3,4,3,3,3,3,3,13,3,8,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,10,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,3,3,3,3,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Adapter","Bound","DefaultLinkOps","DefaultPointerOps","Excluded","Included","Key","KeyAdapter","LinkOps","LinkOps","LinkPtr","NEW","NEW","Ops","Pointer","PointerOps","PointerOps","Unbounded","UnsafeRef","Value","acquire_link","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","container_of","default","deref","eq","fmt","fmt","from","from","from","from_box","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","get_key","get_link","get_value","hash","into","into","into","into_box","into_raw","into_raw","into_raw","into_raw","into_raw","into_raw","into_raw","into_raw","into_raw","into_raw","into_raw","into_raw","intrusive_adapter","link_ops","link_ops_mut","linked_list","ne","new","offset_of","pointer_ops","rbtree","release_link","singly_linked_list","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","xor_linked_list","0","0","Cursor","CursorMut","IntoIter","Iter","Link","LinkOps","LinkedList","LinkedListOps","acquire_link","as_cursor","back","back_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_pointer","cursor","cursor_from_ptr","cursor_mut","cursor_mut_from_ptr","default","default","default","drop","fast_clear","fmt","fmt","force_unlink","from","from","from","from","from","from","from","front","front_mut","get","get","insert_after","insert_before","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_empty","is_linked","is_null","is_null","iter","move_next","move_next","move_prev","move_prev","new","new","next","next","next","next","next","next","next_back","next_back","peek_next","peek_next","peek_prev","peek_prev","pop_back","pop_front","prev","prev","prev","push_back","push_front","release_link","remove","replace_next_or_prev","replace_with","set","set_next","set_next","set_next","set_prev","set_prev","splice_after","splice_before","split_after","split_before","take","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Black","Color","Cursor","CursorMut","Entry","InsertCursor","IntoIter","Iter","Link","LinkOps","Occupied","RBTree","RBTreeOps","Red","Vacant","acquire_link","as_cursor","back","back_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_pointer","color","color","cursor","cursor_from_ptr","cursor_mut","cursor_mut_from_ptr","default","default","default","drop","entry","eq","fast_clear","find","find_mut","fmt","fmt","fmt","force_unlink","from","from","from","from","from","from","from","from","from","from","front","front_mut","get","get","insert","insert","insert","insert_after","insert_before","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_empty","is_linked","is_null","is_null","iter","left","left","lower_bound","lower_bound_mut","move_next","move_next","move_prev","move_prev","new","new","next","next","next","next","next","next_back","next_back","or_insert","or_insert_with","parent","parent","peek_next","peek_next","peek_prev","peek_prev","prev","prev","range","release_link","remove","replace_next_or_prev","replace_with","right","right","set","set_color","set_color","set_left","set_left","set_next","set_next","set_parent","set_parent","set_prev","set_right","set_right","take","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upper_bound","upper_bound_mut","0","0","Cursor","CursorMut","IntoIter","Iter","Link","LinkOps","SinglyLinkedList","SinglyLinkedListOps","acquire_link","as_cursor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_pointer","cursor","cursor_from_ptr","cursor_mut","cursor_mut_from_ptr","default","default","default","drop","fast_clear","fmt","fmt","force_unlink","from","from","from","from","from","from","from","front","front_mut","get","get","insert_after","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_empty","is_linked","is_null","is_null","iter","move_next","move_next","new","new","next","next","next","next","next","peek_next","peek_next","pop_front","prev","push_front","release_link","remove_next","replace_next_or_prev","replace_next_with","set","set_next","set_next","splice_after","split_after","take","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Cursor","CursorMut","IntoIter","Iter","Link","LinkOps","XorLinkedList","XorLinkedListOps","acquire_link","as_cursor","back","back_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_pointer","cursor","cursor_from_ptr_and_next","cursor_from_ptr_and_prev","cursor_mut","cursor_mut_from_ptr_and_next","cursor_mut_from_ptr_and_prev","default","default","default","drop","fast_clear","fmt","fmt","force_unlink","from","from","from","from","from","from","from","front","front_mut","get","get","insert_after","insert_before","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_empty","is_linked","is_null","is_null","iter","move_next","move_next","move_prev","move_prev","new","new","next","next","next","next","next","next_back","next_back","peek_next","peek_next","peek_prev","peek_prev","pop_back","pop_front","prev","prev","push_back","push_front","release_link","remove","replace_next_or_prev","replace_next_or_prev","replace_with","reverse","set","set","set_next","splice_after","splice_before","split_after","split_before","take","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["intrusive_collections","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","intrusive_collections::Bound","","intrusive_collections::linked_list","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","intrusive_collections::rbtreeintrusive_collections::rbtree::Entry","","intrusive_collections::singly_linked_list","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","intrusive_collections::xor_linked_list","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Trait for a adapter which allows a type to be inserted …","An endpoint of a range of keys.","The default implementation of <code>LinkOps</code> associated with a …","The <code>PointerOps</code> type used by an <code>Adapter</code> generated by …","An exclusive bound.","An inclusive bound.","Type of the key returned by <code>get_key</code>.","Extension of the <code>Adapter</code> trait to provide a way of …","Base trait for link operations.","Collection-specific link operations which allow an object …","The link pointer type.","The associated constant that represents <code>Ops::default()</code>.","The associated constant that represents <code>Ops::default()</code>.","The default link operations.","Pointer type which owns an instance of a value.","Trait for pointer conversion operations.","Collection-specific pointer conversions which allow an …","An infinite endpoint. Indicates that there is no bound in …","Unchecked shared pointer","Object type which is inserted into an intrusive …","Attempts to acquire ownership of a link so that it can be …","","","","","","","","","","","","","","","Unsafe macro to get a raw pointer to an outer object from …","","","","","","","","","Creates an <code>UnsafeRef</code> from a <code>Box</code>","Constructs an owned pointer from a raw pointer.","Creates an <code>UnsafeRef</code> from a raw pointer","","","","","","","","","","","Gets the key for the given object.","Gets a reference to the link for the given object.","Gets a reference to an object from a reference to a link …","","","","","Converts an <code>UnsafeRef</code> into a <code>Box</code>","Consumes the owned pointer and returns a raw pointer to …","Converts an <code>UnsafeRef</code> into a raw pointer","","","","","","","","","","","Macro to generate an implementation of <code>Adapter</code> for a …","Returns a reference to the link operations.","Returns a reference to the mutable link operations.","Intrusive doubly-linked list.","","Constructs an instance of <code>DefaultPointerOps</code>.","Calculates the offset of the specified field from the …","Returns a reference to the pointer converter.","Intrusive red-black tree.","Releases ownership of a link that was previously acquired …","Intrusive singly-linked list.","","","","","","","","","","","","","Intrusive xor doubly-linked list which uses less memory …","","","A cursor which provides read-only access to a <code>LinkedList</code>.","A cursor which provides mutable access to a <code>LinkedList</code>.","An iterator which consumes a <code>LinkedList</code>.","An iterator over references to the items of a <code>LinkedList</code>.","Intrusive link that allows an object to be inserted into a…","Default <code>LinkOps</code> implementation for <code>LinkedList</code>.","An intrusive doubly-linked list.","Link operations for <code>LinkedList</code>.","","Returns a read-only cursor pointing to the current …","Returns a <code>Cursor</code> pointing to the last element of the …","Returns a <code>CursorMut</code> pointing to the last element of the …","","","","","","","","","","","","","","","Removes all elements from the <code>LinkedList</code>.","","","","","","","","","Clones and returns the pointer that points to the element …","Returns a null <code>Cursor</code> for this list.","Creates a <code>Cursor</code> from a pointer to an element.","Returns a null <code>CursorMut</code> for this list.","Creates a <code>CursorMut</code> from a pointer to an element.","","","","","Empties the <code>LinkedList</code> without unlinking or freeing …","","","Forcibly unlinks an object from a <code>LinkedList</code>.","","","","","","","","Returns a <code>Cursor</code> pointing to the first element of the …","Returns a <code>CursorMut</code> pointing to the first element of the …","Returns a reference to the object that the cursor is …","Returns a reference to the object that the cursor is …","Inserts a new element into the <code>LinkedList</code> after the …","Inserts a new element into the <code>LinkedList</code> before the …","","","","","","","","","","","Returns <code>true</code> if the <code>LinkedList</code> is empty.","Checks whether the <code>Link</code> is linked into a <code>LinkedList</code>.","Checks if the cursor is currently pointing to the null …","Checks if the cursor is currently pointing to the null …","Gets an iterator over the objects in the <code>LinkedList</code>.","Moves the cursor to the next element of the <code>LinkedList</code>.","Moves the cursor to the next element of the <code>LinkedList</code>.","Moves the cursor to the previous element of the <code>LinkedList</code>…","Moves the cursor to the previous element of the <code>LinkedList</code>…","Creates a new <code>Link</code>.","Creates an empty <code>LinkedList</code>.","Returns the “next” link pointer of <code>ptr</code>.","","","","","","","","Returns a cursor pointing to the next element of the …","Returns a cursor pointing to the next element of the …","Returns a cursor pointing to the previous element of the …","Returns a cursor pointing to the previous element of the …","Removes the last element of the <code>LinkedList</code>.","Removes the first element of the <code>LinkedList</code>.","Returns the “prev” link pointer of <code>ptr</code>.","","","Inserts a new element at the end of the <code>LinkedList</code>.","Inserts a new element at the start of the <code>LinkedList</code>.","","Removes the current element from the <code>LinkedList</code>.","","Removes the current element from the <code>LinkedList</code> and …","","Sets the “next” link pointer of <code>ptr</code>.","","","Sets the “prev” link pointer of <code>ptr</code>.","","Inserts the elements from the given <code>LinkedList</code> after the …","Moves all element from the given <code>LinkedList</code> before the …","Splits the list into two after the current element. This …","Splits the list into two before the current element. This …","Takes all the elements out of the <code>LinkedList</code>, leaving it …","","","","","","","","","","","","","","","","","","","","","","","","","","","The color of a red-black tree node.","A cursor which provides read-only access to a <code>RBTree</code>.","A cursor which provides mutable access to a <code>RBTree</code>.","An entry in a <code>RBTree</code>.","A cursor pointing to a slot in which an element can be …","An iterator which consumes a <code>RBTree</code>.","An iterator over references to the items of a <code>RBTree</code>.","Intrusive link that allows an object to be inserted into a…","Default <code>LinkOps</code> implementation for <code>RBTree</code>.","An occupied entry.","An intrusive red-black tree.","Link operations for <code>RBTree</code>.","","A vacant entry.","","Returns a read-only cursor pointing to the current …","Returns a <code>Cursor</code> pointing to the last element of the …","Returns a <code>CursorMut</code> pointing to the last element of the …","","","","","","","","","","","","","","","","","","","","","Removes all elements from the <code>RBTree</code>.","","","","","","","","","","","Clones and returns the pointer that points to the element …","Returns the color of <code>ptr</code>.","","Returns a null <code>Cursor</code> for this tree.","Creates a <code>Cursor</code> from a pointer to an element.","Returns a null <code>CursorMut</code> for this tree.","Creates a <code>CursorMut</code> from a pointer to an element.","","","","","Returns an <code>Entry</code> for the given key which contains a …","","Empties the <code>RBTree</code> without unlinking or freeing objects …","Returns a <code>Cursor</code> pointing to an element with the given …","Returns a <code>CursorMut</code> pointing to an element with the given …","","","","Forcibly unlinks an object from a <code>RBTree</code>.","","","","","","","","","","","Returns a <code>Cursor</code> pointing to the first element of the …","Returns a <code>CursorMut</code> pointing to the first element of the …","Returns a reference to the object that the cursor is …","Returns a reference to the object that the cursor is …","Inserts a new element into the <code>RBTree</code>.","Inserts a new element into the <code>RBTree</code>.","Inserts a new element into the <code>RBTree</code> at the location …","Inserts a new element into the <code>RBTree</code> after the current …","Inserts a new element into the <code>RBTree</code> before the current …","","","","","","","","","","","","","","Returns <code>true</code> if the <code>RBTree</code> is empty.","Checks whether the <code>Link</code> is linked into a <code>RBTree</code>.","Checks if the cursor is currently pointing to the null …","Checks if the cursor is currently pointing to the null …","Gets an iterator over the objects in the <code>RBTree</code>.","Returns the left child of <code>ptr</code>.","","Returns a <code>Cursor</code> pointing to the lowest element whose key …","Returns a <code>CursorMut</code> pointing to the first element whose …","Moves the cursor to the next element of the <code>RBTree</code>.","Moves the cursor to the next element of the <code>RBTree</code>.","Moves the cursor to the previous element of the <code>RBTree</code>.","Moves the cursor to the previous element of the <code>RBTree</code>.","Creates a new <code>Link</code>.","Creates an empty <code>RBTree</code>.","","","","","","","","Inserts an element into the <code>RBTree</code> if the entry is …","Calls the given function and inserts the result into the …","Returns the parent of <code>ptr</code>.","","Returns a cursor pointing to the next element of the …","Returns a cursor pointing to the next element of the …","Returns a cursor pointing to the previous element of the …","Returns a cursor pointing to the previous element of the …","","","Constructs a double-ended iterator over a sub-range of …","","Removes the current element from the <code>RBTree</code>.","","Removes the current element from the <code>RBTree</code> and inserts …","Returns the right child of <code>ptr</code>.","","","Sets the color of <code>ptr</code>.","","Sets the left child of <code>ptr</code>.","","","","Sets the parent of <code>ptr</code>.","","","Sets the right child of <code>ptr</code>.","","Takes all the elements out of the <code>RBTree</code>, leaving it …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a <code>Cursor</code> pointing to the last element whose key …","Returns a <code>CursorMut</code> pointing to the last element whose …","","","A cursor which provides read-only access to a …","A cursor which provides mutable access to a …","An iterator which consumes a <code>SinglyLinkedList</code>.","An iterator over references to the items of a …","Intrusive link that allows an object to be inserted into a…","Default <code>LinkOps</code> implementation for <code>SinglyLinkedList</code>.","An intrusive singly-linked list.","Link operations for <code>SinglyLinkedList</code>.","","Returns a read-only cursor pointing to the current …","","","","","","","","","","","","","","","Removes all elements from the <code>SinglyLinkedList</code>.","","","","","","","","","Clones and returns the pointer that points to the element …","Returns a null <code>Cursor</code> for this list.","Creates a <code>Cursor</code> from a pointer to an element.","Returns a null <code>CursorMut</code> for this list.","Creates a <code>CursorMut</code> from a pointer to an element.","","","","","Empties the <code>SinglyLinkedList</code> without unlinking or freeing …","","","Forcibly unlinks an object from a <code>SinglyLinkedList</code>.","","","","","","","","Returns a <code>Cursor</code> pointing to the first element of the …","Returns a <code>CursorMut</code> pointing to the first element of the …","Returns a reference to the object that the cursor is …","Returns a reference to the object that the cursor is …","Inserts a new element into the <code>SinglyLinkedList</code> after the …","","","","","","","","","","","Returns <code>true</code> if the <code>SinglyLinkedList</code> is empty.","Checks whether the <code>Link</code> is linked into a <code>SinglyLinkedList</code>.","Checks if the cursor is currently pointing to the null …","Checks if the cursor is currently pointing to the null …","Gets an iterator over the objects in the <code>SinglyLinkedList</code>.","Moves the cursor to the next element of the …","Moves the cursor to the next element of the …","Creates a new <code>Link</code>.","Creates an empty <code>SinglyLinkedList</code>.","Returns the “next” link pointer of <code>ptr</code>.","","","","","Returns a cursor pointing to the next element of the …","Returns a cursor pointing to the next element of the …","Removes the first element of the <code>SinglyLinkedList</code>.","","Inserts a new element at the start of the <code>SinglyLinkedList</code>…","","Removes the next element from the <code>SinglyLinkedList</code>.","","Removes the next element from the <code>SinglyLinkedList</code> and …","","Sets the “next” link pointer of <code>ptr</code>.","","Inserts the elements from the given <code>SinglyLinkedList</code> …","Splits the list into two after the current element. This …","Takes all the elements out of the <code>SinglyLinkedList</code>, …","","","","","","","","","","","","","","","","","","","","","","","","","","A cursor which provides read-only access to a …","A cursor which provides mutable access to a <code>XorLinkedList</code>.","An iterator which consumes a <code>XorLinkedList</code>.","An iterator over references to the items of a …","Intrusive link that allows an object to be inserted into a…","Default <code>LinkOps</code> implementation for <code>XorLinkedList</code>.","Intrusive xor doubly-linked list which uses less memory …","Link operations for <code>XorLinkedList</code>.","","Returns a read-only cursor pointing to the current …","Returns a <code>Cursor</code> pointing to the last element of the …","Returns a <code>CursorMut</code> pointing to the last element of the …","","","","","","","","","","","","","","","Removes all elements from the <code>XorLinkedList</code>.","","","","","","","","","Clones and returns the pointer that points to the element …","Returns a null <code>Cursor</code> for this list.","Creates a <code>Cursor</code> from a pointer to an element and a …","Creates a <code>Cursor</code> from a pointer to an element and a …","Returns a null <code>CursorMut</code> for this list.","Creates a <code>CursorMut</code> from a pointer to an element and a …","Creates a <code>CursorMut</code> from a pointer to an element and a …","","","","","Empties the <code>XorLinkedList</code> without unlinking or freeing …","","","Forcibly unlinks an object from a <code>XorLinkedList</code>.","","","","","","","","Returns a <code>Cursor</code> pointing to the first element of the …","Returns a <code>CursorMut</code> pointing to the first element of the …","Returns a reference to the object that the cursor is …","Returns a reference to the object that the cursor is …","Inserts a new element into the <code>XorLinkedList</code> after the …","Inserts a new element into the <code>XorLinkedList</code> before the …","","","","","","","","","","","Returns <code>true</code> if the <code>XorLinkedList</code> is empty.","Checks whether the <code>Link</code> is linked into a <code>XorLinkedList</code>.","Checks if the cursor is currently pointing to the null …","Checks if the cursor is currently pointing to the null …","Gets an iterator over the objects in the <code>XorLinkedList</code>.","Moves the cursor to the next element of the <code>XorLinkedList</code>.","Moves the cursor to the next element of the <code>XorLinkedList</code>.","Moves the cursor to the previous element of the …","Moves the cursor to the previous element of the …","Creates a new <code>Link</code>.","Creates an empty <code>XorLinkedList</code>.","Returns the “next” link pointer of <code>ptr</code>.","","","","","","","Returns a cursor pointing to the next element of the …","Returns a cursor pointing to the next element of the …","Returns a cursor pointing to the previous element of the …","Returns a cursor pointing to the previous element of the …","Removes the last element of the <code>XorLinkedList</code>.","Removes the first element of the <code>XorLinkedList</code>.","Returns the “prev” link pointer of <code>ptr</code>.","","Inserts a new element at the end of the <code>XorLinkedList</code>.","Inserts a new element at the start of the <code>XorLinkedList</code>.","","Removes the current element from the <code>XorLinkedList</code>.","Replaces the “next” or “prev” link pointer of <code>ptr</code>.","","Removes the current element from the <code>XorLinkedList</code> and …","Reverses the list in-place.","Assigns the “prev” and “next” link pointers of <code>ptr</code>…","","","Inserts the elements from the given <code>XorLinkedList</code> after …","Moves all element from the given <code>XorLinkedList</code> before the …","Splits the list into two after the current element. This …","Splits the list into two before the current element. This …","Takes all the elements out of the <code>XorLinkedList</code>, leaving …","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,1,2,0,0,3,4,5,5,5,6,0,3,1,0,6,4,7,7,7,8,1,7,8,1,7,8,1,7,8,1,0,8,7,1,7,1,7,8,1,7,6,7,8,8,8,8,8,8,8,8,8,8,2,3,3,1,7,8,1,7,6,7,8,8,8,8,8,8,8,8,8,8,0,3,3,0,1,8,0,3,0,4,0,7,8,1,7,8,1,7,8,1,7,8,1,0,9,10,0,0,0,0,0,0,0,0,11,12,13,13,14,15,12,13,16,17,11,14,15,12,13,16,17,11,13,14,15,16,11,14,15,16,11,15,13,13,13,13,14,13,11,13,13,14,13,14,14,15,12,13,16,17,11,13,13,15,12,12,12,14,15,12,13,16,17,11,13,16,17,13,14,15,12,13,15,12,15,12,14,13,18,16,17,11,11,11,16,17,15,12,15,12,13,13,18,11,11,13,13,11,12,11,12,11,18,11,11,18,11,12,12,12,12,13,14,15,16,11,14,15,12,13,16,17,11,14,15,12,13,16,17,11,14,15,12,13,16,17,11,19,0,0,0,0,0,0,0,0,0,20,0,0,19,20,21,22,23,23,24,25,22,23,26,20,27,28,19,21,24,25,22,23,26,20,27,28,19,21,23,24,25,27,19,21,24,25,27,19,21,25,29,21,23,23,23,23,24,23,21,23,23,19,23,23,23,24,23,19,24,24,25,22,23,26,20,27,28,19,21,23,23,25,22,22,23,26,22,22,24,25,22,23,26,20,27,28,19,21,23,27,28,23,24,25,22,23,29,21,23,23,25,22,25,22,24,23,27,28,21,21,21,27,28,20,20,29,21,25,22,25,22,21,21,23,21,22,21,22,29,21,21,29,21,29,21,21,21,29,21,21,29,21,23,24,25,27,19,21,24,25,22,23,26,20,27,28,19,21,24,25,22,23,26,20,27,28,19,21,24,25,22,23,26,20,27,28,19,21,23,23,30,31,0,0,0,0,0,0,0,0,32,33,34,35,33,36,37,38,32,34,35,33,36,37,38,32,36,34,35,37,32,34,35,37,32,35,36,36,36,36,34,36,32,36,36,34,36,34,34,35,33,36,37,38,32,36,36,35,33,33,34,35,33,36,37,38,32,36,37,38,36,34,35,33,36,35,33,34,36,39,37,38,32,32,35,33,36,32,36,32,33,32,33,32,39,32,33,33,36,34,35,37,32,34,35,33,36,37,38,32,34,35,33,36,37,38,32,34,35,33,36,37,38,32,0,0,0,0,0,0,0,0,40,41,42,42,43,44,41,42,45,46,40,43,44,41,42,45,46,40,42,43,44,45,40,43,44,45,40,44,42,42,42,42,42,42,43,42,40,42,42,43,42,43,43,44,41,42,45,46,40,42,42,44,41,41,41,43,44,41,42,45,46,40,42,45,46,42,43,44,41,42,44,41,44,41,43,42,47,45,46,40,40,45,46,44,41,44,41,42,42,47,40,42,42,40,41,47,40,41,42,47,40,40,41,41,41,41,42,43,44,45,40,43,44,41,42,45,46,40,43,44,41,42,45,46,40,43,44,41,42,45,46,40],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["unsaferef",3]],[[]],[[],["bound",4]],[[]],[[]],[[]],null,[[]],[[]],[[["bound",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["box",3]],["unsaferef",3]],[[]],[[],["unsaferef",3]],[[],[["pin",3,["unsaferef"]],["unsaferef",3]]],[[],["arc",3]],[[],["rc",3]],[[],[["pin",3,["rc"]],["rc",3]]],[[],[["pin",3,["box"]],["box",3]]],[[],["unsaferef",3]],[[],["pin",3]],[[]],[[],["box",3]],[[],[["arc",3],["pin",3,["arc"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["box",3]],[[]],[[]],[[["pin",3,["rc"]],["rc",3]]],[[["unsaferef",3]]],[[]],[[["pin",3]]],[[["pin",3,["arc"]],["arc",3]]],[[["pin",3,["box"]],["box",3]]],[[["rc",3]]],[[["pin",3,["unsaferef"]],["unsaferef",3]]],[[["arc",3]]],[[["box",3]]],null,[[]],[[]],null,[[["bound",4]],["bool",15]],[[],["defaultpointerops",3]],null,[[]],null,[[]],null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[],["cursor",3]],[[],["cursor",3]],[[],["cursormut",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["link",3]],[[],["cursor",3]],[[],["iter",3]],[[],["linkops",3]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["cursor",3]],[[],["cursor",3]],[[],["cursormut",3]],[[],["cursormut",3]],[[],["link",3]],[[],["linkedlist",3]],[[],["linkops",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["cursor",3]],[[],["cursormut",3]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["intoiter",3]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["iter",3]],[[]],[[]],[[]],[[]],[[],["link",3]],[[],["linkedlist",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["option",4]],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["cursor",3]],[[],["cursor",3]],[[],["cursor",3]],[[],["cursor",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["option",4]],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[],["option",4]],[[["option",4]]],[[],["result",4]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["linkedlist",3]]],[[["linkedlist",3]]],[[],["linkedlist",3]],[[],["linkedlist",3]],[[],["linkedlist",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[],["cursor",3]],[[],["cursor",3]],[[],["cursormut",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["link",3]],[[],["cursor",3]],[[],["iter",3]],[[],["color",4]],[[],["linkops",3]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["color",4]],[[],["color",4]],[[],["cursor",3]],[[],["cursor",3]],[[],["cursormut",3]],[[],["cursormut",3]],[[],["link",3]],[[],["rbtree",3]],[[],["linkops",3]],[[]],[[],["entry",4]],[[["color",4]],["bool",15]],[[]],[[],["cursor",3]],[[],["cursormut",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["cursor",3]],[[],["cursormut",3]],[[],["option",4]],[[],["option",4]],[[]],[[],["cursormut",3]],[[],["cursormut",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["intoiter",3]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["iter",3]],[[],["option",4]],[[],["option",4]],[[["bound",4]],["cursor",3]],[[["bound",4]],["cursormut",3]],[[]],[[]],[[]],[[]],[[],["link",3]],[[],["rbtree",3]],[[],["option",4]],[[],["option",4]],[[["option",4]],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["cursormut",3]],[[],["cursormut",3]],[[],["option",4]],[[],["option",4]],[[],["cursor",3]],[[],["cursor",3]],[[],["cursor",3]],[[],["cursor",3]],[[],["option",4]],[[["option",4]],["option",4]],[[["bound",4],["bound",4]],["iter",3]],[[]],[[],["option",4]],[[["option",4]]],[[],["result",4]],[[],["option",4]],[[],["option",4]],[[["option",4]]],[[["color",4]]],[[["color",4]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[],["rbtree",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["bound",4]],["cursor",3]],[[["bound",4]],["cursormut",3]],null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[],["cursor",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["link",3]],[[],["cursor",3]],[[],["iter",3]],[[],["linkops",3]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["cursor",3]],[[],["cursor",3]],[[],["cursormut",3]],[[],["cursormut",3]],[[],["link",3]],[[],["singlylinkedlist",3]],[[],["linkops",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["cursor",3]],[[],["cursormut",3]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["intoiter",3]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["iter",3]],[[]],[[]],[[],["link",3]],[[],["singlylinkedlist",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["option",4]],["option",4]],[[],["cursor",3]],[[],["cursor",3]],[[],["option",4]],[[["option",4]],["option",4]],[[]],[[]],[[],["option",4]],[[["option",4]]],[[],["result",4]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["singlylinkedlist",3]]],[[],["singlylinkedlist",3]],[[],["singlylinkedlist",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,[[],["bool",15]],[[],["cursor",3]],[[],["cursor",3]],[[],["cursormut",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["link",3]],[[],["cursor",3]],[[],["iter",3]],[[],["linkops",3]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["cursor",3]],[[],["cursor",3]],[[],["cursor",3]],[[],["cursormut",3]],[[],["cursormut",3]],[[],["cursormut",3]],[[],["link",3]],[[],["xorlinkedlist",3]],[[],["linkops",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["cursor",3]],[[],["cursormut",3]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["intoiter",3]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["iter",3]],[[]],[[]],[[]],[[]],[[],["link",3]],[[],["xorlinkedlist",3]],[[["option",4]],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["option",4]],["option",4]],[[],["option",4]],[[],["option",4]],[[],["cursor",3]],[[],["cursor",3]],[[],["cursor",3]],[[],["cursor",3]],[[],["option",4]],[[],["option",4]],[[["option",4]],["option",4]],[[["option",4]],["option",4]],[[]],[[]],[[]],[[],["option",4]],[[["option",4]]],[[["option",4]]],[[],["result",4]],[[]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["xorlinkedlist",3]]],[[["xorlinkedlist",3]]],[[],["xorlinkedlist",3]],[[],["xorlinkedlist",3]],[[],["xorlinkedlist",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[4,"Bound"],[8,"KeyAdapter"],[8,"Adapter"],[8,"LinkOps"],[8,"DefaultLinkOps"],[8,"PointerOps"],[3,"UnsafeRef"],[3,"DefaultPointerOps"],[13,"Included"],[13,"Excluded"],[3,"LinkOps"],[3,"CursorMut"],[3,"LinkedList"],[3,"Link"],[3,"Cursor"],[3,"Iter"],[3,"IntoIter"],[8,"LinkedListOps"],[4,"Color"],[4,"Entry"],[3,"LinkOps"],[3,"CursorMut"],[3,"RBTree"],[3,"Link"],[3,"Cursor"],[3,"InsertCursor"],[3,"Iter"],[3,"IntoIter"],[8,"RBTreeOps"],[13,"Occupied"],[13,"Vacant"],[3,"LinkOps"],[3,"CursorMut"],[3,"Link"],[3,"Cursor"],[3,"SinglyLinkedList"],[3,"Iter"],[3,"IntoIter"],[8,"SinglyLinkedListOps"],[3,"LinkOps"],[3,"CursorMut"],[3,"XorLinkedList"],[3,"Link"],[3,"Cursor"],[3,"Iter"],[3,"IntoIter"],[8,"XorLinkedListOps"]]},\
"lazy_static":{"doc":"A macro for declaring lazily evaluated statics.","t":[8,5,14],"n":["LazyStatic","initialize","lazy_static"],"q":["lazy_static","",""],"d":["Support trait for enabling a few common operation on lazy …","Takes a shared reference to a lazy static and initializes …",""],"i":[0,0,0],"f":[null,[[]],null],"p":[]},\
"linked_list_allocator":{"doc":"","t":[3,5,5,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Heap","align_down","align_up","allocate_first_fit","borrow","borrow_mut","bottom","deallocate","empty","extend","free","from","hole","init","into","new","size","top","try_from","try_into","type_id","used","HoleList","align_layout","allocate_first_fit","borrow","borrow_mut","deallocate","empty","from","into","min_size","new","try_from","try_into","type_id"],"q":["linked_list_allocator","","","","","","","","","","","","","","","","","","","","","","linked_list_allocator::hole","","","","","","","","","","","","",""],"d":["A fixed size heap backed by a linked list of free memory …","Align downwards. Returns the greatest x with alignment …","Align upwards. Returns the smallest x with alignment <code>align</code>…","Allocates a chunk of the given size with the given …","","","Returns the bottom address of the heap.","Frees the given allocation. <code>ptr</code> must be a pointer returned…","","Extends the size of the heap by creating a new hole at …","Returns the size of the free part of the heap","","","Initializes an empty heap","","Creates a new heap with the given <code>bottom</code> and <code>size</code>. The …","Returns the size of the heap.","Return the top address of the heap","","","","Returns the size of the used part of the heap","A sorted list of holes. It uses the the holes itself to …","Aligns the given layout for use with <code>HoleList</code>.","Searches the list for a big enough hole.","","","Frees the allocation given by <code>ptr</code> and <code>layout</code>.","Creates an empty <code>HoleList</code>.","","","Returns the minimal allocation size. Smaller allocations …","Creates a <code>HoleList</code> that contains the given hole.","","",""],"i":[0,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,2,2,2,2,2,2,2,2,2,2,2,2,2],"f":[null,[[["usize",15]],["usize",15]],[[["usize",15]],["usize",15]],[[["layout",3]],[["nonnull",3,["u8"]],["result",4,["nonnull"]]]],[[]],[[]],[[],["usize",15]],[[["nonnull",3,["u8"]],["u8",15],["layout",3]]],[[],["heap",3]],[[["usize",15]]],[[],["usize",15]],[[]],null,[[["usize",15]]],[[]],[[["usize",15]],["heap",3]],[[],["usize",15]],[[],["usize",15]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],null,[[["layout",3]],["layout",3]],[[["layout",3]],["result",4]],[[]],[[]],[[["nonnull",3,["u8"]],["u8",15],["layout",3]],["layout",3]],[[],["holelist",3]],[[]],[[]],[[],["usize",15]],[[["usize",15]],["holelist",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"Heap"],[3,"HoleList"]]},\
"lock_api":{"doc":"This library provides type-safe and fully-featured <code>Mutex</code> …","t":[16,16,8,16,16,3,3,18,18,18,18,18,18,18,16,16,3,3,3,3,3,3,8,8,8,3,8,8,8,8,8,8,8,8,8,8,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,10,10,10,11,11,11,10,10,10,10,10,10,10,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,10,10,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11],"n":["Duration","Duration","GetThreadId","GuardMarker","GuardMarker","GuardNoSend","GuardSend","INIT","INIT","INIT","INIT","INIT","INIT","INIT","Instant","Instant","MappedMutexGuard","MappedReentrantMutexGuard","MappedRwLockReadGuard","MappedRwLockWriteGuard","Mutex","MutexGuard","RawMutex","RawMutexFair","RawMutexTimed","RawReentrantMutex","RawRwLock","RawRwLockDowngrade","RawRwLockFair","RawRwLockRecursive","RawRwLockRecursiveTimed","RawRwLockTimed","RawRwLockUpgrade","RawRwLockUpgradeDowngrade","RawRwLockUpgradeFair","RawRwLockUpgradeTimed","ReentrantMutex","ReentrantMutexGuard","RwLock","RwLockReadGuard","RwLockUpgradableReadGuard","RwLockWriteGuard","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bump","bump","bump","bump","bump","bump","bump","bump","bump_exclusive","bump_exclusive","bump_shared","bump_shared","bump_upgradable","bump_upgradable","const_new","const_new","const_new","data_ptr","data_ptr","data_ptr","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downgrade","downgrade","downgrade","downgrade_to_upgradable","downgrade_to_upgradable","downgrade_upgradable","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_unlock","force_unlock","force_unlock_fair","force_unlock_fair","force_unlock_read","force_unlock_read_fair","force_unlock_write","force_unlock_write_fair","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_mut","get_mut","get_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_owned_by_current_thread","is_owned_by_current_thread","lock","lock","lock","lock","lock_exclusive","lock_shared","lock_shared_recursive","lock_upgradable","map","map","map","map","map","map","map","map","mutex","new","new","new","nonzero_thread_id","raw","raw","raw","read","read_recursive","remutex","rwlock","rwlock","rwlock","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock","try_lock","try_lock","try_lock_exclusive","try_lock_exclusive_for","try_lock_exclusive_until","try_lock_for","try_lock_for","try_lock_for","try_lock_for","try_lock_shared","try_lock_shared_for","try_lock_shared_recursive","try_lock_shared_recursive_for","try_lock_shared_recursive_until","try_lock_shared_until","try_lock_until","try_lock_until","try_lock_until","try_lock_until","try_lock_upgradable","try_lock_upgradable_for","try_lock_upgradable_until","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_read","try_read_for","try_read_recursive","try_read_recursive_for","try_read_recursive_until","try_read_until","try_upgradable_read","try_upgradable_read_for","try_upgradable_read_until","try_upgrade","try_upgrade","try_upgrade_for","try_upgrade_for","try_upgrade_until","try_upgrade_until","try_write","try_write_for","try_write_until","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock","unlock","unlock_exclusive","unlock_exclusive_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_shared","unlock_shared_fair","unlock_upgradable","unlock_upgradable_fair","unlocked","unlocked","unlocked","unlocked","unlocked","unlocked_fair","unlocked_fair","unlocked_fair","unlocked_fair","unlocked_fair","upgradable_read","upgrade","upgrade","write"],"q":["lock_apid":["Duration type used for <code>try_lock_for</code>.","Duration type used for <code>try_lock_for</code>.","Helper trait which returns a non-zero thread ID.","Marker type which determines whether a lock guard should …","Marker type which determines whether a lock guard should …","Marker type which indicates that the Guard type for a …","Marker type which indicates that the Guard type for a …","Initial value for an unlocked mutex.","Initial value for an unlocked mutex.","Initial value.","Initial value.","Initial value for an unlocked mutex.","Initial value for an unlocked <code>RwLock</code>.","Initial value for an unlocked <code>RwLock</code>.","Instant type used for <code>try_lock_until</code>.","Instant type used for <code>try_lock_until</code>.","An RAII mutex guard returned by <code>MutexGuard::map</code>, which …","An RAII mutex guard returned by <code>ReentrantMutexGuard::map</code>, …","An RAII read lock guard returned by <code>RwLockReadGuard::map</code>, …","An RAII write lock guard returned by <code>RwLockWriteGuard::map</code>…","A mutual exclusion primitive useful for protecting shared …","An RAII implementation of a “scoped lock” of a mutex. …","Basic operations for a mutex.","Additional methods for mutexes which support fair …","Additional methods for mutexes which support locking with …","A raw mutex type that wraps another raw mutex to provide …","Basic operations for a reader-writer lock.","Additional methods for RwLocks which support atomically …","Additional methods for RwLocks which support fair …","Additional methods for RwLocks which support recursive …","Additional methods for RwLocks which support recursive …","Additional methods for RwLocks which support locking with …","Additional methods for RwLocks which support atomically …","Additional methods for RwLocks which support upgradable …","Additional methods for RwLocks which support upgradable …","Additional methods for RwLocks which support upgradable …","A mutex which can be recursively locked by a single …","An RAII implementation of a “scoped lock” of a …","A reader-writer lock","RAII structure used to release the shared read access of …","RAII structure used to release the upgradable read access …","RAII structure used to release the exclusive write access …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if …","Temporarily yields the <code>RwLock</code> to a waiting thread if …","Temporarily yields the <code>RwLock</code> to a waiting thread if …","Temporarily yields an exclusive lock to a waiting thread …","Temporarily yields an exclusive lock to a waiting thread …","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields an upgradable lock to a waiting thread …","Temporarily yields an upgradable lock to a waiting thread …","Creates a new mutex based on a pre-existing raw mutex.","Creates a new reentrant mutex based on a pre-existing raw …","Creates a new new instance of an <code>RwLock&lt;T&gt;</code> based on a …","Returns a raw pointer to the underlying data.","Returns a raw pointer to the underlying data.","Returns a raw pointer to the underlying data.","","","","","","","","","","","","","","","","","Atomically downgrades an exclusive lock into a shared …","Atomically downgrades a write lock into a read lock …","Atomically downgrades an upgradable read lock lock into a …","Downgrades an exclusive lock to an upgradable lock.","Atomically downgrades a write lock into an upgradable …","Downgrades an upgradable lock to a shared lock.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Forcibly unlocks the mutex.","Forcibly unlocks the mutex.","Forcibly unlocks the mutex using a fair unlock procotol.","Forcibly unlocks the mutex using a fair unlock protocol.","Forcibly unlocks a read lock.","Forcibly unlocks a read lock using a fair unlock procotol.","Forcibly unlocks a write lock.","Forcibly unlocks a write lock using a fair unlock …","","","","","","","","","","","","","","","","","","","","","","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","","","","","","","","","","","","","","","","Consumes this mutex, returning the underlying data.","Consumes this mutex, returning the underlying data.","Consumes this <code>RwLock</code>, returning the underlying data.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks if this <code>RwLock</code> is currently locked in any way.","Checks if this <code>RwLock</code> is currently locked in any way.","Checks whether this <code>RwLock</code> is currently locked in any way.","Checks whether the mutex is currently held by the current …","Checks whether the mutex is currently held by the current …","Acquires this mutex, blocking the current thread until it …","Acquires a mutex, blocking the current thread until it is …","Acquires this mutex, blocking if it’s held by another …","Acquires a reentrant mutex, blocking the current thread …","Acquires an exclusive lock, blocking the current thread …","Acquires a shared lock, blocking the current thread until …","Acquires a shared lock without deadlocking in case of a …","Acquires an upgradable lock, blocking the current thread …","Makes a new <code>MappedMutexGuard</code> for a component of the …","Makes a new <code>MappedMutexGuard</code> for a component of the …","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Returns a reference to the original <code>Mutex</code> object.","Creates a new mutex in an unlocked state ready for use.","Creates a new reentrant mutex in an unlocked state ready …","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","Returns a non-zero thread ID which identifies the current …","Returns the underlying raw mutex object.","Returns the underlying raw mutex object.","Returns the underlying raw reader-writer lock object.","Locks this <code>RwLock</code> with shared read access, blocking the …","Locks this <code>RwLock</code> with shared read access, blocking the …","Returns a reference to the original <code>ReentrantMutex</code> object.","Returns a reference to the original reader-writer lock …","Returns a reference to the original reader-writer lock …","Returns a reference to the original reader-writer lock …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to acquire this mutex without blocking. Returns …","Attempts to acquire this lock.","Attempts to acquire this mutex without blocking. Returns …","Attempts to acquire this lock.","Attempts to acquire an exclusive lock without blocking.","Attempts to acquire an exclusive lock until a timeout is …","Attempts to acquire an exclusive lock until a timeout is …","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire a shared lock without blocking.","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock without deadlocking in …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire an upgradable lock without blocking.","Attempts to acquire an upgradable lock until a timeout is …","Attempts to acquire an upgradable lock until a timeout is …","Attempts to make a new <code>MappedMutexGuard</code> for a component …","Attempts to make a new <code>MappedMutexGuard</code> for a component …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into …","Attempts to lock this <code>RwLock</code> with exclusive write access.","Attempts to acquire this <code>RwLock</code> with exclusive write …","Attempts to acquire this <code>RwLock</code> with exclusive write …","","","","","","","","","","","","","","","","Unlocks this mutex.","Unlocks this mutex. The inner mutex may not be unlocked if…","Releases an exclusive lock.","Releases an exclusive lock using a fair unlock protocol.","Unlocks this mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks this mutex using a fair unlock protocol. The …","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Releases a shared lock.","Releases a shared lock using a fair unlock protocol.","Releases an upgradable lock.","Releases an upgradable lock using a fair unlock protocol.","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Locks this <code>RwLock</code> with upgradable read access, blocking …","Upgrades an upgradable lock to an exclusive lock.","Atomically upgrades an upgradable read lock lock into a …","Locks this <code>RwLock</code> with exclusive write access, blocking …"],"i":[1,2,0,3,4,0,0,3,3,5,5,6,4,4,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,8,9,10,11,6,12,13,14,15,16,17,18,19,20,7,8,9,10,11,6,12,13,14,15,16,17,18,19,20,21,21,10,6,13,16,17,18,22,22,22,22,23,23,9,12,15,9,12,15,9,12,15,10,11,13,14,16,17,18,19,20,10,11,17,20,24,17,18,25,17,25,10,11,13,14,16,17,18,19,20,9,10,10,11,11,12,13,13,14,14,15,16,16,17,17,18,18,19,19,20,20,9,12,9,12,15,15,15,15,7,8,9,9,9,10,11,6,12,12,12,13,14,15,15,15,16,17,18,19,20,9,12,15,7,8,9,10,11,6,12,13,14,15,16,17,18,19,20,9,12,15,3,3,9,6,12,4,4,15,6,12,3,9,6,12,4,4,26,27,10,11,13,14,16,17,19,20,10,9,12,15,5,9,12,15,15,15,13,16,17,18,7,8,9,10,11,6,12,13,14,15,16,17,18,19,20,7,8,9,10,11,6,12,13,14,15,16,17,18,19,20,3,9,6,12,4,2,2,1,9,6,12,4,2,26,28,28,2,1,9,6,12,27,29,29,10,11,13,14,16,17,19,20,15,15,15,15,15,15,15,15,15,27,18,29,18,29,18,15,15,15,7,8,9,10,11,6,12,13,14,15,16,17,18,19,20,3,6,4,22,21,10,11,6,13,14,16,17,18,19,20,4,22,27,23,10,13,16,17,18,10,13,16,17,18,15,27,18,15],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["mutex",3]],[[],["reentrantmutex",3]],[[],["rwlock",3]],[[]],[[]],[[]],[[],["mutex",3]],[[],["reentrantmutex",3]],[[],["rwlock",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["rwlockreadguard",3]],[[],["rwlockreadguard",3]],[[]],[[],["rwlockupgradablereadguard",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["mutex",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["reentrantmutex",3]],[[]],[[]],[[],["rwlock",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[],["mutexguard",3]],[[]],[[],["reentrantmutexguard",3]],[[]],[[]],[[]],[[]],[[],[["sized",8],["mappedmutexguard",3]]],[[],[["sized",8],["mappedmutexguard",3]]],[[],[["sized",8],["mappedreentrantmutexguard",3]]],[[],[["sized",8],["mappedreentrantmutexguard",3]]],[[],[["mappedrwlockreadguard",3],["sized",8]]],[[],[["sized",8],["mappedrwlockwriteguard",3]]],[[],[["mappedrwlockreadguard",3],["sized",8]]],[[],[["sized",8],["mappedrwlockwriteguard",3]]],[[],["mutex",3]],[[],["mutex",3]],[[],["reentrantmutex",3]],[[],["rwlock",3]],[[],["nonzerousize",3]],[[]],[[]],[[]],[[],["rwlockreadguard",3]],[[],["rwlockreadguard",3]],[[],["reentrantmutex",3]],[[],["rwlock",3]],[[],["rwlock",3]],[[],["rwlock",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["bool",15]],[[],[["option",4,["mutexguard"]],["mutexguard",3]]],[[],["bool",15]],[[],[["option",4,["reentrantmutexguard"]],["reentrantmutexguard",3]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["option",4,["mutexguard"]],["mutexguard",3]]],[[],["bool",15]],[[],[["option",4,["reentrantmutexguard"]],["reentrantmutexguard",3]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["option",4,["mutexguard"]],["mutexguard",3]]],[[],["bool",15]],[[],[["option",4,["reentrantmutexguard"]],["reentrantmutexguard",3]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["result",4,["mappedmutexguard"]],["mappedmutexguard",3]]],[[],[["result",4,["mappedmutexguard"]],["mappedmutexguard",3]]],[[],[["result",4,["mappedreentrantmutexguard"]],["mappedreentrantmutexguard",3]]],[[],[["result",4,["mappedreentrantmutexguard"]],["mappedreentrantmutexguard",3]]],[[],[["mappedrwlockreadguard",3],["result",4,["mappedrwlockreadguard"]]]],[[],[["result",4,["mappedrwlockwriteguard"]],["mappedrwlockwriteguard",3]]],[[],[["mappedrwlockreadguard",3],["result",4,["mappedrwlockreadguard"]]]],[[],[["result",4,["mappedrwlockwriteguard"]],["mappedrwlockwriteguard",3]]],[[],[["option",4,["rwlockreadguard"]],["rwlockreadguard",3]]],[[],[["option",4,["rwlockreadguard"]],["rwlockreadguard",3]]],[[],[["option",4,["rwlockreadguard"]],["rwlockreadguard",3]]],[[],[["option",4,["rwlockreadguard"]],["rwlockreadguard",3]]],[[],[["option",4,["rwlockreadguard"]],["rwlockreadguard",3]]],[[],[["option",4,["rwlockreadguard"]],["rwlockreadguard",3]]],[[],[["rwlockupgradablereadguard",3],["option",4,["rwlockupgradablereadguard"]]]],[[],[["rwlockupgradablereadguard",3],["option",4,["rwlockupgradablereadguard"]]]],[[],[["rwlockupgradablereadguard",3],["option",4,["rwlockupgradablereadguard"]]]],[[],["bool",15]],[[],[["rwlockwriteguard",3],["result",4,["rwlockwriteguard"]]]],[[],["bool",15]],[[],[["rwlockwriteguard",3],["result",4,["rwlockwriteguard"]]]],[[],["bool",15]],[[],[["rwlockwriteguard",3],["result",4,["rwlockwriteguard"]]]],[[],[["option",4,["rwlockwriteguard"]],["rwlockwriteguard",3]]],[[],[["option",4,["rwlockwriteguard"]],["rwlockwriteguard",3]]],[[],[["option",4,["rwlockwriteguard"]],["rwlockwriteguard",3]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["rwlockupgradablereadguard",3]],[[]],[[],["rwlockwriteguard",3]],[[],["rwlockwriteguard",3]]],"p":[[8,"RawMutexTimed"],[8,"RawRwLockTimed"],[8,"RawMutex"],[8,"RawRwLock"],[8,"GetThreadId"],[3,"RawReentrantMutex"],[3,"GuardSend"],[3,"GuardNoSend"],[3,"Mutex"],[3,"MutexGuard"],[3,"MappedMutexGuard"],[3,"ReentrantMutex"],[3,"ReentrantMutexGuard"],[3,"MappedReentrantMutexGuard"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"RwLockUpgradableReadGuard"],[3,"MappedRwLockReadGuard"],[3,"MappedRwLockWriteGuard"],[8,"RawMutexFair"],[8,"RawRwLockFair"],[8,"RawRwLockUpgradeFair"],[8,"RawRwLockDowngrade"],[8,"RawRwLockUpgradeDowngrade"],[8,"RawRwLockRecursive"],[8,"RawRwLockUpgrade"],[8,"RawRwLockRecursiveTimed"],[8,"RawRwLockUpgradeTimed"]]},\
"log":{"doc":"A lightweight logging facade.","t":[13,13,13,13,13,13,4,4,8,3,3,13,3,3,3,17,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,10,11,11,11,11,11,11,11,14,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,14,14,5,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14],"n":["Debug","Debug","Error","Error","Info","Info","Level","LevelFilter","Log","Metadata","MetadataBuilder","Off","ParseLevelError","Record","RecordBuilder","STATIC_MAX_LEVEL","SetLoggerError","Trace","Trace","Warn","Warn","args","args","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","builder","builder","clone","clone","clone","clone","cmp","cmp","cmp","cmp","debug","enabled","eq","eq","eq","eq","eq","eq","eq","error","file","file","file_static","file_static","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","from_str","ge","ge","ge","ge","gt","gt","gt","gt","hash","hash","hash","hash","info","into","into","into","into","into","into","into","into","le","le","le","le","level","level","level","level","line","line","log","log","log_enabled","logger","lt","lt","lt","lt","max","max","max_level","metadata","metadata","module_path","module_path","module_path_static","module_path_static","ne","ne","ne","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","set_logger","set_logger_racy","set_max_level","target","target","target","target","to_level","to_level_filter","trace","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","warn"],"q":["logd":["The “debug” level.","Corresponds to the <code>Debug</code> log level.","The “error” level.","Corresponds to the <code>Error</code> log level.","The “info” level.","Corresponds to the <code>Info</code> log level.","An enum representing the available verbosity levels of …","An enum representing the available verbosity level …","A trait encapsulating the operations required of a logger.","Metadata about a log message.","Builder for <code>Metadata</code>.","A level lower than all log levels.","The type returned by <code>from_str</code> when the string doesn’t …","The “payload” of a log message.","Builder for <code>Record</code>.","The statically resolved maximum log level.","The type returned by <code>set_logger</code> if <code>set_logger</code> has already …","The “trace” level.","Corresponds to the <code>Trace</code> log level.","The “warn” level.","Corresponds to the <code>Warn</code> log level.","The message body.","Set <code>args</code>.","Returns the string representation of the <code>Level</code>.","Returns the string representation of the <code>LevelFilter</code>.","","","","","","","","","","","","","","","","","Invoke the builder and return a <code>Record</code>","Returns a <code>Metadata</code> object.","Returns a new builder.","Returns a new builder.","","","","","","","","","Logs a message at the debug level.","Determines if a log message with the specified metadata …","","","","","","","","Logs a message at the error level.","The source file containing the message.","Set <code>file</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>file</code> to a <code>&#39;static</code> string.","Flushes any buffered records.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Logs a message at the info level.","","","","","","","","","","","","","The verbosity level of the message.","Set <code>Metadata::level</code>.","The verbosity level of the message.","Setter for <code>level</code>.","The line containing the message.","Set <code>line</code>","Logs the <code>Record</code>.","The standard logging macro.","Determines if a message logged at the specified level in …","Returns a reference to the logger.","","","","","Returns the most verbose logging level.","Returns the most verbose logging level filter.","Returns the current maximum log level.","Metadata about the log directive.","Set <code>metadata</code>. Construct a <code>Metadata</code> object with …","The module path of the message.","Set <code>module_path</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>module_path</code> to a <code>&#39;static</code> string","","","","Construct new <code>RecordBuilder</code>.","Construct a new <code>MetadataBuilder</code>.","","","","","","","Sets the global logger to a <code>&amp;&#39;static Log</code>.","A thread-unsafe version of <code>set_logger</code>.","Sets the global maximum log level.","The name of the target of the directive.","Set <code>Metadata::target</code>","The name of the target of the directive.","Setter for <code>target</code>.","Converts <code>self</code> to the equivalent <code>Level</code>.","Converts the <code>Level</code> to the equivalent <code>LevelFilter</code>.","Logs a message at the trace level.","","","","","","","","","","","","","","","","","","","","","","","","","Logs a message at the warn level."],"i":[1,2,1,2,1,2,0,0,0,0,0,2,0,0,0,0,0,1,2,1,2,3,4,1,2,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,4,6,3,5,1,2,3,5,1,2,5,6,0,9,1,1,2,2,5,6,8,0,3,4,3,4,9,1,1,2,2,3,4,5,6,7,7,8,8,1,2,3,4,5,6,7,8,1,2,1,1,2,2,1,1,2,2,1,2,5,6,0,1,2,3,4,5,6,7,8,1,1,2,2,3,4,5,6,3,4,9,0,0,0,1,1,2,2,1,2,0,3,4,3,4,3,4,5,6,8,4,6,1,1,2,2,5,6,0,0,0,3,4,5,6,2,1,0,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["arguments",3]],[[["arguments",3]],["recordbuilder",3]],[[],["str",15]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["record",3]],[[],["metadata",3]],[[],["recordbuilder",3]],[[],["metadatabuilder",3]],[[],["level",4]],[[],["levelfilter",4]],[[],["record",3]],[[],["metadata",3]],[[["level",4]],["ordering",4]],[[["levelfilter",4]],["ordering",4]],[[["metadata",3]],["ordering",4]],[[["metadatabuilder",3]],["ordering",4]],null,[[["metadata",3]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["level",4]],["bool",15]],[[["level",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["metadata",3]],["bool",15]],[[["metadatabuilder",3]],["bool",15]],[[["parselevelerror",3]],["bool",15]],null,[[],[["str",15],["option",4,["str"]]]],[[["str",15],["option",4,["str"]]],["recordbuilder",3]],[[],[["str",15],["option",4,["str"]]]],[[["option",4,["str"]],["str",15]],["recordbuilder",3]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],[["result",4,["level"]],["level",4]]],[[["str",15]],[["result",4,["levelfilter"]],["levelfilter",4]]],[[["level",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["level",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["level",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["level",4]],["bool",15]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["levelfilter",4]],["bool",15]],[[["level",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["level",4]],["bool",15]],[[],["level",4]],[[["level",4]],["recordbuilder",3]],[[],["level",4]],[[["level",4]],["metadatabuilder",3]],[[],[["u32",15],["option",4,["u32"]]]],[[["u32",15],["option",4,["u32"]]],["recordbuilder",3]],[[["record",3]]],null,null,[[],["log",8]],[[["level",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["level",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[],["level",4]],[[],["levelfilter",4]],[[],["levelfilter",4]],[[],["metadata",3]],[[["metadata",3]],["recordbuilder",3]],[[],[["str",15],["option",4,["str"]]]],[[["str",15],["option",4,["str"]]],["recordbuilder",3]],[[],[["str",15],["option",4,["str"]]]],[[["option",4,["str"]],["str",15]],["recordbuilder",3]],[[["metadata",3]],["bool",15]],[[["metadatabuilder",3]],["bool",15]],[[["parselevelerror",3]],["bool",15]],[[],["recordbuilder",3]],[[],["metadatabuilder",3]],[[["level",4]],[["ordering",4],["option",4,["ordering"]]]],[[["levelfilter",4]],[["ordering",4],["option",4,["ordering"]]]],[[["levelfilter",4]],[["ordering",4],["option",4,["ordering"]]]],[[["level",4]],[["ordering",4],["option",4,["ordering"]]]],[[["metadata",3]],[["option",4,["ordering"]],["ordering",4]]],[[["metadatabuilder",3]],[["option",4,["ordering"]],["ordering",4]]],[[["log",8]],[["setloggererror",3],["result",4,["setloggererror"]]]],[[["log",8]],[["setloggererror",3],["result",4,["setloggererror"]]]],[[["levelfilter",4]]],[[],["str",15]],[[["str",15]],["recordbuilder",3]],[[],["str",15]],[[["str",15]],["metadatabuilder",3]],[[],[["level",4],["option",4,["level"]]]],[[],["levelfilter",4]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null],"p":[[4,"Level"],[4,"LevelFilter"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[3,"SetLoggerError"],[3,"ParseLevelError"],[8,"Log"]]},\
"lru":{"doc":"An implementation of a LRU cache. The cache supports <code>get</code>, …","t":[6,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["DefaultHasher","Iter","IterMut","LruCache","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cap","clear","clone","clone_into","contains","count","count","drop","fmt","from","from","from","get","get_mut","into","into","into","into_iter","into_iter","is_empty","iter","iter_mut","len","new","next","next","next_back","next_back","peek","peek_lru","peek_mut","pop","pop_lru","put","resize","size_hint","size_hint","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unbounded","unbounded_with_hasher","with_hasher"],"q":["lru","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","An iterator over the entries of a <code>LruCache</code>.","An iterator over mutables entries of a <code>LruCache</code>.","An LRU Cache","","","","","","","Returns the maximum number of key-value pairs the cache …","Clears the contents of the cache.","","","Returns a bool indicating whether the given key is in the …","","","","","","","","Returns a reference to the value of the key in the cache …","Returns a mutable reference to the value of the key in …","","","","","","Returns a bool indicating whether the cache is empty or …","An iterator visiting all entries in most-recently used …","An iterator visiting all entries in most-recently-used …","Returns the number of key-value pairs that are currently …","Creates a new LRU Cache that holds at most <code>cap</code> items.","","","","","Returns a reference to the value corresponding to the key …","Returns the value corresponding to the least recently …","Returns a mutable reference to the value corresponding to …","Removes and returns the value corresponding to the key …","Removes and returns the key and value corresponding to …","Puts a key-value pair into cache. If the key already …","Resizes the cache. If the new capacity is smaller than …","","","","","","","","","","","","","Creates a new LRU Cache that never automatically evicts …","Creates a new LRU Cache that never automatically evicts …","Creates a new LRU Cache that holds at most <code>cap</code> items and …"],"i":[0,0,0,0,1,2,3,1,2,3,1,1,2,2,1,2,3,1,1,1,2,3,1,1,1,2,3,2,3,1,1,1,1,1,2,3,2,3,1,1,1,1,1,1,1,2,3,2,1,2,3,1,2,3,1,2,3,1,1,1],"f":[null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[]],[[],["iter",3]],[[]],[[],["bool",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["iter",3]],[[],["itermut",3]],[[],["usize",15]],[[["usize",15]],["lrucache",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["usize",15]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["lrucache",3]],[[],["lrucache",3]],[[["usize",15]],["lrucache",3]]],"p":[[3,"LruCache"],[3,"Iter"],[3,"IterMut"]]},\
"memoffset":{"doc":"A crate used for calculating offsets of struct members …","t":[14,14,14],"n":["offset_of","raw_field","span_of"],"q":["memoffset","",""],"d":["Calculates the offset of the specified field from the …","Computes a const raw pointer to the given field of the …","Produces a range instance representing the sub-slice …"],"i":[0,0,0],"f":[null,null,null],"p":[]},\
"raw_cpuid":{"doc":"A library to parse the x86 CPUID instruction, written in …","t":[13,3,4,13,17,13,3,3,4,3,3,4,13,3,3,13,3,3,4,13,13,3,13,13,13,3,3,3,3,3,3,3,3,3,13,13,13,4,3,13,13,13,13,3,3,3,3,3,3,3,3,13,13,13,3,13,3,3,3,3,3,13,13,3,3,13,13,13,3,4,3,3,3,3,13,3,4,3,13,13,13,13,13,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,5],"n":["ACRN","ApmInfo","Associativity","Bhyve","CACHE_INFO_TABLE","Cache","CacheInfo","CacheInfoIter","CacheInfoType","CacheParameter","CacheParametersIter","CacheType","Core","CpuId","CpuIdResult","DTLB","DatInfo","DatIter","DatType","Data","DataTLB","DirectCacheAccessInfo","DirectMapped","Disabled","Epc","EpcSection","ExtendedFeatures","ExtendedProcessorFeatureIdentifiers","ExtendedState","ExtendedStateInfo","ExtendedStateIter","ExtendedTopologyIter","ExtendedTopologyLevel","FeatureInfo","FullyAssociative","General","HyperV","Hypervisor","HypervisorInfo","Instruction","InstructionTLB","Invalid","KVM","L1CacheTlbInfo","L2And3CacheTlbInfo","L2CatInfo","L3CatInfo","L3MonitoringInfo","MemBwAllocationInfo","MemoryEncryptionInfo","MonitorMwaitInfo","NWay","Null","Null","PerformanceMonitoringInfo","Prefetch","ProcessorBrandString","ProcessorCapacityAndFeatureInfo","ProcessorFrequencyInfo","ProcessorSerial","ProcessorTraceInfo","QEMU","QNX","RdtAllocationInfo","RdtMonitoringInfo","Reserved","SMT","STLB","SgxInfo","SgxSectionInfo","SgxSectionIter","SoCVendorAttributesIter","SoCVendorBrand","SoCVendorInfo","TLB","ThermalPowerInfo","TopologyType","TscInfo","Unified","UnifiedTLB","Unknown","Unknown","Unknown","VMware","VendorInfo","Xen","all_zero","apic_frequency","apic_id_size","as_str","as_str","as_str","as_string","as_string","associativity","base_family_id","base_model_id","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","brand_id","brand_index","bus_frequency","c_bit_position","cache_level","cache_type","cache_type","capacity_mask_length","capacity_mask_length","cflush_cache_line_size","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","coherency_line_size","configurable_address_ranges","conversion_factor","counter_bit_width","cpu_pwr_sample_time_ratio","cpuid","dcache_associativity","dcache_line_size","dcache_lines_per_tag","dcache_size","default","denominator","desc","dtlb_2m_4m_associativity","dtlb_2m_4m_associativity","dtlb_2m_4m_size","dtlb_2m_4m_size","dtlb_4k_associativity","dtlb_4k_associativity","dtlb_4k_size","dtlb_4k_size","dts_irq_threshold","eax","ebx","ebx_length","ecx","edx","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extended_family_id","extended_model_id","extended_signature","extensions_supported","family_id","fixed_function_counters","fixed_function_counters_bit_width","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_advanced_power_mgmt_info","get_cache_info","get_cache_parameters","get_dca_cap_value","get_deterministic_address_translation_info","get_direct_cache_access_info","get_extended_feature_info","get_extended_processor_and_feature_identifiers","get_extended_state_info","get_extended_topology_info","get_feature_info","get_hypervisor_info","get_l1_cache_and_tlb_info","get_l2_l3_cache_and_tlb_info","get_memory_encryption_info","get_monitor_mwait_info","get_performance_monitoring_info","get_processor_brand_string","get_processor_capacity_feature_info","get_processor_frequency_info","get_processor_serial","get_processor_trace_info","get_project_id","get_rdt_allocation_info","get_rdt_monitoring_info","get_sgx_info","get_soc_vendor_id","get_soc_vendor_info","get_stepping_id","get_thermal_power_info","get_tsc_info","get_vendor_attributes","get_vendor_brand","get_vendor_info","guest_physical_address_bits","has_100mhz_steps","has_1gb_entries","has_1gib_pages","has_2mb_entries","has_3dnow","has_4k_entries","has_4mb_entries","has_64bit_mode","has_64bit_mode","has_acpi","has_addr_mask_extension","has_adx","has_aesni","has_alt_mov_cr8","has_alternate_injection","has_amd_3dnow_extensions","has_any_thread_deprecation","has_apic","has_arat","has_avx","has_avx2","has_avx512_ifma","has_avx512bw","has_avx512cd","has_avx512dq","has_avx512er","has_avx512f","has_avx512pf","has_avx512vl","has_bmi1","has_bmi2","has_cl_zero","has_clflush","has_clflushopt","has_clwb","has_cmov","has_cmp_legacy","has_cmpxchg16b","has_cmpxchg8b","has_cnxtid","has_code_data_prioritization","has_complex_indexing","has_configurable_psb_and_cycle_accurate_mode","has_cpb","has_cpl","has_data_access_bkpt_extension","has_dca","has_de","has_debug_swap","has_ds","has_ds_area","has_dts","has_ecmd","has_eist","has_encls_leaves_etrackc_erdinfo_eldbc_elduc","has_enclv_leaves_einvirtchild_edecvirtchild_esetcontext","has_energy_bias_pref","has_execute_disable","has_ext_apic_space","has_f16c","has_fast_fxsave_fxstor","has_fdp","has_feedback_iface","has_flexible_hwp","has_fma","has_fma4","has_fpu","has_fpu_cs_ds_deprecated","has_freq_id_ctrl","has_fsgsbase","has_fxsave_fxstor","has_hdc","has_hle","has_htt","has_hw_coord_feedback","has_hw_enforced_cache_coh","has_hw_pstate","has_hwa","has_hwp","has_hwp_activity_window","has_hwp_capabilities","has_hwp_energy_performance_preference","has_hwp_fast_access_mode","has_hwp_notification","has_hwp_package_level_request","has_hwp_peci_override","has_hypervisor","has_ibs","has_ignore_idle_processor_hwp_request","has_inst_ret_cntr_msr","has_int_wbinvd","has_invariant_tsc","has_invlpgb","has_invlpgb_nested","has_invpcid","has_ip_tracestop_filtering","has_l2_cat","has_l3_cat","has_l3_monitoring","has_lahf_sahf","has_linear_response_delay","has_lip_with_cs_base","has_local_bandwidth_monitoring","has_lwp","has_lzcnt","has_mca","has_mca_overflow_recovery","has_mce","has_mcommit","has_memory_bandwidth_allocation","has_misaligned_sse_mode","has_mmx","has_mmx_extensions","has_monitor_mwait","has_monitorx_mwaitx","has_movbe","has_mpx","has_msr","has_mtc_timing_packet_coefi_suppression","has_mtrr","has_nb_perf_cntr_extensions","has_occupancy_monitoring","has_ospke","has_osvw","has_oxsave","has_pae","has_page_flush_msr","has_pat","has_pbe","has_pcid","has_pclmulqdq","has_pdcm","has_perf_cntr_extensions","has_perf_cntr_llc_extensions","has_perf_tsc","has_pge","has_pku","has_pln","has_popcnt","has_power_event_trace","has_power_reporting_iface","has_prefetchw","has_prefetchwt1","has_prevent_host_ibs","has_processor_trace","has_pse","has_pse36","has_psn","has_ptm","has_ptwrite","has_rdpid","has_rdpru","has_rdrand","has_rdseed","has_rdta","has_rdtm","has_rdtscp","has_rep_movsb_stosb","has_restore_fp_error_ptrs","has_restricted_injection","has_ro_effective_freq_iface","has_rtit_cr3_match","has_rtm","has_sev","has_sev_es","has_sev_snp","has_sgx","has_sgx1","has_sgx2","has_sgx_lc","has_sha","has_single_range_output_scheme","has_skinit","has_smap","has_sme","has_smep","has_smx","has_ss","has_sse","has_sse2","has_sse3","has_sse41","has_sse42","has_sse4a","has_ssse3","has_succor","has_svm","has_syscall_sysret","has_sysenter_sysexit","has_tbm","has_thermtrip","has_tm","has_tm","has_tm2","has_topa","has_topa_maximum_entries","has_topology_extensions","has_total_bandwidth_monitoring","has_trace_transport_subsystem","has_ts","has_tsc","has_tsc_adjust_msr","has_tsc_deadline","has_turbo_boost","has_turbo_boost3","has_umip","has_unsupported_efer_lmsle","has_vme","has_vmpl","has_vmx","has_volt_id_ctrl","has_vte","has_wbnoinvd","has_wdt","has_x2apic","has_xgetbv","has_xop","has_xsave","has_xsavec","has_xsaveopt","has_xsaves_xrstors","highest_cos","highest_cos","highest_cos","ia32_xss_supports_hdc","ia32_xss_supports_pt","icache_associativity","icache_line_size","icache_lines_per_tag","icache_size","identify","initial_local_apic_id","interrupts_as_break_event","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","invlpgb_max_pages","is_branch_inst_ret_ev_unavailable","is_branch_midpred_ev_unavailable","is_cache_ref_ev_unavailable","is_compacted_format","is_core_cyc_ev_unavailable","is_fully_associative","is_fully_associative","is_in_ia32_xss","is_in_xcr0","is_inclusive","is_inst_ret_ev_unavailable","is_ll_cache_miss_ev_unavailable","is_ref_cycle_ev_unavailable","is_self_initializing","is_write_back_invalidate","isolation_bitmap","isolation_bitmap","iter","iter","itlb_2m_4m_associativity","itlb_2m_4m_associativity","itlb_2m_4m_size","itlb_2m_4m_size","itlb_4k_associativity","itlb_4k_associativity","itlb_4k_size","itlb_4k_size","l2_cat","l2cache_associativity","l2cache_line_size","l2cache_lines_per_tag","l2cache_size","l3_cat","l3_monitoring","l3cache_associativity","l3cache_line_size","l3cache_lines_per_tag","l3cache_size","largest_monitor_line","level","level_number","level_type","linear_address_bits","mawau_value","max_addressable_ids","max_cores_for_cache","max_cores_for_package","max_enclave_size_64bit","max_enclave_size_non_64bit","max_encrypted_guests","max_hba_throttling","max_logical_processor_ids","max_rdpru_id","maximum_logical_processors","maximum_rmid_range","memory_bandwidth_allocation","min_sev_no_es_asid","miscselect","model_id","native_cpuid","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","next","next","next","next","next","next","next","nominal_frequency","num","num_phys_threads","number_of_counters","numerator","offset","partitioning","perf_tsc_size","physical_address_bits","physical_address_reduction","physical_base","physical_line_partitions","pkg_type","processor_base_frequency","processor_max_frequency","processors","rmid_range","secs_attributes","serial","serial_lower","serial_middle","sets","sets","shift_right_for_next_apic_id","size","size","smallest_monitor_line","stepping_id","subleaf","supported_c0_states","supported_c1_states","supported_c2_states","supported_c3_states","supported_c4_states","supported_c5_states","supported_c6_states","supported_c7_states","supported_cycle_threshold_value_encodings","supported_mtc_period_encodings","supported_psb_frequency_encodings","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tsc_frequency","tsc_frequency","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version_id","ways","with_cpuid_fn","x2apic_id","xcr0_supports_avx512_opmask","xcr0_supports_avx512_zmm_hi16","xcr0_supports_avx512_zmm_hi256","xcr0_supports_avx_256","xcr0_supports_legacy_x87","xcr0_supports_mpx_bndcsr","xcr0_supports_mpx_bndregs","xcr0_supports_pkru","xcr0_supports_sse_128","xsave_area_size_enabled_features","xsave_area_size_supported_features","xsave_size","0","0","1","2","0","cpuid_count"],"q":["raw_cpuidraw_cpuid::Associativity","raw_cpuid::Hypervisor","","","raw_cpuid::SgxSectionInfo","raw_cpuid::native_cpuid"],"d":["","Processor Power Management and RAS Capabilities …","Info about cache Associativity.","","This table is taken from Intel manual (Section CPUID …","","Describes any kind of cache (TLB, Data and Instruction …","Iterates over cache information (LEAF=0x02).","What type of cache are we dealing with?","Information about an individual cache in the hierarchy.","Iterator over caches (LEAF=0x04).","Info about a what a given cache caches (instructions, …","","The main type used to query information about the CPU we…","Low-level data-structure to store result of cpuid …","","Deterministic Address Translation Structure","Deterministic Address Translation Structure Iterator …","Deterministic Address Translation cache type (EDX bits 04 …","Data cache","","Direct cache access info (LEAF=0x09).","","","","EBX:EAX and EDX:ECX provide information on the Enclave …","Structured Extended Feature Identifiers (LEAF=0x07).","Extended Processor and Processor Feature Identifiers …","ExtendedState subleaf structure for things that need to …","Information for saving/restoring extended register state …","Yields ExtendedState structs.","Information about topology (LEAF=0x0B).","Gives information about the current level in the topology.","Processor and Processor Feature Identifiers (LEAF=0x01).","","","","Identifies the different Hypervisor products.","Information about Hypervisor (LEAF=0x4000_0001)","Instruction cache","","","","L1 Cache and TLB Information (LEAF=0x8000_0005).","L2/L3 Cache and TLB Information (LEAF=0x8000_0006).","L2 Cache Allocation Technology Enumeration Sub-leaf …","L3 Cache Allocation Technology Enumeration Sub-leaf …","Information about L3 cache monitoring.","Memory Bandwidth Allocation Enumeration Sub-leaf …","Encrypted Memory Capabilities","Information about how monitor/mwait works on this CPU …","","Null - No more caches","Null (indicates this sub-leaf is not valid).","Info about performance monitoring – how many counters …","","Processor name (LEAF=0x8000_0002..=0x8000_0004).","Processor Capacity Parameters and Extended Feature …","Processor Frequency Information (LEAF=0x16).","Processor Serial Number (LEAF=0x3).","Intel Processor Trace Information (LEAF=0x14).","QEMU is the hypervisor identity when QEMU is used without …","","Quality of service enforcement information (LEAF=0x10).","Intel Resource Director Technology RDT (LEAF=0x0F).","4-31 = Reserved","Hyper-thread (Simultaneous multithreading)","","Intel SGX Capability Enumeration Leaf (LEAF=0x12).","Intel SGX EPC Enumeration Leaf","Iterator over the SGX sub-leafs (ECX &gt;= 2).","Iterator for SoC vendor attributes.","A vendor brand string as queried from the cpuid leaf.","SoC vendor specific information (LEAF=0x17).","","Query information about thermal and power management …","What type of core we have at this level in the topology …","Time Stamp Counter/Core Crystal Clock Information …","Data and Instruction cache","Some unified TLBs will allow a single TLB entry to …","","","","","Vendor Info String (LEAF=0x0)","","","(Virtual) Bus (local apic timer) frequency in kHz.","APIC ID size.","Return the processor brand string as a rust string.","Return vendor identification as human readable string.","Return the SocVendorBrand as a string.","","","Ways of associativity (Bits 31-22)","Version Information: Family","Version Information: Model","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns brand ID on AMD.","Brand Index","Bus (Reference) Frequency (in MHz).","C-bit location in page table entry","Translation cache level (starts at 1)","Translation cache type field.","Cache Type","Length of the capacity bit mask.","Length of the capacity bit mask.","CLFLUSH line size (Value ∗ 8 = cache line size in bytes)","","","","","","","","","","","","System Coherency Line Size (Bits 11-00)","Number of configurable Address Ranges for filtering (Bits …","Conversion factor from reported IA32_QM_CTR value to …","Bit width of general-purpose, performance monitoring …","Specifies the ratio of the compute unit power accumulator …","Macro which queries cpuid directly.","L1 data cache associativity.","L1 data cache line size in bytes.","L1 data cache lines per tag.","L1 data cache size in KB","","An unsigned integer which is the denominator of the …","Description of the cache (from Intel Manual)","Data TLB associativity for 2-MB and 4-MB pages.","L2 Data TLB associativity for 2-MB and 4-MB pages.","Data TLB number of entries for 2-MB and 4-MB pages.","L2 Data TLB number of entries for 2-MB and 4-MB pages.","Data TLB associativity for 4K pages.","L2 Data TLB associativity for 4K pages.","Data TLB number of entries for 4K pages.","L2 Data TLB number of entries for 4K pages.","Number of Interrupt Thresholds in Digital Thermal Sensor","Return value EAX register","Return value EBX register","Length of EBX bit vector to enumerate architectural …","Return value ECX register","Return value EDX register","","","","","","","","","","","","","","","","","","","","","Version Information: Extended Family","Version Information: Extended Model","Extended Processor Signature.","Enumeration of Monitor-Mwait extensions (beyond EAX and …","","Number of fixed-function performance counters (if Version …","Bit width of fixed-function performance counters (if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Advanced Power Management Information (LEAF=0x8000_0007).","Query basic information about caches (LEAF=0x02).","Retrieve more elaborate information about caches …","Value of bits [31:0] of IA32_PLATFORM_DCA_CAP MSR …","Query deterministic address translation feature …","Direct cache access info (LEAF=0x09).","Find out about more features supported by this CPU …","Extended Processor and Processor Feature Identifiers …","Information for saving/restoring extended register state …","Information about topology (LEAF=0x0B).","Query a set of features that are available on this CPU …","Returns information provided by the hypervisor, if running…","L1 Instruction Cache Information (LEAF=0x8000_0005)","L2/L3 Cache and TLB Information (LEAF=0x8000_0006).","Informations about memory encryption support …","Information about how monitor/mwait works on this CPU …","Info about performance monitoring (LEAF=0x0A).","Retrieve processor brand string (LEAF=0x8000_000{2..4}).","Processor Capacity Parameters and Extended Feature …","Processor Frequency Information (LEAF=0x16).","Retrieve serial number of processor (LEAF=0x03).","Intel Processor Trace Enumeration Information (LEAF=0x14).","","Quality of service enforcement information (LEAF=0x10).","Quality of service monitoring information (LEAF=0x0F).","Information about secure enclave support (LEAF=0x12).","","Contains SoC vendor specific information (LEAF=0x17).","","Query information about thermal and power management …","Time Stamp Counter/Core Crystal Clock Information …","","","Return information about the vendor (LEAF=0x00).","Guest Physical Address Bits","Has 100 MHz multiplier Control?","1GB page size entries supported by this structure","Is there support for 1GiB pages.","2MB page size entries supported by this structure","3DNow extensions.","4K page size entries supported by this structure","4MB page size entries supported by this structure","Check support for 64-bit mode.","SEV guest execution only allowed from a 64-bit host if …","Thermal Monitor and Software Controlled Clock Facilities. …","Breakpoint Addressing masking extended to bit 31.","Supports ADX.","A value of 1 indicates that the processor supports the …","LOCK MOV CR0 means MOV CR8. See “MOV(CRn)” in APM3.","Alternate Injection supported if set.","3DNow AMD extensions.","AnyThread deprecation","APIC On-Chip. The processor contains an Advanced …","ARAT. APIC-Timer-always-running feature is supported if …","A value of 1 indicates the processor supports the AVX …","AVX2","AVX512_IFMA","AVX512BW","AVX512CD","Supports AVX512DQ.","AVX512ER","Supports AVX512F.","AVX512PF","AVX512VL","BMI1","BMI2","CLZERO instruction supported if set.","CLFLUSH Instruction. CLFLUSH Instruction is supported.","Supports CLFLUSHOPT.","CLWB","Conditional Move Instructions. The conditional move …","Check support legacy cmp.","CMPXCHG16B Available. A value of 1 indicates that the …","CMPXCHG8B Instruction. The compare-and-exchange 8 bytes …","L1 Context ID. A value of 1 indicates the L1 data cache …","Is Code and Data Prioritization Technology supported?","Complex Cache Indexing (Bit 2) False: Direct mapped cache.…","If true, Indicates support of Configurable PSB and …","Has Core performance boost?","CPL Qualified Debug Store. A value of 1 indicates the …","Data access breakpoint extension.","A value of 1 indicates the processor supports the ability …","Debugging Extensions. Support for I/O breakpoints, …","Full debug state swap supported for SEV-ES guests.","Debug Store. The processor supports the ability to write …","64-bit DS Area. A value of 1 indicates the processor …","Digital temperature sensor is supported if set.","ECMD. Clock modulation duty cycle extension is supported …","Enhanced Intel SpeedStep® technology. A value of 1 …","Supports ENCLS instruction leaves ETRACKC, ERDINFO, …","Supports ENCLV instruction leaves EINCVIRTCHILD, …","The processor supports performance-energy bias preference …","Is there support for execute disable bit.","Extended APIC space.","A value of 1 indicates that processor supports 16-bit …","FXSAVE and FXRSTOR instruction optimizations.","FDP_EXCPTN_ONLY. x87 FPU Data Pointer updated only on x87 …","Indicates support for processor feedback interface.","Flexible HWP is supported if set.","A value of 1 indicates the processor supports FMA …","Four-operand FMA instruction support.","Floating Point Unit On-Chip. The processor contains an …","Deprecates FPU CS and FPU DS values if 1.","Frequency ID control.","FSGSBASE. Supports RDFSBASE/RDGSBASE/WRFSBASE/WRGSBASE if …","FXSAVE and FXRSTOR Instructions. The FXSAVE and FXRSTOR …","HDC. HDC base registers IA32_PKG_HDC_CTL, IA32_PM_CTL1, …","HLE","Max APIC IDs reserved field is Valid. A value of 0 for …","Hardware Coordination Feedback Capability","Hardware cache coherency across encryption domains …","Has Hardware P-state control?","Has Hardware assert supported?","HWP. HWP base registers (IA32_PM_ENABLE[bit 0], …","HWP Activity Window. IA32_HWP_REQUEST[bits 41:32] is …","HWP Capabilities. Highest Performance change is supported …","HWP Energy Performance Preference. IA32_HWP_REQUEST[bits …","Fast access mode for the IA32_HWP_REQUEST MSR is …","HWP Notification. IA32_HWP_INTERRUPT MSR is supported if …","HWP Package Level Request. IA32_HWP_REQUEST_PKG MSR is …","HWP PECI override is supported if set.","A value of 1 indicates the indicates the presence of a …","Instruction based sampling.","Ignoring Idle Logical Processor HWP request is supported …","Instruction Retired Counter MSR available if set.","WBINVD/WBNOINVD are interruptible if set.","Is Invariant TSC available?","INVLPGB and TLBSYNC instruction supported if set.","INVLPGB support for invalidating guest nested …","INVPCID. If 1, supports INVPCID instruction for system …","If true, Indicates support of IP Filtering, TraceStop …","Supports L2 Cache Allocation.","Supports L3 Cache Allocation.","Supports L3 Cache Intel RDT Monitoring.","Is LAHF/SAHF available in 64-bit mode?","Reports whether the response of the delay values is …","If true, Generated packets which contain IP payloads have …","Supports local bandwidth monitoring.","Lightweight profiling support","Is LZCNT available?","Machine Check Architecture. A value of 1 indicates the …","Is MCA overflow recovery available?","Machine Check Exception. Exception 18 is defined for …","MCOMMIT instruction supported if set.","Supports Memory Bandwidth Allocation.","Misaligned SSE mode. See “Misaligned Access Support …","Intel MMX Technology. The processor supports the Intel …","AMD extensions to MMX instructions.","MONITOR/MWAIT. A value of 1 indicates the processor …","Support for MWAITX and MONITORX instructions.","A value of 1 indicates that the processor supports MOVBE …","MPX. Supports Intel Memory Protection Extensions if 1.","Model Specific Registers RDMSR and WRMSR Instructions. …","If true, Indicates support of MTC timing packet and …","Memory Type Range Registers. MTRRs are supported. The …","NB performance counter extensions support.","Supports occupancy monitoring.","OS has set CR4.PKE to enable protection keys (and the …","Indicates OS-visible workaround support","A value of 1 indicates that the OS has enabled …","Physical Address Extension. Physical addresses greater …","The Page Flush MSR is available if set.","Page Attribute Table. Page Attribute Table is supported. …","Pending Break Enable. The processor supports the use of …","Process-context identifiers. A value of 1 indicates that …","PCLMULQDQ. A value of 1 indicates the processor supports …","Perfmon and Debug Capability: A value of 1 indicates the …","Processor performance counter extensions support.","Support for L3 performance counter extension.","Performance time-stamp counter.","Page Global Bit. The global bit is supported in …","Supports protection keys for user-mode pages.","PLN. Power limit notification controls are supported if …","A value of 1 indicates that the processor supports the …","Support of Power Event Trace. Writes can set IA32_RTIT_CTL…","Has Processor power reporting interface?","Is PREFETCHW available?","Has PREFETCHWT1 (Intel® Xeon Phi™ only).","Disallowing IBS use by the host supported if set.","Supports Intel Processor Trace.","Page Size Extension. Large pages of size 4 MByte are …","36-Bit Page Size Extension. 4-MByte pages addressing …","Processor Serial Number. The processor supports the …","PTM. Package thermal management is supported if set.","Indicates support of PTWRITE. Writes can set IA32_RTIT_CTL…","RDPID and IA32_TSC_AUX are available.","RDPRU instruction supported if set.","A value of 1 indicates that processor supports RDRAND …","Supports RDSEED.","Supports Intel Resource Director Technology (RDT) …","Supports Intel Resource Director Technology (RDT) …","Check support for rdtscp instruction.","Supports Enhanced REP MOVSB/STOSB if 1.","FP Error Pointers Restored by XRSTOR if set.","Restricted Injection supported if set.","Has Read-only effective frequency interface?","If true, Indicates that IA32_RTIT_CTL.CR3Filter can be …","RTM","Secure Encrypted Virtualization is supported if set.","SEV Encrypted State is supported if set.","SEV Secure Nested Paging supported if set.","Supports Intel® Software Guard Extensions (Intel® SGX …","Has SGX1 support.","Has SGX2 support.","Supports SGX Launch Configuration.","Supports SHA Instructions.","If true, Indicates support of Single-Range Output scheme.","SKINIT and STGI are supported.","SMAP. Supports Supervisor-Mode Access Prevention (and the …","Secure Memory Encryption is supported if set.","SMEP. Supports Supervisor-Mode Execution Prevention if 1.","Safer Mode Extensions. A value of 1 indicates that the …","Self Snoop. The processor supports the management of …","SSE. The processor supports the SSE extensions.","SSE2. The processor supports the SSE2 extensions.","Streaming SIMD Extensions 3 (SSE3). A value of 1 …","A value of 1 indicates that the processor supports SSE4.1.","A value of 1 indicates that the processor supports SSE4.2.","XTRQ, INSERTQ, MOVNTSS, and MOVNTSD instruction support.","A value of 1 indicates the presence of the Supplemental …","Has Software uncorrectable error containment and recovery …","Secure virtual machine supported.","Are fast system calls available.","SYSENTER and SYSEXIT Instructions. The SYSENTER and …","Trailing bit manipulation instruction support.","Has THERMTRIP?","Thermal Monitor. The processor implements the thermal …","Hardware thermal control (HTC)?","Thermal Monitor 2. A value of 1 indicates whether the …","If true, Tracing can be enabled with IA32_RTIT_CTL.ToPA = …","If true, ToPA tables can hold any number of output …","Topology extensions support.","Supports total bandwidth monitoring.","If true, Indicates support of output to Trace Transport …","Is Temperature Sensor available?","Time Stamp Counter. The RDTSC instruction is supported, …","IA32_TSC_ADJUST MSR is supported if 1.","A value of 1 indicates that the processors local APIC …","Intel Turbo Boost Technology Available (see description of…","Intel® Turbo Boost Max Technology 3.0 available.","Supports user-mode instruction prevention if 1.","EFER.LMSLE is unsupported if set.","Virtual 8086 Mode Enhancements. Virtual 8086 mode …","VM Permission Levels supported if set.","Virtual Machine Extensions. A value of 1 indicates that …","Voltage ID control.","Virtual Transparent Encryption supported if set.","WBNOINVD instruction supported if set.","Watchdog timer support.","A value of 1 indicates that the processor supports x2APIC …","Supports XGETBV with ECX = 1 if set.","Extended operation support.","A value of 1 indicates that the processor supports the …","Supports XSAVEC and the compacted form of XRSTOR if set.","CPU has xsaveopt feature.","Supports XSAVES/XRSTORS and IA32_XSS if set.","Highest COS number supported for this Leaf.","Highest COS number supported for this Leaf.","Highest COS number supported for this Leaf.","Support for HDC in IA32_XSS.","Support for PT in IA32_XSS.","L1 instruction cache associativity.","L1 instruction cache line size in bytes.","L1 instruction cache lines per tag.","L1 instruction cache size in KB","Returns the identity of the <code>Hypervisor</code>.","Initial APIC ID","Supports treating interrupts as break-event for MWAIT, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Maximum page count for INVLPGB instruction.","Branch instruction retired event not available if 1.","Branch mispredict retired event not available if 1.","Last-level cache reference event not available if 1.","Returns true when the compacted format of an XSAVE area …","Core cycle event not available if 1.","Fully associative structure","Fully Associative cache","True if the bit n (corresponding to the sub-leaf index) …","True if bit n is supported in XCR0.","Cache Inclusiveness (Bit 1) False: Cache is not inclusive …","Instruction retired event not available if 1.","Last-level cache misses event not available if 1.","Reference cycles event not available if 1.","Self Initializing cache level (does not need SW …","Write-Back Invalidate/Invalidate (Bit 0) False: …","Bit-granular map of isolation/contention of allocation …","Bit-granular map of isolation/contention of allocation …","Iterator over extended state enumeration levels &gt;= 2.","Iterator over SGX sub-leafs.","Instruction TLB associativity for 2-MB and 4-MB pages.","L2 Instruction TLB associativity for 2-MB and 4-MB pages.","Instruction TLB number of entries for 2-MB and 4-MB pages.","L2 Instruction TLB number of entries for 2-MB and 4-MB …","Instruction TLB associativity for 4K pages.","L2 Instruction TLB associativity for 4K pages.","Instruction TLB number of entries for 4K pages.","L2 Instruction TLB number of entries for 4K pages.","L2 Cache Allocation Information.","L2 Associativity field","L2 Cache Line size in bytes","L2 cache lines per tag.","Cache size in KB.","L3 Cache Allocation Information.","L3 Cache Monitoring.","L2 Associativity field","L2 Cache Line size in bytes","L2 cache lines per tag.","Specifies the L3 cache size range","Largest monitor-line size in bytes (default is processor…","Cache Level (starts at 1)","Level number.","","Linear Address Bits","The value of MAWAU used by the BNDLDX and BNDSTX …","Maximum number of addressable IDs for logical processors …","Maximum number of addressable IDs for logical processors …","Maximum number of addressable IDs for processor cores in …","The maximum supported enclave size in 64-bit mode is …","The maximum supported enclave size in non-64-bit mode is …","Number of encrypted guests supported simultaneouslys","Reports the maximum MBA throttling value supported for …","Maximum number of addressable IDs for logical processors …","The maximum ECX value recognized by RDPRU.","The size of the <code>apic_id_size</code> field determines the maximum …","Maximum range (zero-based) of RMID of L3.","Memory Bandwidth Allocation Information.","Minimum ASID value for an SEV enabled, SEV-ES disabled …","Bit vector of supported extended SGX features.","","Uses Rust’s <code>cpuid</code> function from the <code>arch</code> module.","","","","","","","","","","","","","","","","","","Return new CpuId struct.","Iterate over all cache information.","Iterate over all cache info subleafs for this CPU.","","","","Iterate over each sub-leaf with an address translation …","Iterate over all SoC vendor specific attributes.","An unsigned integer which is the nominal frequency of the …","Number as retrieved from cpuid","Number of physical threads.","Number of general-purpose performance monitoring counter …","An unsigned integer which is the numerator of the …","The offset in bytes of this extended state components …","Partitioning (0: Soft partitioning between the logical …","Performance time-stamp counter size (in bits).","Physical Address Bits","Physical Address bit reduction","The physical address of the base of the EPC section","Physical Line partitions (Bits 21-12)","Returns package type on AMD.","Processor Base Frequency (in MHz).","Maximum Frequency (in MHz).","Number of logical processors at this level type. The …","Maximum range (zero-based) of RMID within this physical …","Reports the valid bits of SECS.ATTRIBUTES[127:0] that …","Combination of bits 00-31 and 32-63 of 96 bit processor …","Bits 00-31 of 96 bit processor serial number. (Available …","Bits 32-63 of 96 bit processor serial number. (Available …","Number of Sets.","Number of Sets (Bits 31-00)","Number of bits to shift right on x2APIC ID to get a …","The size in bytes (from the offset specified in EBX) of …","Size of the corresponding EPC section within the …","Smallest monitor-line size in bytes (default is processor…","Version Information: Stepping ID","","Number of C0 sub C-states supported using MWAIT (Bits 03 …","Number of C1 sub C-states supported using MWAIT (Bits 07 …","Number of C2 sub C-states supported using MWAIT (Bits 11 …","Number of C3 sub C-states supported using MWAIT (Bits 15 …","Number of C4 sub C-states supported using MWAIT (Bits 19 …","Number of C5 sub C-states supported using MWAIT (Bits 23 …","Number of C6 sub C-states supported using MWAIT (Bits 27 …","Number of C7 sub C-states supported using MWAIT (Bits 31 …","Bitmap of supported Cycle Threshold value encodings (Bits …","Bitmap of supported MTC period encodings (Bit 31:16).","Bitmap of supported Configurable PSB frequency encodings …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","“TSC frequency” = “core crystal clock frequency” …","TSC frequency in kHz.","Cache type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Version ID of architectural performance monitoring. (Bits …","Ways of associativity.","Return new CpuId struct with custom reader function.","x2APIC ID the current logical processor. (Bits 31-00)","Support for AVX512 OPMASK in XCR0.","Support for AVX512 ZMM Hi16 in XCR0.","Support for AVX512 ZMM Hi256 XCR0.","Support for AVX 256-bit in XCR0.","Support for legacy x87 in XCR0.","Support for MPX BNDCSR in XCR0.","Support for MPX BNDREGS in XCR0.","Support for PKRU in XCR0.","Support for SSE 128-bit in XCR0.","Maximum size (bytes, from the beginning of the …","Maximum size (bytes, from the beginning of the …","The size in bytes of the XSAVE area containing all states …","","","","","",""],"i":[1,0,0,1,0,2,0,0,0,0,0,0,3,0,0,2,0,0,0,4,5,0,6,6,7,0,0,0,0,0,0,0,0,0,6,2,1,0,0,4,5,3,1,0,0,0,0,0,0,0,0,6,4,5,0,2,0,0,0,0,0,1,1,0,0,4,3,2,0,0,0,0,0,0,2,0,0,0,4,5,6,5,1,1,0,1,8,9,10,11,12,13,12,13,14,15,15,16,11,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,9,33,34,6,35,10,36,37,8,12,38,2,39,40,41,14,4,42,43,44,3,45,46,47,48,7,49,50,5,51,13,1,16,11,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,9,33,34,6,35,10,36,37,8,12,38,2,39,40,41,14,4,42,43,44,3,45,46,47,48,7,49,50,5,51,13,1,16,15,30,36,31,31,14,26,46,15,37,8,38,2,39,41,14,43,45,48,50,14,28,24,20,35,0,33,33,33,33,37,29,39,33,34,33,34,33,34,33,34,17,8,8,20,8,8,33,34,6,35,10,36,8,12,38,40,14,4,42,44,3,46,47,5,13,1,15,15,16,42,15,20,20,16,11,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,9,33,34,6,35,10,36,37,8,12,12,38,2,39,39,40,41,14,4,42,43,44,3,45,46,47,48,7,49,50,5,51,13,13,1,16,11,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,9,33,34,6,35,10,36,37,8,12,38,2,39,40,41,14,4,42,43,44,3,45,46,47,48,7,49,50,5,51,13,1,37,37,37,19,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,32,37,37,37,32,37,32,37,37,32,32,37,10,35,31,16,31,16,31,31,16,36,15,16,18,15,16,36,16,20,15,17,15,18,18,18,18,18,18,18,18,18,18,18,10,15,18,18,15,16,15,15,15,26,14,28,35,15,16,15,15,36,15,15,17,17,15,27,27,17,16,16,15,16,18,35,17,15,16,15,18,35,18,15,17,18,15,17,36,35,35,17,17,17,17,17,17,17,17,15,16,17,10,10,35,10,10,18,28,25,25,23,16,47,28,24,16,16,15,35,15,10,25,16,15,16,15,16,15,18,15,28,15,16,24,18,16,15,15,36,15,15,15,15,15,16,16,16,15,18,17,15,28,35,16,18,36,18,15,15,15,17,28,18,10,15,18,18,18,16,18,10,36,35,28,18,36,36,36,18,27,27,18,18,28,16,18,36,18,15,15,15,15,15,15,15,16,15,35,16,16,15,16,35,15,35,15,28,28,16,24,28,35,15,18,15,17,17,18,10,15,36,15,35,36,10,16,15,21,16,15,21,21,21,26,46,47,21,21,33,33,33,33,9,15,42,16,11,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,9,33,34,6,35,10,36,37,8,12,38,2,39,40,41,14,4,42,43,44,3,45,46,47,48,7,49,50,5,51,13,1,38,41,43,45,48,50,51,10,20,20,20,22,20,31,14,22,22,14,20,20,20,14,14,26,46,21,27,33,34,33,34,33,34,33,34,25,34,34,34,34,25,23,34,34,34,34,42,14,44,44,10,18,31,14,14,27,27,36,47,15,10,10,24,25,36,27,15,0,33,34,6,35,10,36,8,12,38,40,14,42,44,46,47,13,1,37,38,41,43,45,48,50,51,29,39,10,20,29,22,31,10,10,36,49,14,16,30,30,44,23,27,40,40,40,31,14,44,22,49,42,15,22,42,42,42,42,42,42,42,42,28,28,28,16,11,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,9,33,34,6,35,10,36,37,8,12,38,2,39,40,41,14,4,42,43,44,3,45,46,47,48,7,49,50,5,51,13,1,16,11,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,9,33,34,6,35,10,36,37,8,12,38,2,39,40,41,14,4,42,43,44,3,45,46,47,48,7,49,50,5,51,13,1,29,9,39,16,11,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,9,33,34,6,35,10,36,37,8,12,38,2,39,40,41,14,4,42,43,44,3,45,46,47,48,7,49,50,5,51,13,1,20,31,37,44,21,21,21,21,21,21,21,21,21,21,21,21,52,53,53,53,54,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[],[["u32",15],["option",4,["u32"]]]],[[],["u8",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["usize",15]],[[],["u8",15]],[[],["uu32",15]],[[],["u8",15]],[[],["u16",15]],[[],["u8",15]],[[],["u8",15]],[[],["dattype",4]],[[],["cachetype",4]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["cpuid",3]],[[],["cpuidresult",3]],[[],["cacheinfoiter",3]],[[],["cacheinfotype",4]],[[],["cacheinfo",3]],[[],["cacheparametersiter",3]],[[],["cacheparameter",3]],[[],["extendedtopologyiter",3]],[[],["extendedstateiter",3]],[[],["sgxsectioniter",3]],[[],["datiter",3]],[[],["usize",15]],[[],["u8",15]],[[],["u32",15]],[[],["u8",15]],[[],["u32",15]],null,[[],["associativity",4]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["cpuid",3]],[[],["u32",15]],[[],["str",15]],[[],["associativity",4]],[[],["associativity",4]],[[],["u8",15]],[[],["u16",15]],[[],["associativity",4]],[[],["associativity",4]],[[],["u8",15]],[[],["u16",15]],[[],["u8",15]],null,null,[[],["u8",15]],null,null,[[["l1cachetlbinfo",3]],["bool",15]],[[["l2and3cachetlbinfo",3]],["bool",15]],[[["associativity",4]],["bool",15]],[[["apminfo",3]],["bool",15]],[[["processorcapacityandfeatureinfo",3]],["bool",15]],[[["memoryencryptioninfo",3]],["bool",15]],[[["cpuidresult",3]],["bool",15]],[[["vendorinfo",3]],["bool",15]],[[["cacheinfoiter",3]],["bool",15]],[[["processorserial",3]],["bool",15]],[[["cacheparameter",3]],["bool",15]],[[["cachetype",4]],["bool",15]],[[["monitormwaitinfo",3]],["bool",15]],[[["extendedtopologylevel",3]],["bool",15]],[[["topologytype",4]],["bool",15]],[[["l2catinfo",3]],["bool",15]],[[["membwallocationinfo",3]],["bool",15]],[[["dattype",4]],["bool",15]],[[["socvendorbrand",3]],["bool",15]],[[["hypervisor",4]],["bool",15]],[[],["u8",15]],[[],["u8",15]],[[],["u32",15]],[[],["bool",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["apminfo",3],["option",4,["apminfo"]]]],[[],[["cacheinfoiter",3],["option",4,["cacheinfoiter"]]]],[[],[["option",4,["cacheparametersiter"]],["cacheparametersiter",3]]],[[],["u32",15]],[[],[["option",4,["datiter"]],["datiter",3]]],[[],[["option",4,["directcacheaccessinfo"]],["directcacheaccessinfo",3]]],[[],[["extendedfeatures",3],["option",4,["extendedfeatures"]]]],[[],[["extendedprocessorfeatureidentifiers",3],["option",4,["extendedprocessorfeatureidentifiers"]]]],[[],[["option",4,["extendedstateinfo"]],["extendedstateinfo",3]]],[[],[["extendedtopologyiter",3],["option",4,["extendedtopologyiter"]]]],[[],[["option",4,["featureinfo"]],["featureinfo",3]]],[[],[["option",4,["hypervisorinfo"]],["hypervisorinfo",3]]],[[],[["option",4,["l1cachetlbinfo"]],["l1cachetlbinfo",3]]],[[],[["option",4,["l2and3cachetlbinfo"]],["l2and3cachetlbinfo",3]]],[[],[["memoryencryptioninfo",3],["option",4,["memoryencryptioninfo"]]]],[[],[["monitormwaitinfo",3],["option",4,["monitormwaitinfo"]]]],[[],[["option",4,["performancemonitoringinfo"]],["performancemonitoringinfo",3]]],[[],[["processorbrandstring",3],["option",4,["processorbrandstring"]]]],[[],[["option",4,["processorcapacityandfeatureinfo"]],["processorcapacityandfeatureinfo",3]]],[[],[["option",4,["processorfrequencyinfo"]],["processorfrequencyinfo",3]]],[[],[["option",4,["processorserial"]],["processorserial",3]]],[[],[["option",4,["processortraceinfo"]],["processortraceinfo",3]]],[[],["u32",15]],[[],[["option",4,["rdtallocationinfo"]],["rdtallocationinfo",3]]],[[],[["option",4,["rdtmonitoringinfo"]],["rdtmonitoringinfo",3]]],[[],[["option",4,["sgxinfo"]],["sgxinfo",3]]],[[],["u16",15]],[[],[["socvendorinfo",3],["option",4,["socvendorinfo"]]]],[[],["u32",15]],[[],[["option",4,["thermalpowerinfo"]],["thermalpowerinfo",3]]],[[],[["tscinfo",3],["option",4,["tscinfo"]]]],[[],[["option",4,["socvendorattributesiter"]],["socvendorattributesiter",3]]],[[],[["option",4,["socvendorbrand"]],["socvendorbrand",3]]],[[],[["option",4,["vendorinfo"]],["vendorinfo",3]]],[[],["u8",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["bool",15]],[[],["bool",15]],[[],["associativity",4]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["hypervisor",4]],[[],["u8",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u16",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u32",15]],[[],["u32",15]],[[],["extendedstateiter",3]],[[],["sgxsectioniter",3]],[[],["associativity",4]],[[],["associativity",4]],[[],["u8",15]],[[],["u16",15]],[[],["associativity",4]],[[],["associativity",4]],[[],["u8",15]],[[],["u16",15]],[[],[["option",4,["l2catinfo"]],["l2catinfo",3]]],[[],["associativity",4]],[[],["u8",15]],[[],["u8",15]],[[],["u16",15]],[[],[["option",4,["l3catinfo"]],["l3catinfo",3]]],[[],[["l3monitoringinfo",3],["option",4,["l3monitoringinfo"]]]],[[],["associativity",4]],[[],["u8",15]],[[],["u8",15]],[[],["u16",15]],[[],["u16",15]],[[],["u8",15]],[[],["u8",15]],[[],["topologytype",4]],[[],["u8",15]],[[],["u8",15]],[[],["u16",15]],[[],["usize",15]],[[],["usize",15]],[[],["u8",15]],[[],["u8",15]],[[],["u32",15]],[[],["u16",15]],[[],["u8",15]],[[],["u16",15]],[[],["usize",15]],[[],["u32",15]],[[],[["option",4,["membwallocationinfo"]],["membwallocationinfo",3]]],[[],["u32",15]],[[],["u32",15]],[[],["u8",15]],null,[[["l1cachetlbinfo",3]],["bool",15]],[[["l2and3cachetlbinfo",3]],["bool",15]],[[["associativity",4]],["bool",15]],[[["apminfo",3]],["bool",15]],[[["processorcapacityandfeatureinfo",3]],["bool",15]],[[["memoryencryptioninfo",3]],["bool",15]],[[["cpuidresult",3]],["bool",15]],[[["vendorinfo",3]],["bool",15]],[[["cacheinfoiter",3]],["bool",15]],[[["processorserial",3]],["bool",15]],[[["cacheparameter",3]],["bool",15]],[[["monitormwaitinfo",3]],["bool",15]],[[["extendedtopologylevel",3]],["bool",15]],[[["l2catinfo",3]],["bool",15]],[[["membwallocationinfo",3]],["bool",15]],[[["socvendorbrand",3]],["bool",15]],[[["hypervisor",4]],["bool",15]],[[]],[[],[["option",4,["cacheinfo"]],["cacheinfo",3]]],[[],[["option",4,["cacheparameter"]],["cacheparameter",3]]],[[],[["option",4,["extendedtopologylevel"]],["extendedtopologylevel",3]]],[[],[["option",4,["extendedstate"]],["extendedstate",3]]],[[],[["option",4,["sgxsectioninfo"]],["sgxsectioninfo",4]]],[[],[["datinfo",3],["option",4,["datinfo"]]]],[[],[["cpuidresult",3],["option",4,["cpuidresult"]]]],[[],["u32",15]],null,[[],["usize",15]],[[],["u8",15]],[[],["u32",15]],[[],["u32",15]],[[],["u8",15]],[[],["usize",15]],[[],["u8",15]],[[],["u8",15]],[[],["u64",15]],[[],["usize",15]],[[],["u32",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u32",15]],[[]],[[],["u64",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["usize",15]],[[],["u32",15]],[[],["u32",15]],[[],["u64",15]],[[],["u16",15]],[[],["u8",15]],null,[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["u64",15],["option",4,["u64"]]]],[[],[["u32",15],["option",4,["u32"]]]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["u8",15]],[[],["u16",15]],[[]],[[],["u32",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],null,null,null,null,null,[[["u32",15]],["cpuidresult",3]]],"p":[[4,"Hypervisor"],[4,"CacheInfoType"],[4,"TopologyType"],[4,"CacheType"],[4,"DatType"],[4,"Associativity"],[4,"SgxSectionInfo"],[3,"CpuIdResult"],[3,"HypervisorInfo"],[3,"ProcessorCapacityAndFeatureInfo"],[3,"ProcessorBrandString"],[3,"VendorInfo"],[3,"SoCVendorBrand"],[3,"CacheParameter"],[3,"FeatureInfo"],[3,"ExtendedProcessorFeatureIdentifiers"],[3,"ThermalPowerInfo"],[3,"ExtendedFeatures"],[3,"DirectCacheAccessInfo"],[3,"PerformanceMonitoringInfo"],[3,"ExtendedStateInfo"],[3,"ExtendedState"],[3,"RdtMonitoringInfo"],[3,"L3MonitoringInfo"],[3,"RdtAllocationInfo"],[3,"L3CatInfo"],[3,"SgxInfo"],[3,"ProcessorTraceInfo"],[3,"TscInfo"],[3,"ProcessorFrequencyInfo"],[3,"DatInfo"],[3,"SoCVendorInfo"],[3,"L1CacheTlbInfo"],[3,"L2And3CacheTlbInfo"],[3,"ApmInfo"],[3,"MemoryEncryptionInfo"],[3,"CpuId"],[3,"CacheInfoIter"],[3,"CacheInfo"],[3,"ProcessorSerial"],[3,"CacheParametersIter"],[3,"MonitorMwaitInfo"],[3,"ExtendedTopologyIter"],[3,"ExtendedTopologyLevel"],[3,"ExtendedStateIter"],[3,"L2CatInfo"],[3,"MemBwAllocationInfo"],[3,"SgxSectionIter"],[3,"EpcSection"],[3,"DatIter"],[3,"SoCVendorAttributesIter"],[13,"NWay"],[13,"Unknown"],[13,"Epc"]]},\
"rustc_demangle":{"doc":"Demangle Rust compiler symbol names.","t":[3,3,11,11,11,11,11,11,5,11,11,11,11,11,11,11,5,11,11,11,11,11,11],"n":["Demangle","TryDemangleError","as_str","borrow","borrow","borrow_mut","borrow_mut","clone","demangle","fmt","fmt","fmt","from","from","into","into","try_demangle","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["rustc_demangle","","","","","","","","","","","","","","","","","","","","","",""],"d":["Representation of a demangled symbol name.","Error returned from the <code>try_demangle</code> function below when …","Returns the underlying string that’s being demangled.","","","","","","De-mangles a Rust symbol into a more readable version","","","","","","","","The same as <code>demangle</code>, except return an <code>Err</code> if the string …","","","","","",""],"i":[0,0,1,1,2,1,2,2,0,1,1,2,1,2,1,2,0,1,2,1,2,1,2],"f":[null,null,[[],["str",15]],[[]],[[]],[[]],[[]],[[],["trydemangleerror",3]],[[["str",15]],["demangle",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["str",15]],[["demangle",3],["trydemangleerror",3],["result",4,["demangle","trydemangleerror"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"Demangle"],[3,"TryDemangleError"]]},\
"scopeguard":{"doc":"A scope guard will run a given closure when it goes out …","t":[4,3,8,11,11,11,11,14,11,11,11,11,11,11,11,5,11,11,11,10,11,11,11,11,11,11,11,11],"n":["Always","ScopeGuard","Strategy","borrow","borrow","borrow_mut","borrow_mut","defer","deref","deref_mut","drop","fmt","fmt","from","from","guard","into","into","into_inner","should_run","should_run","try_from","try_from","try_into","try_into","type_id","type_id","with_strategy"],"q":["scopeguard","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Always run on scope exit.","<code>ScopeGuard</code> is a scope guard that may own a protected …","Controls in which cases the associated code should be run","","","","","Macro to create a <code>ScopeGuard</code> (always run).","","","","","","","","Create a new <code>ScopeGuard</code> owning <code>v</code> and with deferred …","","","“Defuse” the guard and extract the value without …","Return <code>true</code> if the guard’s associated code should run …","","","","","","","","Create a <code>ScopeGuard</code> that owns <code>v</code> (accessible through …"],"i":[0,0,0,1,2,1,2,0,1,1,1,1,2,1,2,0,1,2,1,3,2,1,2,1,2,1,2,1],"f":[null,null,null,[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],[["scopeguard",3,["always"]],["always",4]]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["scopeguard",3]]],"p":[[3,"ScopeGuard"],[4,"Always"],[8,"Strategy"]]},\
"spin":{"doc":"This crate provides spin-based versions of the primitives …","t":[6,6,6,6,6,6,6,0,0,0,0,0,0,0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,6,6,6,6,6,6,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,8,3,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Barrier","Lazy","Mutex","Once","RwLock","RwLockUpgradableGuard","RwLockWriteGuard","barrier","lazy","lock_api","mutex","once","relax","rwlock","Barrier","BarrierWaitResult","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","is_leader","new","try_from","try_from","try_into","try_into","type_id","type_id","wait","Lazy","as_mut_ptr","borrow","borrow_mut","default","deref","fmt","force","from","into","new","try_from","try_into","type_id","Mutex","MutexGuard","RwLock","RwLockReadGuard","RwLockUpgradableReadGuard","RwLockWriteGuard","Mutex","MutexGuard","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref_mut","fmt","fmt","fmt","force_unlock","from","from","from","from","get_mut","into","into","into_inner","is_locked","is_locked","leak","lock","lock","new","spin","try_from","try_from","try_into","try_into","try_lock","try_lock","type_id","type_id","unlock","SpinMutex","SpinMutexGuard","as_mut_ptr","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref_mut","drop","fmt","fmt","fmt","force_unlock","from","from","from","from","get_mut","into","into","into_inner","is_locked","is_locked","leak","lock","lock","new","try_from","try_from","try_into","try_into","try_lock","try_lock","type_id","type_id","unlock","INIT","Once","as_mut_ptr","borrow","borrow_mut","call_once","drop","fmt","from","from","from","get","get_mut","get_unchecked","initialized","into","is_completed","new","poll","try_from","try_into","try_into_inner","type_id","wait","Loop","RelaxStrategy","Spin","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","relax","relax","relax","try_from","try_from","try_into","try_into","type_id","type_id","RwLock","RwLockReadGuard","RwLockUpgradableGuard","RwLockWriteGuard","as_mut_ptr","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","deref","deref","deref","deref_mut","downgrade","downgrade","downgrade","downgrade_to_upgradeable","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_read_decrement","force_write_unlock","from","from","from","from","from","from","get_mut","into","into","into","into","into_inner","is_locked","leak","leak","leak","lock_exclusive","lock_shared","lock_upgradable","new","read","reader_count","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_lock_exclusive","try_lock_shared","try_lock_upgradable","try_read","try_upgrade","try_upgrade","try_upgradeable_read","try_write","type_id","type_id","type_id","type_id","unlock_exclusive","unlock_shared","unlock_upgradable","upgrade","upgrade","upgradeable_read","write","writer_count"],"q":["spin","","","","","","","","","","","","","","spin::barrier","","","","","","","","","","","","","","","","","","","spin::lazy","","","","","","","","","","","","","","spin::lock_api","","","","","","spin::mutex","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","spin::mutex::spin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","spin::once","","","","","","","","","","","","","","","","","","","","","","","","spin::relax","","","","","","","","","","","","","","","","","","","","spin::rwlock","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A primitive that synchronizes the execution of multiple …","A value which is initialized on the first access. See …","A primitive that synchronizes the execution of multiple …","A primitive that provides lazy one-time initialization. …","A lock that provides data access to either one writer or …","A guard that provides immutable data access but can be …","A guard that provides mutable data access. See …","Synchronization primitive allowing multiple threads to …","Synchronization primitives for lazy evaluation.","Spin synchronisation primitives, but compatible with …","Locks that have the same behaviour as a mutex.","Synchronization primitives for one-time evaluation.","Strategies that determine the behaviour of locks when …","A lock that provides data access to either one writer or …","A primitive that synchronizes the execution of multiple …","A <code>BarrierWaitResult</code> is returned by <code>wait</code> when all threads …","","","","","","","","","Returns whether this thread from <code>wait</code> is the “leader …","Creates a new barrier that can block a given number of …","","","","","","","Blocks the current thread until all threads have …","A value which is initialized on the first access.","Retrieves a mutable pointer to the inner data.","","","Creates a new lazy value using <code>Default</code> as the …","","","Forces the evaluation of this lazy value and returns a …","","","Creates a new lazy value with the given initializing …","","","","A lock that provides mutually exclusive data access …","A guard that provides mutable data access (compatible …","A lock that provides data access to either one writer or …","A guard that provides immutable data access (compatible …","A guard that provides immutable data access but can be …","A guard that provides mutable data access (compatible …","A spin-based lock providing mutually exclusive access to …","A generic guard that will protect some data access and …","","","","","","","","","","","Force unlock this <code>Mutex</code>.","","","","","Returns a mutable reference to the underlying data.","","","Consumes this <code>Mutex</code> and unwraps the underlying data.","Returns <code>true</code> if the lock is currently held.","","Leak the lock guard, yielding a mutable reference to the …","","Locks the <code>Mutex</code> and returns a guard that permits access …","Creates a new <code>Mutex</code> wrapping the supplied data.","A naïve spinning mutex.","","","","","Try to lock this <code>Mutex</code>, returning a lock guard if …","","","","","A spin lock providing mutually exclusive access to data.","A guard that provides mutable data access.","Returns a mutable pointer to the underlying data.","","","","","","","","The dropping of the MutexGuard will release the lock it …","","","","Force unlock this <code>SpinMutex</code>.","","","","","Returns a mutable reference to the underlying data.","","","Consumes this <code>SpinMutex</code> and unwraps the underlying data.","","Returns <code>true</code> if the lock is currently held.","Leak the lock guard, yielding a mutable reference to the …","","Locks the <code>SpinMutex</code> and returns a guard that permits …","Creates a new <code>SpinMutex</code> wrapping the supplied data.","","","","","","Try to lock this <code>SpinMutex</code>, returning a lock guard if …","","","","Initialization constant of <code>Once</code>.","A primitive that provides lazy one-time initialization.","Retrieve a pointer to the inner data.","","","Performs an initialization routine once and only once. …","","","","","","Returns a reference to the inner value if the <code>Once</code> has …","Returns a mutable reference to the inner value if the <code>Once</code>…","Returns a reference to the inner value on the unchecked …","Creates a new initialized <code>Once</code>.","","Checks whether the value has been initialized.","Creates a new <code>Once</code>.","Like <code>Once::get</code>, but will spin if the <code>Once</code> is in the …","","","Returns a the inner value if the <code>Once</code> has been …","","Spins until the <code>Once</code> contains a value.","A strategy that rapidly spins, without telling the CPU to …","A trait implemented by spinning relax strategies.","A strategy that rapidly spins while informing the CPU …","","","","","","","","","Perform the relaxing operation during a period of …","","","","","","","","","A lock that provides data access to either one writer or …","A guard that provides immutable data access.","A guard that provides immutable data access but can be …","A guard that provides mutable data access.","Returns a mutable pointer to the underying data.","","","","","","","","","","","","","","","Downgrades the writable lock guard to a readable, shared …","Downgrades the upgradeable lock guard to a readable, …","Downgrades the writable lock guard to an upgradable, …","","","","","","","","","","","Force decrement the reader count.","Force unlock exclusive write access.","","","","","","","Returns a mutable reference to the underlying data.","","","","","Consumes this <code>RwLock</code>, returning the underlying data.","","Leak the lock guard, yielding a reference to the …","Leak the lock guard, yielding a mutable reference to the …","Leak the lock guard, yielding a reference to the …","","","","Creates a new spinlock wrapping the supplied data.","Locks this rwlock with shared read access, blocking the …","Return the number of readers that currently hold the lock …","","","","","","","","","","","","Attempt to acquire this lock with shared read access.","","Tries to upgrade an upgradeable lock guard to a writable …","Tries to obtain an upgradeable lock guard.","Attempt to lock this rwlock with exclusive write access.","","","","","","","","","Upgrades an upgradeable lock guard to a writable lock …","Obtain a readable lock guard that can later be upgraded …","Lock this rwlock with exclusive write access, blocking …","Return the number of writers that currently hold the lock."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,2,1,2,1,2,2,1,1,2,1,2,1,2,1,0,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,4,5,4,5,4,5,5,4,5,5,4,4,4,4,5,4,4,5,4,4,4,5,4,4,4,0,4,5,4,5,4,4,4,5,4,0,0,6,6,7,6,7,6,7,7,7,6,7,7,6,6,6,6,7,6,6,7,6,6,6,7,6,6,6,6,7,6,7,6,6,6,7,6,8,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,9,10,9,10,9,10,9,10,11,9,10,9,10,9,10,9,10,0,0,0,0,12,12,13,14,15,12,13,14,15,12,13,14,15,14,12,14,15,14,13,14,15,12,13,13,14,14,15,15,12,12,12,12,12,13,14,15,12,12,13,14,15,12,12,13,14,15,12,12,12,12,12,12,12,13,14,15,12,13,14,15,12,12,12,12,12,15,12,12,12,13,14,15,12,12,12,12,15,12,12,12],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["barrierwaitresult",3]],null,[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[],["mutexguard",3]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["option",4,["mutexguard"]],["mutexguard",3]]],[[],["bool",15]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[],["spinmutexguard",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["bool",15]],[[],[["option",4,["spinmutexguard"]],["spinmutexguard",3]]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[]],[[["fnonce",8]]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[],["option",4]],[[],["result",4]],[[],["result",4]],[[],["option",4]],[[],["typeid",3]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["rwlockreadguard",3]],[[],["rwlockreadguard",3]],[[],["rwlockupgradableguard",3]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["rwlockreadguard",3]],[[],["usize",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["rwlockreadguard",3],["option",4,["rwlockreadguard"]]]],[[],["bool",15]],[[],[["rwlockwriteguard",3],["result",4,["rwlockwriteguard"]]]],[[],[["option",4,["rwlockupgradableguard"]],["rwlockupgradableguard",3]]],[[],[["option",4,["rwlockwriteguard"]],["rwlockwriteguard",3]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["rwlockwriteguard",3]],[[],["rwlockupgradableguard",3]],[[],["rwlockwriteguard",3]],[[],["usize",15]]],"p":[[3,"Barrier"],[3,"BarrierWaitResult"],[3,"Lazy"],[3,"Mutex"],[3,"MutexGuard"],[3,"SpinMutex"],[3,"SpinMutexGuard"],[3,"Once"],[3,"Spin"],[3,"Loop"],[8,"RelaxStrategy"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"RwLockUpgradableGuard"]]},\
"stivale_boot":{"doc":"","t":[0,0,13,13,13,13,18,13,18,18,13,18,18,13,3,3,3,4,3,3,3,3,13,11,11,12,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,12,11,12,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,12,11,11,11,11,11,11,11,11,12,12,11,12,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,13,18,13,13,13,13,13,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,18,13,18,18,12,12,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,12,11,11,12,11,11,12,11,11,11,12,11,12,12,11,11,12,11,12,11,11,11,11,11,12,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,11,11,12,11,12,12,11,11,11,11,12,11,12,12,11,12,11,12,12,11,11,11,11,12,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11],"n":["v1","v2","AcpiNvs","AcpiReclaimable","BadMemory","BootloaderReclaimable","FRAMEBUFFER_MODE","Framebuffer","HIGHER_HALF","KASLR","Kernel","LEVEL_5_PAGING","NULL","Reserved","StivaleHeader","StivaleHeaderFlags","StivaleMemoryMapEntry","StivaleMemoryMapEntryType","StivaleMemoryMapIter","StivaleModule","StivaleModuleIter","StivaleStruct","Usable","all","as_str","base","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","blue_mask_shift","blue_mask_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","cmp","command_line","contains","empty","end","end_address","entry_point","entry_type","entry_type","eq","eq","extend","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","framebuffer_addr","framebuffer_bpp","framebuffer_bpp","framebuffer_height","framebuffer_height","framebuffer_pitch","framebuffer_width","framebuffer_width","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","green_mask_shift","green_mask_size","hash","insert","intersects","into","into","into","into","into","into","into","into","into_iter","into_iter","is_all","is_empty","length","memory_map_array","memory_map_as_slice","memory_map_iter","memory_map_len","module_len","modules","modules_as_slice","modules_iter","ne","new","next","next","not","partial_cmp","red_mask_shift","red_mask_size","remove","rsdp_adddres","set","size","smbios_entry_32","smbios_entry_64","stack","start","string","sub","sub_assign","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unix_epoch","AcpiNvs","AcpiReclaimable","BIOS","BadMemory","BootloaderReclaimable","Framebuffer","Kernel","Reserved","Stivale5LevelPagingHeaderTag","StivaleCommandLineTag","StivaleDeviceTreeTag","StivaleEdidInfoTag","StivaleEfiSystemTableTag","StivaleEpochTag","StivaleFirmwareTag","StivaleFirmwareTagFlags","StivaleFramebufferHeaderTag","StivaleFramebufferTag","StivaleHeader","StivaleKernelFileTag","StivaleKernelSlideTag","StivaleMemoryMapEntry","StivaleMemoryMapEntryType","StivaleMemoryMapIter","StivaleMemoryMapTag","StivaleModule","StivaleModuleIter","StivaleModuleTag","StivaleMtrrHeaderTag","StivaleMtrrTag","StivalePxeInfoTag","StivaleRsdpTag","StivaleSmbiosTag","StivaleSmpHeaderTag","StivaleSmpHeaderTagFlags","StivaleSmpInfo","StivaleSmpTag","StivaleStruct","StivaleTagHeader","StivaleTerminalHeaderTag","StivaleTerminalTag","StivaleUartTag","StivaleUnmapNullHeadertag","StivaleVMap","UEFI","Usable","X2APIC","XAPIC","acpi_processor_uid","address","address","address","all","all","as_slice","as_slice","as_slice","as_slice","as_str","base","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","blue_mask_shift","blue_mask_size","bootloader_brand","bootloader_version","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bsp_lapic_id","clone","clone","clone","clone","clone","clone","cmp","cmp","cols","command_line","command_line","contains","contains","cpu_count","dev_tree","edid_info","edid_len","efi_system_table","empty","empty","end","end_address","entries_len","entry_array","entry_point","entry_type","entry_type","epoch","epoch","eq","eq","eq","extend","extend","extra","firmware","flags","flags","flags","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","framebuffer","framebuffer_addr","framebuffer_bpp","framebuffer_bpp","framebuffer_height","framebuffer_height","framebuffer_pitch","framebuffer_width","framebuffer_width","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","get_tag","goto_address","green_mask_shift","green_mask_size","hash","hash","header","header","header","header","header","header","header","header","header","header","header","header","header","header","header","header","header","header","header","identifier","info_array","insert","insert","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","kernel_file","kernel_file_addr","kernel_slide","kernel_slide","lapic_id","length","memory_map","memory_model","module_len","modules","modules_array","mtrr","ne","ne","new","new","new","new","new","new","new","next","next","next","next","next","next","next","next","next","not","not","partial_cmp","partial_cmp","pxe_info","red_mask_shift","red_mask_size","remove","remove","rows","rsdp","rsdp","server_ip","set","set","size","size","size","smbios","smbios_entry_32","smbios_entry_64","smp","smp_info_array","stack","start","string","sub","sub","sub_assign","sub_assign","system_table_addr","tags","target_stack","term_write","term_write_addr","terminal","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uart","unused","vmap"],"q":["stivale_boot","","stivale_boot::v1","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stivale_boot::vd":["This module contains the definitions for stivale boot …","This module contains the definitions for stivale2 boot …","ACPI memory that cannot be reclaimed.","ACPI memory that can be reclaimed.","Memory marked as defective (bad RAM).","Memory used by the bootloader that can be reclaimed after …","If set, the bootloader will be instructed to use graphics …","Memory containing the framebuffer.","If set, all pointers, except otherwise noted, are to be …","Formerly used to indicate whether to enable KASLR, this …","Memory containing the kernel and any modules.","If set, level 5 paging will be requested to the bootloader…","","Memory reserved by the system.","","","","The type of a memory map entry. The entries are …","Iterator over all the memory regions provided by the …","Structure representing a module, containing the …","Iterator over all the modules that were loaded.","","Usable memory.","Returns the set containing all flags.","Returns the ASCII 0-terminated string passed to the …","Physical address of base of the memory section.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Shift of the blue mask in RGB.","Size of the blue mask in RGB.","","","","","","","","","","","","","","","","","","","","","","","Address of the null-terminated command line.","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns an empty set of flags","End address of this module.","Returns the end address of this memory region.","Sets the entry point address. If not zero, the bootloader …","Returns the entry type of this memory region. External …","The type of this memory map entry.","","","","Sets the provided stivale header flags. See the …","","","","","","","","","Address of the framebuffer if avaliable else its set to …","Sets the requested framebuffer bpp. Only parsed if a …","The framebuffer bits per pixels.","Sets the requested framebuffer height. Only parsed if a …","Height of the framebuffer in pixels.","The framebuffer pitch in bytes.","Sets the requested framebuffer width. Only parsed if a …","Width of the framebuffer in pixels.","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","","Shift of the green mask in RGB.","Size of the green mask in RGB.","","Inserts the specified flags in-place.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Length of this memory section.","Pointer to the memory map array.","Return’s memory map entries pointer as a rust slice.","Returns an iterator over all the memory regions.","Length of the memory map entries.","The length of modules that the stivale bootloader loaded …","Pointer to the modules array.","Return’s the modules array pointer as a rust slice.","Returns an iterator over all the modules that were loaded.","","","","","Returns the complement of this set of flags.","","Shift of the red mask in RGB.","Size of the red mask in RGB.","Removes the specified flags in-place.","Address of the RSDP ACPI structure.","Inserts or removes the specified flags depending on the …","Returns the size of this module.","32-bit SMBIOS entry point address. Set to 0 if …","64-bit SMBIOS entry point address. Set to 0 if …","Sets the stack pointer which will be in ESP/RSP when the …","Address where this module has been loaded.","ASCII 0-terminated string passed to the module as …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","UNIX epoch at boot, which is read from system RTC.","ACPI memory that cannot be reclaimed.","ACPI memory that can be reclaimed.","The kernel was booted in a legacy BIOS mode.","Memory marked as defective (bad RAM).","Memory used by the bootloader that can be reclaimed after …","Memory containing the framebuffer.","Memory containing the kernel and any modules.","Memory reserved by the system.","If this tag is present the bootloader is instructed to …","This tag is used to get the kernel the command line …","This tag describes a device tree blob for the platform.","This tag is used to get the EDID information as acquired …","This tag is used to get a pointer to the EFI system table …","This tag is used to get the current UNIX epoch, as per …","This tag is used to get the info about the firmware.","Bitfield representing the firmware and boot flags passed …","If this tag is present the bootloader is instructed to …","If the framebuffer tag was requested through the …","","This tag is used to get the kernel with a pointer to a …","This tag is used to get the slide that the bootloader …","","The type of a memory map entry. The entries are …","Iterator over all the memory regions provided by the …","","Structure representing a module, containing the …","Iterator over all the modules that were loaded.","This tag is used to get the modules that the bootloader …","This tag tells the bootloader to, in case a framebuffer …","This tag exists if MTRR write-combining for the …","This tag reports that the kernel has been booted via PXE, …","This tag is used to get the location of the ACPI RSDP …","This tag is used to get the location of the SMBIOS entry …","","Bitfield representing the SMP header flags passed to the …","SMP imformation structure.","","","","If this tag is present the bootloader is instructed to …","If the terminal tag was requested through the terminal …","This tag reports that there is a memory mapped UART port …","If this tag is present the bootloader is instructed to …","This tag describes the high physical memory location.","The kernel was booted in UEFI mode.","Usable memory.","Instruct the bootloader to use X2APIC, if avaliable.","Instruct the bootloader to use XAPIC.","ACPI Processor UID as specified by MADT.","The address of the UART port.","The address of the device tree blob.","VMAP_HIGH, where the physical memory is mapped in the …","Returns the set containing all flags.","Returns the set containing all flags.","Return’s memory map entries pointer as a rust slice.","Return’s the EDID information pointer as a rust slice.","Return’s the modules array pointer as a rust slice.","Return’s the SMP info array pointer as a rust slice.","Returns the ASCII 0-terminated string passed to the …","Physical address of base of the memory section.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Shift of the blue mask in RGB.","Size of the blue mask in RGB.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","LAPIC ID of the BSP (bootstrap processor).","","","","","","","","","The amount of columns in the stivale terminal setup by …","","Pointer to a null-terminated cmdline.","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","The total number of logical CPUs (including BSP).","","","Length of the EDID information array.","","Returns an empty set of flags","Returns an empty set of flags","End address of this module.","Returns the end address of this memory region.","Total length of the memory map entries.","Pointer to the memory map entries.","","Returns the entry type of this memory region. External …","The type of this memory map entry.","","UNIX epoch at boot, which is read from system RTC.","","","","","","This field is polled by the started APs until the kernel …","","","","","","Flags telling about the firmware and boot flags passed by …","Stivale specification says that the flags in this tag are …","","","","","","","","","","","","","","","The address of the framebuffer.","","The amount of bytes-per pixel.","","The total height of the framebuffer in pixels.","The pitch of the framebuffer in bytes.","","The total width of the framebuffer in pixels.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Convert from underlying bit representation, preserving all…","","","","This field is polled by the started APs until the kernel …","Shift of the green mask in RGB.","Size of the green mask in RGB.","","","","","","","","","","","","","","","","","","","","","","","Pointer to the EDID information array.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns an iterator over all the memory regions.","Returns an iterator over all the modules that were loaded.","","Address of the raw kernel file.","","The kernel slide. See structure-level documentation for …","LAPIC ID as specified by MADT.","Length of this memory section.","","Memory model of the framebuffer. If set to one, its RGB …","Length of the modules array.","","Pointer to the modules array.","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","Shift of the red mask in RGB.","Size of the red mask in RGB.","Removes the specified flags in-place.","Removes the specified flags in-place.","The amount of rows in the stivale terminal setup by the …","","Pointer to the ACPI RSDP structure.","Server IP in network byte order.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the size of the framebuffer.","Returns the size of this module.","The size of the device tree blob.","","32-bit SMBIOS entry point address. Set to 0 if …","64-bit SMBIOS entry point address. Set to 0 if …","","Pointer to the SMP info array (including BSP).","","Address where this module has been loaded.","ASCII 0-terminated string passed to the module as …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Address of the EFI system table.","","The stack that will be loaded in ESP/RSP once the …","Returns the terminal write function provided by the …","The virtual address of the <code>term_write</code> function, which is …","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Stivale specification says that this field is reserved …",""],"i":[0,0,1,1,1,1,2,1,2,2,1,2,2,1,0,0,0,0,0,0,0,0,1,2,3,4,2,2,2,2,2,2,2,5,5,6,3,5,2,7,1,4,8,6,3,5,2,7,1,4,8,2,7,1,4,8,2,5,2,2,3,4,6,4,4,2,1,2,6,5,2,2,2,2,2,1,4,5,6,5,6,5,5,6,5,6,3,5,2,7,1,4,8,2,2,2,2,5,5,2,2,2,6,3,5,2,7,1,4,8,7,8,2,2,4,5,5,5,5,5,5,5,5,2,6,7,8,2,2,5,5,2,5,2,3,5,5,6,3,3,2,2,2,6,3,5,2,7,1,4,8,6,3,5,2,7,1,4,8,6,3,5,2,7,1,4,8,5,9,9,10,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,9,11,11,12,13,14,15,11,10,16,17,18,19,20,21,11,10,11,10,11,10,11,10,11,10,11,10,11,10,22,22,23,23,24,25,22,26,27,16,28,29,30,31,32,33,17,34,20,18,35,12,19,36,13,14,15,23,37,38,11,39,40,41,42,9,21,43,10,44,24,25,22,26,27,16,28,29,30,31,32,33,17,34,20,18,35,12,19,36,13,14,15,23,37,38,11,39,40,41,42,9,21,43,10,44,19,11,9,21,43,10,44,11,10,26,23,33,11,10,19,23,23,17,23,11,10,20,21,16,16,24,21,21,23,28,11,9,10,11,10,12,23,24,38,39,26,29,35,19,11,11,11,11,11,9,21,10,10,10,10,10,23,22,37,22,37,22,22,37,22,24,25,22,26,27,16,28,29,30,31,32,33,17,34,20,18,35,12,19,36,13,14,15,23,37,38,11,39,40,41,42,9,21,43,10,44,11,10,11,10,11,10,11,10,23,12,22,22,11,10,22,26,27,16,28,29,30,31,32,33,17,34,18,35,19,36,13,14,15,25,17,11,10,11,10,24,25,22,26,27,16,28,29,30,31,32,33,17,34,20,18,35,12,19,36,13,14,15,23,37,38,11,39,40,41,42,9,21,43,10,44,43,44,11,10,11,10,16,18,23,31,23,32,12,21,23,22,18,23,18,23,11,10,24,37,38,39,40,41,42,37,38,39,40,41,42,43,44,25,11,10,11,10,23,22,22,11,10,26,23,27,36,11,10,22,20,14,23,35,35,23,19,24,20,20,11,10,11,10,30,24,12,26,26,23,11,10,24,25,22,26,27,16,28,29,30,31,32,33,17,34,20,18,35,12,19,36,13,14,15,23,37,38,11,39,40,41,42,9,21,43,10,44,24,25,22,26,27,16,28,29,30,31,32,33,17,34,20,18,35,12,19,36,13,14,15,23,37,38,11,39,40,41,42,9,21,43,10,44,24,25,22,26,27,16,28,29,30,31,32,33,17,34,20,18,35,12,19,36,13,14,15,23,37,38,11,39,40,41,42,9,21,43,10,44,23,19,23],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["stivaleheaderflags",3]],[[],["str",15]],null,[[["stivaleheaderflags",3]],["stivaleheaderflags",3]],[[["stivaleheaderflags",3]]],[[["stivaleheaderflags",3]],["stivaleheaderflags",3]],[[["stivaleheaderflags",3]]],[[],["u16",15]],[[["stivaleheaderflags",3]],["stivaleheaderflags",3]],[[["stivaleheaderflags",3]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["stivaleheaderflags",3]],[[],["stivalemoduleiter",3]],[[],["stivalememorymapentrytype",4]],[[],["stivalememorymapentry",3]],[[],["stivalememorymapiter",3]],[[["stivaleheaderflags",3]],["ordering",4]],null,[[["stivaleheaderflags",3]],["bool",15]],[[],["stivaleheaderflags",3]],null,[[],["u64",15]],[[]],[[],["stivalememorymapentrytype",4]],null,[[["stivaleheaderflags",3]],["bool",15]],[[["stivalememorymapentrytype",4]],["bool",15]],[[["intoiterator",8]]],[[["stivaleheaderflags",3]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[["u16",15]]],null,[[["u16",15]]],null,null,[[["u16",15]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u16",15]],[["stivaleheaderflags",3],["option",4,["stivaleheaderflags"]]]],[[["u16",15]],["stivaleheaderflags",3]],[[["u16",15]],["stivaleheaderflags",3]],[[["intoiterator",8]],["stivaleheaderflags",3]],null,null,[[]],[[["stivaleheaderflags",3]]],[[["stivaleheaderflags",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],null,null,[[]],[[],["stivalememorymapiter",3]],null,null,null,[[]],[[],["stivalemoduleiter",3]],[[["stivaleheaderflags",3]],["bool",15]],[[]],[[],["option",4]],[[],["option",4]],[[],["stivaleheaderflags",3]],[[["stivaleheaderflags",3]],[["option",4,["ordering"]],["ordering",4]]],null,null,[[["stivaleheaderflags",3]]],null,[[["stivaleheaderflags",3],["bool",15]]],[[],["u64",15]],null,null,[[]],null,null,[[["stivaleheaderflags",3]],["stivaleheaderflags",3]],[[["stivaleheaderflags",3]]],[[["stivaleheaderflags",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["stivalesmpheadertagflags",3]],[[],["stivalefirmwaretagflags",3]],[[]],[[]],[[]],[[]],[[],["str",15]],null,[[["stivalesmpheadertagflags",3]],["stivalesmpheadertagflags",3]],[[["stivalefirmwaretagflags",3]],["stivalefirmwaretagflags",3]],[[["stivalesmpheadertagflags",3]]],[[["stivalefirmwaretagflags",3]]],[[["stivalesmpheadertagflags",3]],["stivalesmpheadertagflags",3]],[[["stivalefirmwaretagflags",3]],["stivalefirmwaretagflags",3]],[[["stivalesmpheadertagflags",3]]],[[["stivalefirmwaretagflags",3]]],[[],["u64",15]],[[],["u64",15]],[[["stivalesmpheadertagflags",3]],["stivalesmpheadertagflags",3]],[[["stivalefirmwaretagflags",3]],["stivalefirmwaretagflags",3]],[[["stivalesmpheadertagflags",3]]],[[["stivalefirmwaretagflags",3]]],null,null,[[],["str",15]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["stivalesmpheadertagflags",3]],[[],["stivalememorymapentrytype",4]],[[],["stivalememorymapentry",3]],[[],["stivalememorymapiter",3]],[[],["stivalefirmwaretagflags",3]],[[],["stivalemoduleiter",3]],[[["stivalesmpheadertagflags",3]],["ordering",4]],[[["stivalefirmwaretagflags",3]],["ordering",4]],null,[[],[["option",4,["stivalecommandlinetag"]],["stivalecommandlinetag",3]]],null,[[["stivalesmpheadertagflags",3]],["bool",15]],[[["stivalefirmwaretagflags",3]],["bool",15]],null,[[],[["stivaledevicetreetag",3],["option",4,["stivaledevicetreetag"]]]],[[],[["stivaleedidinfotag",3],["option",4,["stivaleedidinfotag"]]]],null,[[],[["option",4,["stivaleefisystemtabletag"]],["stivaleefisystemtabletag",3]]],[[],["stivalesmpheadertagflags",3]],[[],["stivalefirmwaretagflags",3]],null,[[],["u64",15]],null,null,[[]],[[],["stivalememorymapentrytype",4]],null,[[],[["stivaleepochtag",3],["option",4,["stivaleepochtag"]]]],null,[[["stivalesmpheadertagflags",3]],["bool",15]],[[["stivalememorymapentrytype",4]],["bool",15]],[[["stivalefirmwaretagflags",3]],["bool",15]],[[["intoiterator",8]]],[[["intoiterator",8]]],null,[[],[["option",4,["stivalefirmwaretag"]],["stivalefirmwaretag",3]]],[[["u64",15]]],[[["u64",15]]],[[["stivalesmpheadertagflags",3]]],null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],[["stivaleframebuffertag",3],["option",4,["stivaleframebuffertag"]]]],null,[[["u16",15]]],null,[[["u16",15]]],null,null,[[["u16",15]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",15]],[["stivalesmpheadertagflags",3],["option",4,["stivalesmpheadertagflags"]]]],[[["u64",15]],[["option",4,["stivalefirmwaretagflags"]],["stivalefirmwaretagflags",3]]],[[["u64",15]],["stivalesmpheadertagflags",3]],[[["u64",15]],["stivalefirmwaretagflags",3]],[[["u64",15]],["stivalesmpheadertagflags",3]],[[["u64",15]],["stivalefirmwaretagflags",3]],[[["intoiterator",8]],["stivalesmpheadertagflags",3]],[[["intoiterator",8]],["stivalefirmwaretagflags",3]],[[["u64",15]],[["u64",15],["option",4,["u64"]]]],null,null,null,[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["stivalesmpheadertagflags",3]]],[[["stivalefirmwaretagflags",3]]],[[["stivalesmpheadertagflags",3]],["bool",15]],[[["stivalefirmwaretagflags",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["stivalememorymapiter",3]],[[],["stivalemoduleiter",3]],[[],[["option",4,["stivalekernelfiletag"]],["stivalekernelfiletag",3]]],null,[[],[["option",4,["stivalekernelslidetag"]],["stivalekernelslidetag",3]]],null,null,null,[[],[["option",4,["stivalememorymaptag"]],["stivalememorymaptag",3]]],null,null,[[],[["option",4,["stivalemoduletag"]],["stivalemoduletag",3]]],null,[[],[["option",4,["stivalemtrrtag"]],["stivalemtrrtag",3]]],[[["stivalesmpheadertagflags",3]],["bool",15]],[[["stivalefirmwaretagflags",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],null,[[],["stivalesmpheadertagflags",3]],[[],["stivalefirmwaretagflags",3]],[[["stivalesmpheadertagflags",3]],[["option",4,["ordering"]],["ordering",4]]],[[["stivalefirmwaretagflags",3]],[["option",4,["ordering"]],["ordering",4]]],[[],[["option",4,["stivalepxeinfotag"]],["stivalepxeinfotag",3]]],null,null,[[["stivalesmpheadertagflags",3]]],[[["stivalefirmwaretagflags",3]]],null,[[],[["option",4,["stivalersdptag"]],["stivalersdptag",3]]],null,null,[[["stivalesmpheadertagflags",3],["bool",15]]],[[["stivalefirmwaretagflags",3],["bool",15]]],[[],["usize",15]],[[],["u64",15]],null,[[],[["stivalesmbiostag",3],["option",4,["stivalesmbiostag"]]]],null,null,[[],[["option",4,["stivalesmptag"]],["stivalesmptag",3]]],null,[[]],null,null,[[["stivalesmpheadertagflags",3]],["stivalesmpheadertagflags",3]],[[["stivalefirmwaretagflags",3]],["stivalefirmwaretagflags",3]],[[["stivalesmpheadertagflags",3]]],[[["stivalefirmwaretagflags",3]]],null,[[]],null,[[]],null,[[],[["option",4,["stivaleterminaltag"]],["stivaleterminaltag",3]]],[[["stivalesmpheadertagflags",3]]],[[["stivalefirmwaretagflags",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["stivaleuarttag",3],["option",4,["stivaleuarttag"]]]],null,[[],[["option",4,["stivalevmap"]],["stivalevmap",3]]]],"p":[[4,"StivaleMemoryMapEntryType"],[3,"StivaleHeaderFlags"],[3,"StivaleModule"],[3,"StivaleMemoryMapEntry"],[3,"StivaleStruct"],[3,"StivaleHeader"],[3,"StivaleModuleIter"],[3,"StivaleMemoryMapIter"],[4,"StivaleMemoryMapEntryType"],[3,"StivaleFirmwareTagFlags"],[3,"StivaleSmpHeaderTagFlags"],[3,"StivaleSmpInfo"],[3,"StivaleUartTag"],[3,"StivaleDeviceTreeTag"],[3,"StivaleVMap"],[3,"StivaleMemoryMapTag"],[3,"StivaleEdidInfoTag"],[3,"StivaleModuleTag"],[3,"StivaleSmpTag"],[3,"StivaleModule"],[3,"StivaleMemoryMapEntry"],[3,"StivaleFramebufferTag"],[3,"StivaleStruct"],[3,"StivaleHeader"],[3,"StivaleTagHeader"],[3,"StivaleTerminalTag"],[3,"StivaleRsdpTag"],[3,"StivaleEpochTag"],[3,"StivaleFirmwareTag"],[3,"StivaleEfiSystemTableTag"],[3,"StivaleKernelFileTag"],[3,"StivaleKernelSlideTag"],[3,"StivaleCommandLineTag"],[3,"StivaleMtrrTag"],[3,"StivaleSmbiosTag"],[3,"StivalePxeInfoTag"],[3,"StivaleFramebufferHeaderTag"],[3,"StivaleTerminalHeaderTag"],[3,"StivaleSmpHeaderTag"],[3,"StivaleMtrrHeaderTag"],[3,"Stivale5LevelPagingHeaderTag"],[3,"StivaleUnmapNullHeadertag"],[3,"StivaleMemoryMapIter"],[3,"StivaleModuleIter"]]},\
"xmas_elf":{"doc":"","t":[3,8,6,6,11,11,0,11,11,11,11,10,11,10,11,11,11,0,0,12,12,11,11,0,11,11,11,11,0,0,11,11,11,13,13,3,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,11,11,11,11,11,11,11,5,11,11,11,11,11,12,13,13,13,13,13,4,3,13,13,4,3,13,13,3,13,13,3,4,3,13,13,13,13,13,17,4,3,13,13,13,13,13,13,13,13,13,4,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,3,4,3,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,5,11,12,11,12,11,12,12,12,5,11,12,11,12,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,17,17,17,17,17,3,13,13,13,13,13,13,13,13,13,13,13,4,3,3,3,4,13,17,17,17,17,17,13,4,3,13,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,12,12,5,11,12,12,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,17,17,17,17,3,3,4,3,13,13,13,13,13,13,13,13,13,13,17,17,17,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,3,13,13,13,3,13,13,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,4,4,3,3,3,13,13,13,4,3,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,4,3,13,13,3,3,8,3,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,3,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,12,12,12,12],"n":["ElfFile","Extensions","P32","P64","borrow","borrow_mut","dynamic","find_section_by_name","fmt","from","get_dyn_string","get_gnu_buildid","get_gnu_buildid","get_gnu_debuglink","get_gnu_debuglink","get_shstr","get_string","hash","header","header","input","into","new","program","program_header","program_iter","section_header","section_iter","sections","symbol_table","try_from","try_into","type_id","BindNow","Debug","Dynamic","FLAG_1_CONFALT","FLAG_1_DIRECT","FLAG_1_DISPRELDNE","FLAG_1_DISPRELPND","FLAG_1_EDITED","FLAG_1_ENDFILTEE","FLAG_1_GLOBAL","FLAG_1_GLOBAUDIT","FLAG_1_GROUP","FLAG_1_IGNMULDEF","FLAG_1_INITFIRST","FLAG_1_INTERPOSE","FLAG_1_LOADFLTR","FLAG_1_NODEFLIB","FLAG_1_NODELETE","FLAG_1_NODIRECT","FLAG_1_NODUMP","FLAG_1_NOHDR","FLAG_1_NOKSYMS","FLAG_1_NOOPEN","FLAG_1_NORELOC","FLAG_1_NOW","FLAG_1_ORIGIN","FLAG_1_PIE","FLAG_1_SINGLETON","FLAG_1_STUB","FLAG_1_SYMINTPOSE","FLAG_1_TRANS","Fini","FiniArray","FiniArraySize","Flags","Flags1","Hash","Init","InitArray","InitArraySize","JmpRel","Needed","Null","OsSpecific","PltRel","PltRelSize","Pltgot","PreInitArray","PreInitArraySize","ProcessorSpecific","RPath","Rel","RelEnt","RelSize","Rela","RelaEnt","RelaSize","RunPath","SoName","StrSize","StrTab","SymEnt","SymTab","SymTabShIndex","Symbolic","Tag","Tag_","TextRel","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","eq","fmt","fmt","fmt","fmt","from","from","from","get_ptr","get_ptr","get_tag","get_tag","get_val","get_val","into","into","into","ne","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","0","HashTable","borrow","borrow_mut","clone","fmt","from","get_bucket","get_chain","hash","into","lookup","try_from","try_into","type_id","0","AArch64","Aix","Arm","BPF","BigEndian","Class","Class_","Core","Current","Data","Data_","Executable","FreeBSD","Header","Header32","Header64","HeaderPt1","HeaderPt2","HeaderPt2_","HpUx","Ia64","Irix","Linux","LittleEndian","MAGIC","Machine","Machine_","Mips","NetBSD","None","None","None","None","None","OpenBSD","OpenVMS","OsAbi","OsAbi_","Other","Other","Other","Other","Other","PowerPC","ProcessorSpecific","RISC_V","Relocatable","SharedObject","SixtyFour","Solaris","Sparc","SuperH","SystemV","ThirtyTwo","Type","Type_","Version","Version_","X86","X86_64","abi_version","as_class","as_data","as_machine","as_os_abi","as_type","as_version","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class","class","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","data","data","entry_point","entry_point","eq","eq","eq","eq","eq","eq","eq","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","header_size","header_size","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_none","is_none","is_none","is_none","is_none","is_none","machine","machine","magic","ne","ne","ne","ne","ne","ne","ne","os_abi","os_abi","padding","parse_header","ph_count","ph_count","ph_entry_size","ph_entry_size","ph_offset","ph_offset","pt1","pt2","sanity_check","sh_count","sh_count","sh_entry_size","sh_entry_size","sh_offset","sh_offset","sh_str_index","sh_str_index","size","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","version","version","version","0","0","0","0","0","0","0","0","0","Dynamic","Dynamic32","Dynamic64","Empty","FLAG_MASKOS","FLAG_MASKPROC","FLAG_R","FLAG_W","FLAG_X","Flags","GnuRelro","Interp","Load","Note","Note64","Null","OsSpecific","Ph32","Ph64","Phdr","ProcessorSpecific","ProgramHeader","ProgramHeader32","ProgramHeader64","ProgramIter","SegmentData","ShLib","TYPE_GNU_RELRO","TYPE_HIOS","TYPE_HIPROC","TYPE_LOOS","TYPE_LOPROC","Tls","Type","Type_","Undefined","align","align","align","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","eq","eq","file","file_size","file_size","file_size","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_data","get_data","get_data","get_type","get_type","get_type","into","into","into","into","into","into","into","into","into_iter","is_execute","is_read","is_write","mem_size","mem_size","mem_size","ne","ne","next","next_index","offset","offset","offset","parse_program_header","physical_addr","physical_addr","physical_addr","raw_data","raw_data","sanity_check","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","virtual_addr","virtual_addr","virtual_addr","0","0","0","0","0","0","1","0","0","COMPRESS_HIOS","COMPRESS_HIPROC","COMPRESS_LOOS","COMPRESS_LOPROC","CompressionHeader32","CompressionHeader64","CompressionType","CompressionType_","DynSym","DynSymbolTable32","DynSymbolTable64","Dynamic","Dynamic32","Dynamic64","Empty","FiniArray","FnArray32","FnArray64","GRP_COMDAT","GRP_MASKOS","GRP_MASKPROC","Group","Group","Hash","HashTable","InitArray","NoBits","Note","Note64","NoteHeader","Null","OsSpecific","OsSpecific","PreInitArray","ProcessorSpecific","ProcessorSpecific","ProgBits","Rel","Rel","Rel32","Rel64","Rela","Rela","Rela32","Rela64","SHF_ALLOC","SHF_COMPRESSED","SHF_EXECINSTR","SHF_GROUP","SHF_INFO_LINK","SHF_LINK_ORDER","SHF_MASKOS","SHF_MASKPROC","SHF_MERGE","SHF_OS_NONCONFORMING","SHF_STRINGS","SHF_TLS","SHF_WRITE","SHN_ABS","SHN_COMMON","SHN_HIOS","SHN_HIPROC","SHN_HIRESERVE","SHN_LOOS","SHN_LOPROC","SHN_LORESERVE","SHN_UNDEF","SHN_XINDEX","SHT_HIOS","SHT_HIPROC","SHT_HIUSER","SHT_LOOS","SHT_LOPROC","SHT_LOUSER","SectionData","SectionHeader","SectionHeader_","SectionIter","SectionStrings","Sh32","Sh64","ShLib","ShType","ShType_","StrArray","StrTab","SymTab","SymTabShIndex","SymTabShIndex","SymbolTable32","SymbolTable64","Undefined","User","Zlib","address","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","desc","eq","eq","file","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_addend","get_addend","get_data","get_name","get_offset","get_offset","get_offset","get_offset","get_symbol_table_index","get_symbol_table_index","get_symbol_table_index","get_symbol_table_index","get_type","get_type","get_type","get_type","get_type","info","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","link","name","name","ne","ne","next","next","next_index","offset","parse_section_header","raw_data","sanity_check","size","strings","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","flags","indicies","0","0","0","0","0","Binding","Binding_","Common","Default","DynEntry32","DynEntry64","Entry","Entry32","Entry64","File","Func","Global","Hidden","Internal","Local","NoType","Object","OsSpecific","OsSpecific","ProcessorSpecific","ProcessorSpecific","Protected","Section","Tls","Type","Type_","Visibility","Visibility_","Weak","as_binding","as_type","as_visibility","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_binding","get_name","get_name","get_name","get_name","get_name","get_other","get_section_header","get_type","info","info","info","info","info","into","into","into","into","into","into","into","into","into","into","name","name","name","name","name","ne","ne","other","other","other","other","other","shndx","shndx","shndx","shndx","shndx","size","size","size","size","size","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","value","value","value","0","0","0","0"],"q":["xmas_elf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","xmas_elf::dynamic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","xmas_elf::dynamic::Tag","","xmas_elf::hash","","","","","","","","","","","","","","xmas_elf::headerxmas_elf::header::Class","xmas_elf::header::Data","xmas_elf::header::HeaderPt2","","xmas_elf::header::Machine","xmas_elf::header::OsAbi","xmas_elf::header::Type","xmas_elf::header::Version","xmas_elf::program","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","xmas_elf::program::ProgramHeader","","xmas_elf::program::SegmentData","","","","","xmas_elf::program::Type","","xmas_elf::sectionsxmas_elf::sections::CompressionType","","xmas_elf::sections::SectionData","","","","","","","","","","","","","","","","","","","","xmas_elf::sections::SectionHeader","","xmas_elf::sections::ShType","","","xmas_elf::symbol_table","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","xmas_elf::symbol_table::Binding","","xmas_elf::symbol_table::Type",""],"d":["","A trait for things that are common ELF conventions but …","","","","","","","","","","Parse and return the value of the .note.gnu.build-id …","","Parse and return the value of the .gnu_debuglink section, …i":[0,0,0,0,1,1,0,1,1,1,1,2,1,2,1,1,1,0,0,1,1,1,1,0,1,1,1,1,0,0,1,1,1,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,3,4,5,3,4,5,3,5,3,4,5,5,3,4,5,3,4,4,4,4,4,4,4,5,3,3,4,5,3,4,5,3,4,5,3,6,7,0,8,8,8,8,8,8,8,0,8,8,8,8,8,9,10,11,10,10,12,0,0,13,14,0,0,13,11,0,15,15,0,0,0,11,10,11,11,12,0,0,0,10,11,16,12,14,13,10,11,11,0,0,16,12,14,11,10,10,13,10,13,13,16,11,10,10,11,16,0,0,0,0,10,10,17,18,19,20,21,9,22,23,17,15,24,18,16,19,12,22,14,21,11,9,13,20,10,23,17,15,24,18,16,19,12,22,14,21,11,9,13,20,10,17,17,23,17,15,18,16,19,12,22,14,21,11,9,13,20,10,17,17,15,24,18,16,12,14,11,13,10,24,23,23,17,15,15,24,24,18,16,19,12,22,14,21,11,9,13,20,10,23,17,15,24,18,16,19,12,22,14,21,11,9,13,20,10,15,24,23,17,15,24,18,16,19,12,22,14,21,11,9,13,20,10,18,16,19,12,22,14,15,24,17,18,16,12,14,11,13,10,17,17,17,0,15,24,15,24,15,24,23,23,0,15,24,15,24,15,24,15,24,15,23,17,15,24,18,16,19,12,22,14,21,11,9,13,20,10,23,17,15,24,18,16,19,12,22,14,21,11,9,13,20,10,15,24,23,17,15,24,18,16,19,12,22,14,21,11,9,13,20,10,17,15,17,24,25,26,27,28,29,30,31,32,33,34,35,35,35,0,0,0,0,0,0,34,34,34,34,35,34,34,36,36,34,34,0,0,0,0,0,34,0,0,0,0,0,34,0,0,35,36,37,38,39,36,37,38,33,40,34,35,39,36,37,38,33,40,34,35,39,36,37,38,33,40,34,37,38,33,40,33,34,39,36,37,38,36,37,38,39,36,36,37,37,38,38,33,33,33,33,40,34,35,39,36,37,38,33,40,34,35,36,37,38,36,37,38,39,36,37,38,33,40,34,35,39,33,33,33,36,37,38,33,34,39,39,36,37,38,0,36,37,38,37,38,0,39,36,37,38,33,40,34,35,39,36,37,38,33,40,34,35,37,38,39,36,37,38,33,40,34,35,36,37,38,41,42,43,44,45,46,46,47,48,0,0,0,0,0,0,0,0,49,50,50,49,50,50,50,49,50,50,0,0,0,49,50,49,50,49,49,49,50,0,49,49,51,49,49,51,49,0,49,50,50,0,49,50,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52,52,49,0,0,50,49,49,49,50,50,50,50,49,51,52,53,52,54,55,49,50,56,57,58,59,51,60,61,62,53,52,54,55,49,50,56,57,58,59,51,60,61,62,53,52,55,49,57,58,59,51,62,62,49,51,53,52,53,52,52,54,55,49,50,56,57,58,59,51,60,61,62,53,52,54,55,49,50,56,57,58,59,51,60,61,62,60,60,52,52,60,60,61,61,60,60,61,61,52,60,60,61,61,52,53,52,54,55,49,50,56,57,58,59,51,60,61,62,53,56,52,52,62,49,51,53,56,53,52,0,52,0,52,50,53,52,54,55,49,50,56,57,58,59,51,60,61,62,53,52,54,55,49,50,56,57,58,59,51,60,61,62,52,62,53,52,54,55,49,50,56,57,58,59,51,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,74,82,82,83,84,85,86,87,0,0,88,89,0,0,0,0,0,88,88,90,89,89,90,88,88,90,88,90,88,89,88,88,0,0,0,0,90,91,92,93,94,95,96,97,93,89,91,90,92,88,94,95,96,97,93,89,91,90,92,88,93,89,91,90,92,88,90,88,98,94,95,96,97,93,89,91,90,92,88,94,95,96,97,93,89,91,90,92,88,98,98,94,95,96,97,98,98,98,98,94,95,96,97,94,95,96,97,93,89,91,90,92,88,98,94,95,96,97,90,88,98,94,95,96,97,98,94,95,96,97,98,94,95,96,97,94,95,96,97,93,89,91,90,92,88,94,95,96,97,93,89,91,90,92,88,94,95,96,97,93,89,91,90,92,88,98,94,95,96,97,99,100,101,102],"f":[null,null,null,null,[[]],[[]],null,[[["str",15]],[["option",4,["sectionheader"]],["sectionheader",4]]],[[["formatter",3]],["result",6]],[[]],[[["u32",15]],[["result",4,["str","str"]],["str",15],["str",15]]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["u32",15]],[["result",4,["str","str"]],["str",15],["str",15]]],[[["u32",15]],[["result",4,["str","str"]],["str",15],["str",15]]],null,null,null,null,[[]],[[],[["str",15],["result",4,["elffile","str"]],["elffile",3]]],null,[[["u16",15]],[["result",4,["programheader","str"]],["programheader",4],["str",15]]],[[],["programiter",3]],[[["u16",15]],[["result",4,["sectionheader","str"]],["sectionheader",4],["str",15]]],[[],["sectioniter",3]],null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["tag_",3]],[[["tag",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],[["result",4,["p64","str"]],["p64",6],["str",15]]],[[],[["result",4,["p32","str"]],["p32",6],["str",15]]],[[],[["result",4,["tag","str"]],["tag",4,["p32"]],["str",15]]],[[],[["result",4,["tag","str"]],["str",15],["tag",4,["p64"]]]],[[],[["result",4,["p64","str"]],["p64",6],["str",15]]],[[],[["result",4,["p32","str"]],["p32",6],["str",15]]],[[]],[[]],[[]],[[["tag",4]],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[]],[[]],[[],["hashtable",3]],[[["formatter",3]],["result",6]],[[]],[[["u32",15]],["u32",15]],[[["u32",15]],["u32",15]],[[["str",15]],["u32",15]],[[]],[[["str",15]],["entry",8]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["class",4]],[[],["data",4]],[[],["machine",4]],[[],["osabi",4]],[[],["type",4]],[[],["version",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["class",4]],null,[[],["header",3]],[[],["headerpt1",3]],[[],["headerpt2",4]],[[],["class_",3]],[[],["class",4]],[[],["data_",3]],[[],["data",4]],[[],["version_",3]],[[],["version",4]],[[],["osabi_",3]],[[],["osabi",4]],[[],["type_",3]],[[],["type",4]],[[],["machine_",3]],[[],["machine",4]],[[],["data",4]],null,[[],["u64",15]],null,[[["class_",3]],["bool",15]],[[["class",4]],["bool",15]],[[["data",4]],["bool",15]],[[["version",4]],["bool",15]],[[["osabi",4]],["bool",15]],[[["type",4]],["bool",15]],[[["machine",4]],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u16",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["machine_",3]],null,null,[[["class_",3]],["bool",15]],[[["class",4]],["bool",15]],[[["data",4]],["bool",15]],[[["version",4]],["bool",15]],[[["osabi",4]],["bool",15]],[[["type",4]],["bool",15]],[[["machine",4]],["bool",15]],[[],["osabi",4]],null,null,[[],[["str",15],["result",4,["header","str"]],["header",3]]],[[],["u16",15]],null,[[],["u16",15]],null,[[],["u64",15]],null,null,null,[[["elffile",3]],[["result",4,["str"]],["str",15]]],[[],["u16",15]],null,[[],["u16",15]],null,[[],["u64",15]],null,[[],["u16",15]],null,[[],["usize",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["type_",3]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["version",4]],[[],["u32",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["u64",15]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["programiter",3]],[[],["programheader",4]],[[],["programheader32",3]],[[],["programheader64",3]],[[],["flags",3]],[[],["type_",3]],[[],["type",4]],[[],["programheader32",3]],[[],["programheader64",3]],[[],["flags",3]],[[],["type_",3]],[[["flags",3]],["bool",15]],[[["type",4]],["bool",15]],null,[[],["u64",15]],null,null,[[],["flags",3]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["elffile",3]],[["segmentdata",4],["result",4,["segmentdata","str"]],["str",15]]],[[["elffile",3]],[["segmentdata",4],["result",4,["segmentdata","str"]],["str",15]]],[[["elffile",3]],[["segmentdata",4],["result",4,["segmentdata","str"]],["str",15]]],[[],[["str",15],["result",4,["type","str"]],["type",4]]],[[],[["str",15],["result",4,["type","str"]],["type",4]]],[[],[["str",15],["result",4,["type","str"]],["type",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u64",15]],null,null,[[["flags",3]],["bool",15]],[[["type",4]],["bool",15]],[[],["option",4]],null,[[],["u64",15]],null,null,[[["u16",15],["header",3]],[["result",4,["programheader","str"]],["programheader",4],["str",15]]],[[],["u64",15]],null,null,[[["elffile",3]]],[[["elffile",3]]],[[["elffile",3],["programheader",4]],[["result",4,["str"]],["str",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["u64",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["sectioniter",3]],[[],["sectionheader",4]],[[],["shtype_",3]],[[],["shtype",4]],[[],["compressionheader64",3]],[[],["compressionheader32",3]],[[],["compressiontype_",3]],[[],["compressiontype",4]],[[],["noteheader",3]],[[]],[[["shtype",4]],["bool",15]],[[["compressiontype",4]],["bool",15]],null,[[],["u64",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[],["u32",15]],[[["elffile",3]],[["str",15],["result",4,["sectiondata","str"]],["sectiondata",4]]],[[["elffile",3]],[["result",4,["str","str"]],["str",15],["str",15]]],[[],["u64",15]],[[],["u32",15]],[[],["u64",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],[["str",15],["shtype",4],["result",4,["shtype","str"]]]],[[],["u32",15]],[[],["u8",15]],[[],["u8",15]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[],["str",15]],[[["shtype",4]],["bool",15]],[[["compressiontype",4]],["bool",15]],[[],["option",4]],[[],[["option",4,["str"]],["str",15]]],null,[[],["u64",15]],[[["u16",15],["header",3]],[["result",4,["sectionheader","str"]],["sectionheader",4],["str",15]]],[[["elffile",3]]],[[["elffile",3],["sectionheader",4]],[["result",4,["str"]],["str",15]]],[[],["u64",15]],[[],[["result",4,["sectionstrings"]],["sectionstrings",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["shtype_",3]],[[],["u32",15]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["str",15],["result",4,["binding","str"]],["binding",4]]],[[],[["str",15],["result",4,["type","str"]],["type",4]]],[[],["visibility",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["visibility_",3]],[[],["visibility",4]],[[],["binding_",3]],[[],["binding",4]],[[],["type_",3]],[[],["type",4]],[[["binding",4]],["bool",15]],[[["type",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["str",15],["result",4,["binding","str"]],["binding",4]]],[[["elffile",3]],[["result",4,["str","str"]],["str",15],["str",15]]],[[["elffile",3]],[["result",4,["str","str"]],["str",15],["str",15]]],[[["elffile",3]],[["result",4,["str","str"]],["str",15],["str",15]]],[[["elffile",3]],[["result",4,["str","str"]],["str",15],["str",15]]],[[["elffile",3]],[["result",4,["str","str"]],["str",15],["str",15]]],[[],["visibility",4]],[[["elffile",3],["usize",15]],[["sectionheader",4],["result",4,["sectionheader","str"]],["str",15]]],[[],[["str",15],["result",4,["type","str"]],["type",4]]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[["binding",4]],["bool",15]],[[["type",4]],["bool",15]],[[],["visibility_",3]],[[],["visibility_",3]],[[],["visibility_",3]],[[],["visibility_",3]],[[],["visibility_",3]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],null,null,null,null],"p":[[3,"ElfFile"],[8,"Extensions"],[4,"Tag"],[3,"Dynamic"],[3,"Tag_"],[13,"OsSpecific"],[13,"ProcessorSpecific"],[3,"HashTable"],[3,"Type_"],[4,"Machine"],[4,"OsAbi"],[4,"Data"],[4,"Type"],[4,"Version"],[4,"HeaderPt2"],[4,"Class"],[3,"HeaderPt1"],[3,"Class_"],[3,"Data_"],[3,"Machine_"],[3,"OsAbi_"],[3,"Version_"],[3,"Header"],[3,"HeaderPt2_"],[13,"Other"],[13,"Other"],[13,"Header32"],[13,"Header64"],[13,"Other"],[13,"Other"],[13,"ProcessorSpecific"],[13,"Other"],[3,"Flags"],[4,"Type"],[4,"SegmentData"],[4,"ProgramHeader"],[3,"ProgramHeader32"],[3,"ProgramHeader64"],[3,"ProgramIter"],[3,"Type_"],[13,"Ph32"],[13,"Ph64"],[13,"Undefined"],[13,"Dynamic32"],[13,"Dynamic64"],[13,"Note64"],[13,"OsSpecific"],[13,"ProcessorSpecific"],[4,"ShType"],[4,"SectionData"],[4,"CompressionType"],[4,"SectionHeader"],[3,"SectionIter"],[3,"SectionHeader_"],[3,"ShType_"],[3,"SectionStrings"],[3,"CompressionHeader64"],[3,"CompressionHeader32"],[3,"CompressionType_"],[3,"Rela"],[3,"Rel"],[3,"NoteHeader"],[13,"OsSpecific"],[13,"ProcessorSpecific"],[13,"Undefined"],[13,"StrArray"],[13,"FnArray32"],[13,"FnArray64"],[13,"SymbolTable32"],[13,"SymbolTable64"],[13,"DynSymbolTable32"],[13,"DynSymbolTable64"],[13,"SymTabShIndex"],[13,"Note64"],[13,"Rela32"],[13,"Rela64"],[13,"Rel32"],[13,"Rel64"],[13,"Dynamic32"],[13,"Dynamic64"],[13,"HashTable"],[13,"Group"],[13,"Sh32"],[13,"Sh64"],[13,"OsSpecific"],[13,"ProcessorSpecific"],[13,"User"],[4,"Type"],[4,"Visibility"],[4,"Binding"],[3,"Binding_"],[3,"Type_"],[3,"Visibility_"],[3,"Entry32"],[3,"Entry64"],[3,"DynEntry32"],[3,"DynEntry64"],[8,"Entry"],[13,"OsSpecific"],[13,"ProcessorSpecific"],[13,"OsSpecific"],[13,"ProcessorSpecific"]]},\
"zero":{"doc":"Functions for reading binary data into Rust data …","t":[8,3,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,11,11,11,11],"n":["Pod","StrReaderIterator","borrow","borrow_mut","clone","fmt","from","into","into_iter","next","read","read_array","read_array_unsafe","read_str","read_str_unsafe","read_strs_to_null","read_unsafe","size_hint","try_from","try_into","type_id"],"q":["zero","","","","","","","","","","","","","","","","","","","",""],"d":["Implementing this trait means that the concrete type is …","Iterates over <code>self.data</code>, yielding strings …","","","","","","","","","Reads a single <code>T</code> from <code>input</code>.","Read an array of <code>T</code>s from input.","Reads an array of <code>T</code>s from <code>input</code> with no checks.","Read a string from <code>input</code>. The string must be a …","Reads a null-terminated string from <code>input</code> with no checks.","Returns an iterator which will return a sequence of …","Reads a <code>T</code> from <code>input</code> with no checks.","","","",""],"i":[0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1],"f":[null,null,[[]],[[]],[[],["strreaderiterator",3]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],[["str",15],["option",4,["str"]]]],[[]],[[]],[[]],[[],["str",15]],[[],["str",15]],[[],["strreaderiterator",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"StrReaderIterator"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};