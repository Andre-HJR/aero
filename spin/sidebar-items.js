window.SIDEBAR_ITEMS = {"mod":[["mutex","Locks that have the same behaviour as a mutex."],["once","Synchronization primitives for one-time evaluation."],["relax","Strategies that determine the behaviour of locks when encountering contention."],["rwlock","A lock that provides data access to either one writer or many readers."]],"type":[["Mutex","A primitive that synchronizes the execution of multiple threads. See [`mutex::Mutex`] for documentation."],["Once","A primitive that provides lazy one-time initialization. See [`once::Once`] for documentation."],["RwLock","A lock that provides data access to either one writer or many readers. See [`rwlock::RwLock`] for documentation."],["RwLockUpgradableGuard","A guard that provides immutable data access but can be upgraded to [`RwLockWriteGuard`]. See [`rwlock::RwLockUpgradableGuard`] for documentation."],["RwLockWriteGuard","A guard that provides mutable data access. See [`rwlock::RwLockWriteGuard`] for documentation."]]};