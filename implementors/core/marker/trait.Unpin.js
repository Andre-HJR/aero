(function() {var implementors = {};
implementors["aero"] = [{"text":"impl Unpin for MousePoition","synthetic":true,"types":[]},{"text":"impl Unpin for GDTDescriptor","synthetic":true,"types":[]},{"text":"impl Unpin for GDTEntry","synthetic":true,"types":[]},{"text":"impl Unpin for GDT","synthetic":true,"types":[]},{"text":"impl Unpin for GLOBAL_DESCRIPTOR_TABLE","synthetic":true,"types":[]},{"text":"impl Unpin for IDTFlags","synthetic":true,"types":[]},{"text":"impl Unpin for IDTDescriptor","synthetic":true,"types":[]},{"text":"impl Unpin for IDTEntry","synthetic":true,"types":[]},{"text":"impl Unpin for AeroSystemAllocator","synthetic":true,"types":[]},{"text":"impl Unpin for PITDescriptor","synthetic":true,"types":[]},{"text":"impl Unpin for ScreenChar","synthetic":true,"types":[]},{"text":"impl Unpin for Buffer","synthetic":true,"types":[]},{"text":"impl Unpin for Color","synthetic":true,"types":[]},{"text":"impl Unpin for ColorCode","synthetic":true,"types":[]},{"text":"impl Unpin for RENDERER","synthetic":true,"types":[]},{"text":"impl Unpin for Rendy","synthetic":true,"types":[]}];
implementors["bootloader"] = [{"text":"impl Unpin for MemoryMap","synthetic":true,"types":[]},{"text":"impl Unpin for MemoryRegion","synthetic":true,"types":[]},{"text":"impl Unpin for FrameRange","synthetic":true,"types":[]},{"text":"impl Unpin for MemoryRegionType","synthetic":true,"types":[]},{"text":"impl Unpin for BootInfo","synthetic":true,"types":[]},{"text":"impl Unpin for TlsTemplate","synthetic":true,"types":[]}];
implementors["spin"] = [{"text":"impl&lt;T:&nbsp;?Sized&gt; Unpin for Mutex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for MutexGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Unpin for RwLock&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for RwLockReadGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for RwLockWriteGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for RwLockUpgradeableGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Once&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["volatile"] = [{"text":"impl&lt;T&gt; Unpin for Volatile&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ReadOnly&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for WriteOnly&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["x86_64"] = [{"text":"impl Unpin for VirtAddr","synthetic":true,"types":[]},{"text":"impl Unpin for PhysAddr","synthetic":true,"types":[]},{"text":"impl Unpin for VirtAddrNotValid","synthetic":true,"types":[]},{"text":"impl Unpin for PhysAddrNotValid","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for PortReadOnly&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for PortWriteOnly&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Port&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for RdRand","synthetic":true,"types":[]},{"text":"impl Unpin for InvPicdCommand","synthetic":true,"types":[]},{"text":"impl Unpin for Pcid","synthetic":true,"types":[]},{"text":"impl Unpin for Cr0","synthetic":true,"types":[]},{"text":"impl Unpin for Cr0Flags","synthetic":true,"types":[]},{"text":"impl Unpin for Cr2","synthetic":true,"types":[]},{"text":"impl Unpin for Cr3","synthetic":true,"types":[]},{"text":"impl Unpin for Cr3Flags","synthetic":true,"types":[]},{"text":"impl Unpin for Cr4","synthetic":true,"types":[]},{"text":"impl Unpin for Cr4Flags","synthetic":true,"types":[]},{"text":"impl Unpin for Msr","synthetic":true,"types":[]},{"text":"impl Unpin for Efer","synthetic":true,"types":[]},{"text":"impl Unpin for FsBase","synthetic":true,"types":[]},{"text":"impl Unpin for GsBase","synthetic":true,"types":[]},{"text":"impl Unpin for KernelGsBase","synthetic":true,"types":[]},{"text":"impl Unpin for Star","synthetic":true,"types":[]},{"text":"impl Unpin for LStar","synthetic":true,"types":[]},{"text":"impl Unpin for SFMask","synthetic":true,"types":[]},{"text":"impl Unpin for EferFlags","synthetic":true,"types":[]},{"text":"impl Unpin for RFlags","synthetic":true,"types":[]},{"text":"impl Unpin for SegmentSelector","synthetic":true,"types":[]},{"text":"impl Unpin for GlobalDescriptorTable","synthetic":true,"types":[]},{"text":"impl Unpin for Descriptor","synthetic":true,"types":[]},{"text":"impl Unpin for DescriptorFlags","synthetic":true,"types":[]},{"text":"impl Unpin for InterruptDescriptorTable","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Unpin for Entry&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for EntryOptions","synthetic":true,"types":[]},{"text":"impl Unpin for InterruptStackFrame","synthetic":true,"types":[]},{"text":"impl Unpin for InterruptStackFrameValue","synthetic":true,"types":[]},{"text":"impl Unpin for PageFaultErrorCode","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for PhysFrame&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for PhysFrameRange&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for PhysFrameRangeInclusive&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; Unpin for MappedPageTable&lt;'a, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for OffsetPageTable&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for RecursivePageTable&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for InvalidPageTable","synthetic":true,"types":[]},{"text":"impl Unpin for TranslateResult","synthetic":true,"types":[]},{"text":"impl Unpin for MappedFrame","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for MapperFlush&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for MapperFlushAll","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for MapToError&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for UnmapError","synthetic":true,"types":[]},{"text":"impl Unpin for FlagUpdateError","synthetic":true,"types":[]},{"text":"impl Unpin for TranslateError","synthetic":true,"types":[]},{"text":"impl Unpin for Size4KiB","synthetic":true,"types":[]},{"text":"impl Unpin for Size2MiB","synthetic":true,"types":[]},{"text":"impl Unpin for Size1GiB","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Page&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for PageRange&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for PageRangeInclusive&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for AddressNotAligned","synthetic":true,"types":[]},{"text":"impl Unpin for FrameError","synthetic":true,"types":[]},{"text":"impl Unpin for PageTableEntry","synthetic":true,"types":[]},{"text":"impl Unpin for PageTableFlags","synthetic":true,"types":[]},{"text":"impl Unpin for PageTable","synthetic":true,"types":[]},{"text":"impl Unpin for PageTableIndex","synthetic":true,"types":[]},{"text":"impl Unpin for PageOffset","synthetic":true,"types":[]},{"text":"impl Unpin for TaskStateSegment","synthetic":true,"types":[]},{"text":"impl Unpin for DescriptorTablePointer","synthetic":true,"types":[]},{"text":"impl Unpin for PrivilegeLevel","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()